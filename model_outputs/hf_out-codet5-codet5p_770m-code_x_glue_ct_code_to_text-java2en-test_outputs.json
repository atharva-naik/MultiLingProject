{
    "accuracy": 0,
    "bleu": {
        "bleu": 0.19085687127459253,
        "precisions": [
            0.514033889485153,
            0.3066644227532817,
            0.2021413873679071,
            0.13377478651034883
        ],
        "brevity_penalty": 0.7469415803487608,
        "length_ratio": 0.7741326350772949,
        "translation_length": 30747,
        "reference_length": 39718
    },
    "codebleu": 0,
    "preds": [
        "Use sequential ids to generate unique ids.",
        "Convert a character to an integer.",
        "Maps two characters to a byte.\n\n@param a first character\n@param b second character\n@return byte",
        "Returns the timestamp of the message.\n\n@return the timestamp of the message, or null if the message is not of the correct\nversion.",
        "Returns the MAC fragment of the message.\n\n@return the MAC fragment of the message.",
        "Sets a property.\n\n@param key the key\n@param value the value",
        "Sets the Facebook user credentials.\n\n@param userId\nThe Facebook user ID\n@param token\nThe Facebook user token\n@deprecated Use {@link SocializeConfig#setFacebookUserCredentials(String, String)} instead",
        "Sets the Socialize credentials.\n\n@param consumerKey\nthe consumer key\n@param consumerSecret\nthe consumer secret",
        "Merges the properties from another Properties object.\n\n@param other\nthe other Properties object.\n@param toBeRemoved\nthe set of keys to be removed from the Properties object.",
        "Performs a share on the given entity.\n\n@param context The activity that is performing the share.\n@param entity The entity to share.\n@param shareType The type of share to perform.\n@param shareAddListener A listener to receive a notification of the success or failure of the share.",
        "Handles a non-network share.\n\n@param activity The activity that is performing the share.\n@param session The session that is sharing the share.\n@param shareType The type of share to share.\n@param share The share to share.\n@param shareText The text to share.\n@param location The location to share.\n@param shareAddListener The listener to call when the share is created.",
        "Adds a comment to an entity.\n@param context the activity that is performing the action.\n@param entity the entity to which the comment should be added.\n@param text the text of the comment.\n@param listener a listener to receive a notification when the comment has been added.",
        "Delete a comment\n@param context The context used to handle the callback\n@param id The id of the comment to delete\n@param listener The listener to receive the event",
        "Adds a comment to an entity.\n@param context the activity that is communicating with the Facebook app.\n@param entity the entity to add a comment to.\n@param text the text of the comment.\n@param commentOptions the options for the comment.\n@param listener a listener to be notified of the success of the comment add operation.\n@param networks a list of networks that are allowed to post the comment.",
        "Get a comment\n@param context The context used to run the callback\n@param listener The listener to receive the result\n@param id The id of the comment to get",
        "Get comments from the server.\n@param context the context used to retrieve the list of comments.\n@param listener a listener to receive a notification when the list of comments has been retrieved.\n@param ids the ids of the comments to retrieve.",
        "Get comments from a user\n@param context The context used to retrieve the comments\n@param user The user to get comments for\n@param start The start index of the range of comments to retrieve\n@param end The end index of the range of comments to retrieve (exclusive)\n@param listener The listener to receive the comments",
        "Get comments from a specific entity\n@param context The context used to retrieve the comments\n@param entityKey The key of the entity to retrieve comments for\n@param start The start index of the range of comments to retrieve\n@param end The end index of the range of comments to retrieve (exclusive)\n@param listener The listener to receive the comments",
        "Get comments from the application.\n@param context the context.\n@param start the start index.\n@param end the end index.\n@param listener the listener.",
        "Show comment view\n\n@param context\n@param entity\n@param listener",
        "Parses a JSON string into a JSONObject.\n@param json The JSON string to parse.\n@return The parsed JSONObject.\n@throws JSONException",
        "Opens a URL and returns the response as a String.\n\n@param url the URL to open\n@param method the HTTP method to use\n@param params the parameters to pass to the URL\n@return the response as a String\n@throws MalformedURLException if the URL is malformed\n@throws IOException if an I/O error occurs",
        "Parses the given JSON string and returns the parsed JSON object.\n\n@param response the JSON string to parse\n@return the parsed JSON object\n@throws JSONException if the JSON string is not valid JSON\n@throws FacebookError if the response is not a valid JSON response",
        "Show an alert with a title and message.\n\n@param context The context used to show the alert.\n@param title  The title of the alert.\n@param text   The text of the alert.",
        "Log a message at the DEBUG level.\n\n@param tag\n@param msg",
        "Returns the runtime type of the given value if it is more specific than the given type.\n\n@param type the type to check\n@param value the value to check\n@return the runtime type of the given value if it is more specific than the given type",
        "Sets the entity to be used in the request. If the entity name is empty, the key is set.\n\n@param entity The entity to set.",
        "Builds the URL to the profile image for the given id.\n\n@param id\nthe id of the profile image\n@return the URL to the profile image",
        "Called when the profile picture has been changed.\n@param bitmap the changed image.",
        "Generates the signature for the request.\n\n@return signature\n@throws OAuthMessageSignerException",
        "Normalizes the request parameters.\n\n@return the normalized request parameters\n@throws IOException if an error occurs",
        "Show the authorization dialog.\n\n@param activity\nThe activity that is used to show the dialog.\n@param listener\nA listener, which allows to handle the dialog's events, as an instance of the\ntype {@link DialogListener}",
        "Start the authorization dialog.\n\n@param activity the activity that is requesting the authorization.\n@param permissions the permissions that are granted.\n@param activityCode the code of the activity that is requesting the authorization.\n@param listener the listener to receive the callback.",
        "Validates an intent to be an activity.\n\n@param context the context to use.\n@param intent the intent to validate.\n@return true if the intent is valid, false otherwise.",
        "Logout the user from the Facebook app.\n@param context the context used to clear the cookies\n@return the response from Facebook",
        "Show a dialog with the given action and parameters.\n\n@param context\nThe context used to show the dialog.\n@param action\nThe action to perform.\n@param parameters\nThe parameters to pass to the action.\n@param listener\nThe listener to receive the dialog's result.",
        "Serializes a date.\n\n@param src the date to serialize\n@param typeOfSrc the type of the source\n@param context the context\n@return the serialized date",
        "Link the listener to the activity.\n\n@param context The activity to link to.\n@param listener The listener to link.\n@deprecated Use {@link SocializeAuthListenerProxy#link(Activity, SocializeAuthListener)} instead.",
        "Links the current user to the Socialize app.\n\n@param context the Activity that is associated with the Socialize app.\n@param listener the listener that will be notified when the user has been linked to the app.\n@param permissions one or more permissions that the user has to have.\n@deprecated Use {@link SocializeAuthListener#link(Activity, SocializeAuthListener)} instead.",
        "Link the user to the Socialize app.\n\n@param context the Activity that is responsible for launching the Activity.\n@param token the access token to use.\n@param verifyPermissions true if the user must have permissions to access the app.\n@param listener a listener to be notified of the success or failure of the authentication process.\n@deprecated Use {@link SocializeAuthListener#onSuccess(String)} instead.",
        "Posts a text to the Facebook page.\n\n@param context the context used to post to the Facebook page.\n@param entity the entity to post to the Facebook page.\n@param text the text to post.\n@param listener a listener to receive a notification of the success or failure of the share.",
        "Extend the access token.\n\n@param context the activity context.\n@param listener the listener.\n@deprecated Use {@link SocializeAuthListener#extendAccessToken(Activity, SocializeAuthListener)} instead.",
        "Get the current permissions for the user.\n\n@param context\nThe context used to retrieve the permissions.\n@param token\nThe access token.\n@param callback\nThe callback to be called when the permissions are available.",
        "Get the hash keys for the app.\n@param context the context.\n@return the hash keys.\n@throws NoSuchAlgorithmException if the algorithm is not supported.",
        "Saves an entity to the database.\n@param context the activity context\n@param e the entity to save\n@param listener a listener to receive a notification when the entity has been saved",
        "Retrieves an entity by its key.\n\n@param context the activity context.\n@param key the entity key.\n@param listener the listener to receive the entity.",
        "Retrieves an entity by id.\n\n@param context the activity context.\n@param id the entity id.\n@param listener a listener to receive a notification when the entity is retrieved.",
        "Retrieves a range of entities in the specified order.\n\n@param context the current Activity or Fragment's context.\n@param start the first index to retrieve.\n@param end the last index to retrieve (not inclusive).\n@param listener a listener to receive a list of entities.",
        "Retrieves a list of entities sorted by creation date.\n@param context the activity context.\n@param listener a listener to receive the list of entities.\n@param keys a list of keys to retrieve.",
        "Override this method to provide your own implementation of ContextMenu.",
        "Subscribes to the specified entity.\n@param context the activity context\n@param e the entity to subscribe to\n@param type the subscription type\n@param listener the result listener",
        "Checks if the entity is subscribed to the specified type.\n@param context the activity context\n@param e the entity to check\n@param type the type of subscription to check\n@param listener a listener to be notified of the subscription status",
        "Check if the user is registered with the GCM service.\n\n@param context The Android context.\n@param session The Socialize session.\n@return True if the user is registered with the GCM service.",
        "Returns the next token from the reader.\n\n@return the next token from the reader.\n@throws IOException if the reader is closed.",
        "Advances to the next null token.\n\n@throws IOException if an I/O error occurs",
        "Reads an escape character.\n\n@return the character read.\n@throws IOException if an I/O error occurs.",
        "Shows a share dialog for the specified entity.",
        "Shows a share dialog with the specified entity.\n\n@param context the activity context.\n@param entity the entity to share.\n@param listener a listener to receive a notification of the success or failure of the share.",
        "Share via email\n\n@param context\n@param entity\n@param listener",
        "Share a entity via google plus.\n\n@param context\nThe context used to launch the activity.\n@param entity\nThe entity to share.\n@param listener\nThe listener to receive a notification when the share has been\ncompleted.",
        "Share entity via other\n\n@param context\n@param entity\n@param listener",
        "Share via SMS\n\n@param context\n@param entity\n@param listener",
        "Share a entity via social networks\n\n@param context\n@param entity\n@param shareOptions\n@param listener\n@param networks",
        "Get a share\n\n@param context\n@param listener\n@param id",
        "Get shares from the share list\n@param context the context used to retrieve the shares\n@param listener the listener to receive the shares\n@param ids the ids of the shares to retrieve",
        "Get shares by user\n@param context\n@param user\n@param start\n@param end\n@param listener",
        "Get shares by entity\n@param context\n@param entityKey\n@param start\n@param end\n@param listener",
        "Get shares by application\n@param context the context\n@param start the start index\n@param end the end index\n@param listener the listener",
        "Like an entity\n@param context the context\n@param entity the entity\n@param listener the listener",
        "Like an entity.\n\n@param context the context used to perform the like operation.\n@param entity the entity to like.\n@param likeOptions the options for the like operation.\n@param listener a listener to be notified of the event.\n@param networks the networks to connect to.",
        "Unlike an entity\n@param context the context\n@param entityKey the entity key\n@param listener the listener",
        "Get a Like for an entity\n@param context the context used to retrieve the entity\n@param entityKey the key of the entity\n@param listener the listener to receive the event",
        "Get a like\n@param context The context used to retrieve the like\n@param id The id of the like\n@param listener The listener to receive the event",
        "Get is liked status of an entity\n\n@param context\n@param entityKey\n@param listener",
        "Get a list of likes for a user\n@param context The context used to retrieve the list of likes\n@param user The user to get the likes for\n@param start The start index of the list to retrieve\n@param end The end index of the list to retrieve (exclusive)\n@param listener The listener to receive the list of likes",
        "Get a list of likes for a specific entity\n@param context the context used to retrieve the list of likes\n@param entityKey the key of the entity\n@param start the index of the first item to retrieve\n@param end the index of the last item to retrieve (not inclusive)\n@param listener a listener to receive the list of likes",
        "Returns the Facebook instance.\n\n@deprecated Use {@link #getFacebook(Context)} instead",
        "Collect the header parameters from the request.\n\n@param request the request being processed\n@param out the output parameters",
        "Collects the body parameters from the request.\n\n@param request the request\n@param out the output parameters\n@throws IOException if an error occurs",
        "Collect the query parameters from the request.\n\n@param request the request being processed\n@param out the output parameter map",
        "Creates a new JSON writer.\n\n@param writer the writer to write JSON to.\n@return a new JSON writer.\n@throws IOException if an I/O error occurs.",
        "Creates a default implementation constructor for the given raw type.",
        "Replaces all new lines in a string.\n@param src the string to replace\n@param from the start index of the replacement\n@param to the end index of the replacement\n@return the string with the new lines replaced",
        "Reload the action bar.",
        "Returns the simple location of the address.\n\n@param address the address\n@return the simple location of the address",
        "Get user information from Graph.\n\n@param session\nthe current session\n@param listener\nthe listener",
        "Gets the actions from the application.\n@param context the context to use.\n@param start the index of the first item to retrieve.\n@param end the index of the last item to retrieve.\n@param listener the listener to receive the actions.",
        "Retrieves a list of actions for a user.\n@param context the context used to retrieve the actions.\n@param userId the id of the user.\n@param start the index of the first action to retrieve.\n@param end the index of the last action to retrieve (not inclusive).\n@param listener a listener to receive a notification of the success or failure of the operation.",
        "Retrieves the actions for a specific entity.\n@param context the activity context.\n@param entityKey the key of the entity.\n@param start the index of the first action to retrieve.\n@param end the index of the last action to retrieve (not inclusive).\n@param listener a listener to receive the list of actions.",
        "Retrieves a list of actions for a specific user and entity.\n@param context the activity that is performing the action\n@param userId the id of the user\n@param entityKey the key of the entity\n@param start the index of the first item to retrieve\n@param end the index of the last item to retrieve (not inclusive)\n@param listener a listener to receive the list of actions",
        "Closes the current scope.\n\n@param empty The scope to close.\n@param nonempty The scope to close.\n@param closeBracket The bracket to close.\n@return The JSON Writer.\n@throws IOException If an I/O error occurs.",
        "Set the name of the current field.\n\n@param name the name of the field.\n@return this JSON Writer.\n@throws IllegalStateException if a field has already been written.",
        "Parses the given JSON text and returns the root element.\n\n@param json the JSON text to parse\n@return the root element\n@throws JsonIOException if an I/O error occurs\n@throws JsonSyntaxException if the JSON is invalid",
        "Parses the given JSON source and returns the parsed JsonElement.\n\n@param json the JSON source\n@return the parsed JsonElement\n@throws JsonIOException if an I/O error occurs\n@throws JsonSyntaxException if the JSON source is invalid",
        "Link a user to the Socialize app.\n\n@param context The context used to launch the Activity.\n@param token The access token.\n@param secret The access secret.\n@param listener A listener to receive a notification when the user has been linked.",
        "Sets the credentials for the proxy.\n\n@param context\nThe context used to access the system.\n@param consumerKey\nThe consumer key.\n@param consumerSecret\nThe consumer secret.",
        "Tweets an entity using the specified text.\n\n@param context The current Activity or Activity.Context.\n@param entity The entity to tweet.\n@param text The text to tweet.\n@param listener A listener to receive a notification of the success or failure of the share.",
        "Perform a GET request to the Twitter API.\n\n@param context The current Activity.\n@param resource The resource path to the resource.\n@param params The parameters to pass to the resource.\n@param listener A listener to receive a notification of the success or failure of the request.",
        "Tweets a tweet using the specified activity context.\n\n@param context The activity context.\n@param tweet The tweet to tweet.\n@param listener The listener to receive a notification on the success or failure of the network operation.",
        "Tweets a photo using the specified listener.\n\n@param context the current Activity or Activity.Context.\n@param photo the photo to tweet.\n@param listener the listener to call when the request completes.",
        "Scales the bitmap to the specified width and height.\n\n@param bitmap the bitmap to scale\n@param scaleToWidth the width to scale to\n@param scaleToHeight the height to scale to\n@param recycleOriginal whether to recycle the original bitmap\n@param density the density of the bitmap\n@return the scaled bitmap",
        "Asynchronously puts the object to the endpoint.\n\n@param session the session to use\n@param endpoint the endpoint to call\n@param object the object to put\n@param listener the listener to receive the callback",
        "Set the text size of the TextView.\n\n@param textSize The text size.",
        "Called when the image of the profile layout view has been changed.\n@param bitmap the new image.\n@param localPath the path to the image.",
        "Asynchronously saves a user.\n\n@param context\nThe context used to save the user.\n@param user\nThe user to save.\n@param listener\nThe listener to receive a notification when the user is saved.",
        "Get a user\n\n@param context\nThe context used to fetch the user\n@param id\nThe id of the user\n@param listener\nThe listener to receive the user",
        "Saves user settings to the database.\n@param context the context used to access the database.\n@param userSettings the user settings to be saved.\n@param listener a listener to receive a notification when the user settings have been saved.",
        "Sets the auto post preferences for the given networks.\n\n@param networks the networks to set the auto post preferences for.\n@return true if the auto post preferences have been changed.\n@deprecated Use {@link #setAutoPostToTwitter(boolean)} and {@link #setAutoPostToFacebook(boolean)} instead.",
        "Authenticate with Facebook.\n\n@param context the current Activity or Fragment's context.\n@deprecated Use {@link #authenticate(Activity, List, boolean, boolean)} instead.",
        "Authenticate for read.\n\n@param context the context\n@param sso the sso\n@param permissions the permissions",
        "Get a static field from a class\n\n@param fieldName The name of the field\n@param clazz The class to search\n@return The field value\n@throws Exception If the field cannot be found",
        "Returns the static field name of the given value.\n@param value the value\n@param clazz the class\n@return the static field name\n@throws Exception if the value is not a valid field",
        "Called when a message is received from the application.\n\n@param context the context used to send the message.\n@param intent the intent received.\n@return {@code true} if the message was received, {@code false} otherwise.",
        "Handle a broadcast intent.\n@param context The context.\n@param intent The intent.\n@return true if the intent was handled.",
        "Encode a byte array into a base-64 encoded string.\n\n@param source the source byte array\n@param off the offset into the source byte array\n@param len the length of the source byte array\n@param alphabet the alphabet to use\n@param maxLineLength the maximum line length\n@return the base-64 encoded string",
        "Decode a base64 encoded string into a byte array.\n\n@param source the source byte array\n@param off the offset into the source array\n@param len the length of the encoded data\n@param decodabet the base64 decoded data\n@return the decoded data\n@throws Base64DecoderException if the input is not a valid base64 encoded\nstring",
        "Views an entity.\n@param context the activity context\n@param e the entity to view\n@param listener the listener to receive the notification",
        "Called when the user's profile has been updated.",
        "Decode a form parameter string into a HttpParameters object.\n\n@param form the form parameter string\n@return the HttpParameters object",
        "Converts a collection of Map.Entry to a Map.\n\n@param from the collection of Map.Entry\n@return a Map",
        "Create a header element with the given name and value.\n\n@param name Name of the header element.\n@param value Value of the header element.\n@return Header element.",
        "Puts the specified object into the cache, with the specified TTL.\n\n@param strKey\nthe key to store the specified object\n@param object\nthe object to store\n@param ttl\nthe TTL to store\n@return true if the object was successfully stored, false otherwise",
        "Puts the specified object into the cache, with the specified TTL.\n\n@param strKey\nthe key to store the specified object in\n@param object\nthe object to store\n@param eternal\nif true, the object is eternal, otherwise it is ignored\n@return true if the object was successfully stored, false if the object was not found",
        "Add an object to the cache.\n\n@param k\nthe key of the object\n@param object\nthe object to add\n@param ttl\nthe time to live of the object\n@param eternal\ntrue if the object is an eternal object, false otherwise\n@return true if the object was added, false otherwise",
        "Get the raw value associated with the given key.\n\n@param strKey The key to look up.\n@return The value associated with the key, or null if the key is not in the cache.",
        "Get the object from the cache. If the object is not in the cache, it will be created.\n\n@param key The key to look up in the cache.\n@return The object in the cache.",
        "Returns true if the object with the specified key exists.\n\n@param k\nthe key\n@return\ntrue if the object exists, false otherwise",
        "Extend the TTL for the specified key.\n@param strKey the key",
        "Loads an image by its encoded data.\n\n@param name the name of the image to load\n@param encodedData the encoded data of the image to load\n@param width the width of the image to load\n@param height the height of the image to load\n@param listener the listener to receive the image load result",
        "Load image by url.\n\n@param url      the url\n@param width    the width\n@param height   the height\n@param listener the listener",
        "Parses a tag string into a map of tag names and tag values.\n\n@param tagString the tag string to parse.\n@return a map of tag names and tag values.\n@throws IllegalArgumentException if the tag string is invalid.",
        "Format a map of tag names and values to a string.\n\n@param tagMap\n@return",
        "Fixes the encoded tags in the name after the prefix.\n@param name the name to fix\n@return the fixed name",
        "Creates a new metric name builder with the given name and tags.\n\n@param name The name of the metric.\n@return A new metric name builder.",
        "Returns a string representation of the put request.\n\n@return a string representation of the put request.",
        "Returns the domain name in human readable format.\n\n@return the domain name in human readable format.",
        "Percent-decode the input string.\n\n@param input the input string\n@return the decoded string",
        "Get the value of the named query parameter.\n@param name the name of the query parameter\n@return the value of the named query parameter, or {@code null} if the parameter is not found",
        "Returns the query parameters for the given name.\n\n@param name the name of the query parameters\n@return the query parameters for the given name",
        "Relativize this URL to another.\n\n@param url the URL to relativize\n@return the relativized URL",
        "Builds a hierarchical URL.\n\n@param scheme the scheme\n@param host   the host\n@return the URL\n@throws GalimatiasParseException the galimatias parse exception",
        "Builds a opaque URL from the given scheme.\n\n@param scheme the scheme\n@return the opaque URL\n@throws GalimatiasParseException if the scheme is relative",
        "Returns a human-readable representation of this URL.\n\n@return a human-readable representation of this URL",
        "Queries the database and returns the result as a stream.\n\n@param <T> the type of the stream's elements.\n@param <U> the type of the result.\n@param sql the SQL statement to query.\n@param pss the prepared statement setter.\n@param mapper the row mapper.\n@param handleStream the handle stream.\n@return the result as a stream.",
        "Queries the named jdbcTemplate and maps the result set to a stream.\n\n@param sql the query to execute\n@param sps the parameter source\n@param mapper the row mapper\n@param handleStream the handle stream\n@param <T> the type of the stream\n@param <U> the type of the mapped result set\n@return the mapped result set",
        "Returns all the fields of the given class.\n\n@param clazz the class to get the fields for.\n@return the fields of the given class.",
        "Fetches the next row from the ResultSet.\n\n@return the next row",
        "Get the value at the specified index as a LocalDateTime object.\n\n@param rs ResultSet\n@param index The index\n@return The value\n@throws SQLException If something goes wrong",
        "Get the value at the specified index as a LocalDate.\n\n@param rs ResultSet\n@param index Index\n@return LocalDate value\n@throws SQLException",
        "Get the value at the specified index as a LocalTime object.\n\n@param rs ResultSet\n@param index The index\n@return The value\n@throws SQLException If something goes wrong",
        "Get a ZonedDateTime from the column at the specified index.\n\n@param rs ResultSet\n@param index Index\n@param zoneId Zone ID\n@return ZonedDateTime\n@throws SQLException",
        "Get a Timestamp object from the ResultSet, converted to an OffsetDateTime object at the specified time zone.\n\n@param rs ResultSet\n@param index The first column is 1, the second is 2, ...\n@param zoneId The time zone to convert to\n@return The Timestamp object\n@throws SQLException If something goes wrong",
        "Get the value at the specified index as an OffsetTime object.\n\n@param rs      ResultSet\n@param index   int\n@param zoneId ZoneId\n@return OffsetTime\n@throws SQLException",
        "Retrieves the value of the designated column in the specified result set.\n\n@param rs The result set.\n@param index The column index.\n@param requiredType The required type.\n@return The column value.\n@throws SQLException If a database access error occurs.",
        "Crop the image to the specified dimensions.\n\n@param width  the width of the image\n@param height the height of the image\n@return the updated path builder",
        "Crop the image to the center of the screen.\n\n@param width  the width of the image\n@param height the height of the image\n@return the updated path builder",
        "Crop the image to a certain size and color.\n\n@param width  the width of the image\n@param height the height of the image\n@param color the color of the image\n@return the updated path builder",
        "Resize the image to the specified width\n\n@param width new width\n@return this",
        "Resize the image to the specified size.\n\n@param width  the new width\n@param height the new height\n@return the builder",
        "Scale the image to a new size.\n\n@param width  new width\n@param height new height\n@return this",
        "Scale the image to the center of the screen\n\n@param width  the width of the image\n@param height the height of the image\n@return the builder",
        "Blur the image.\n\n@param strength blur strength in pixels.\n@return the current instance in order to chain call methods.",
        "Add sharp compression.\n\n@param strength the compression strength.\n@return the builder instance.",
        "Set the preview path.\n\n@param width  the width of the preview\n@param height the height of the preview\n@return the builder",
        "Get the project information.\n\n@return The project information.",
        "Get a file by id\n\n@param fileId the id of the file to get\n@return the file",
        "Deletes a file.\n\n@param fileId the file id",
        "Saves a file to the storage.\n\n@param fileId the id of the file to save",
        "Executes the given request and returns the response.\n\n@param request the request to execute\n@param apiHeaders whether to set the API headers or not\n@return the response",
        "Check the response status.\n\n@param response the response\n@throws IOException if an IO exception occurs",
        "Upload a file from a URL.\n\n@param sourceUrl the URL of the file to upload\n@param pubKey the public key of the file to upload\n@param store the name of the file store to upload to\n@return the URI of the uploaded file",
        "Injects the target object into the object graph.\n\n@param target the target object to be injected.",
        "Create a builder for the given theme.\n\n@param context     the context.\n@param themeResId the theme resource id.\n@return a builder.",
        "Finds a class by its name.\n\n@param className the name of the class to find\n@return the class or {@code null} if the class could not be found",
        "Loads a class by its name and bytecode.\n\n@param className the name of the class to load\n@param bytecode the bytecode of the class to load\n@return the loaded class\n@throws ParserTransformException if the class cannot be loaded",
        "Internal method to perform a search.\n\n@param buffer the buffer to search\n@param matchedLength the number of characters that have been matched\n@param currentLength the number of characters that are currently in the buffer\n@param ignoreCase true if the case should be ignored\n@return the number of characters that were matched",
        "Adds a word to the trie.\n\n@param word\nthe word to add\n@return this trie builder",
        "Appends a character to the end of the string.\n\n@param c the character to append\n@return true if the character was appended",
        "Sets the value of this property.\n\n@param value the new value\n@return the previous value",
        "Checks if a class is assignable to a given type.\n\n@param classInternalName the class internal name\n@param type the type\n@return true if the class is assignable to the given type",
        "Copy parse info to the zip file.\n\n@param zipfs the zip file system\n@throws IOException if an I/O error occurs",
        "Hash a group.\n\n@param group\nthe group to hash\n@param className\nthe class name",
        "Returns a rule that matches characters only if they are equal to the\ncase of the given character.\n\n@param c the character to match\n@return the rule",
        "Matches a Unicode code point.\n\n@param codePoint the code point\n@return the rule",
        "Returns a rule that matches a Unicode code point range.\n@param low the low code point\n@param high the high code point\n@return the rule",
        "The rule allows a string to be matched against any of the characters in the string.\n\n@param characters the characters to match\n@return the rule",
        "Matches any character in the given character set.\n\n@param characters the character set\n@return the rule",
        "The string rule.\n\n@param string the string\n@return the rule",
        "Matches a string of characters.\n\n@param characters the characters to match\n@return the rule",
        "The case insensitive string rule.\n\n@param string the string\n@return the rule",
        "Creates a matcher that matches an optional rule.\n\n@param rule the rule\n@return the matcher",
        "Creates an optional rule.\n\n@param rule the rule\n@param rule2 the rule 2\n@param moreRules the more rules\n@return the rule",
        "Creates a repeat matcher.\n\n@param rule the first rule\n@param rule2 the second rule\n@param moreRules more rules\n@return the builder",
        "Create a zero-or-more rule.\n\n@param rule the rule\n@param rule2 the rule 2\n@param moreRules the more rules\n@return the rule",
        "Creates a rule from a string literal.\n\n@param string the string literal\n@return the rule",
        "Converts an array of objects to an array of rules.\n\n@param objects the objects to convert\n@return the array of rules",
        "Converts an object to a rule.\n\n@param obj the object to convert\n@return the rule",
        "Push a value onto the stack.\n\n@param down the index of the stack to push the value onto\n@param value the value to push\n@return {@code true} if the value was pushed",
        "Pop the top element from the stack and cast it to the specified class.\n\n@param c the class to cast the result to\n@param <E> the type of the result\n@return the top element",
        "Pop an element from the stack and cast it to the specified class.\n\n@param c the class to cast the result to\n@param down the number of elements to pop\n@return the element",
        "Returns the peek element of the queue as an instance of the specified class.\n\n@param c the class of the element to return\n@return the peek element of the queue as an instance of the specified class",
        "Poke a value down the stack.\n\n@param down the down value\n@param value the value\n@return true, if successful",
        "Matches the given context.\n\n@param context the context\n@param <T> the type\n@return true if the context matches",
        "Returns true if this range overlaps with the specified range.\n\n@param other the range to compare with.\n@return true if this range overlaps with the specified range.",
        "Returns true if this range touches the specified other range.\n\n@param other the other range\n@return true if this range touches the specified other range",
        "Returns a new IndexRange that is the minimum of this range and the maximum of the\nspecified range.\n\n@param other the range to merge with\n@return a new IndexRange that is the minimum of this range and the maximum of the\nspecified range",
        "Returns the byte code for the given parser.\n\n@param parserClass the parser class\n@param <P> the parser type\n@param <V> the value type\n@return the byte code",
        "Add word.\n\n@param buffer the buffer",
        "Unwraps a proxy matcher.\n\n@param matcher the matcher to unwrap\n@return the unwrapped matcher",
        "Registers a listener to the bus.\n\n@param listener the listener to be registered.\n@return true if the listener was registered.",
        "Post an object to the bus.\n\n@param object the object to post\n@return true if the object was posted",
        "Returns the sub context of the given context.\n\n@param context the context\n@param <V>     the value type\n@return the sub context",
        "Specifies that the rule must be matched at least the specified number of times.\n\n@param nrCycles the number of times to match\n@return the rule",
        "Specifies that the rule must be repeated at most.\n\n@param nrCycles the number of repetitions, must be 0 or greater\n@return the updated rule",
        "Specifies that the rule should repeat at most the specified number of times.\n\n@param nrCycles the number of times to repeat\n@return the updated rule",
        "Specifies a range of repetitions.\n\n@param minCycles the minimum number of repetitions\n@param maxCycles the maximum number of repetitions\n@return the updated rule",
        "Matches a range of integers.\n\n@param range the range of integers\n@return the matcher",
        "Returns a new Characters object that contains all but the given characters.\n\n@param chars the characters to be combined\n@return a new Characters object that contains all but the given characters",
        "Gets the value of the deploymentDescriptor property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the deploymentDescriptor property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetDeploymentDescriptor().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link DeploymentDescriptorType }{@code >}\n{@link JAXBElement }{@code <}{@link DeploymentDescriptorType }{@code >}",
        "Gets the value of the authenticationConfiguration property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the authenticationConfiguration property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetAuthenticationConfiguration().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link AuthenticationConfigurationType }{@code >}\n{@link JAXBElement }{@code <}{@link AuthenticationConfigurationType }{@code >}",
        "Returns the BW services.\n\n@return the BW services",
        "Adds the given events to all services.\n\n@param events the events to add.",
        "Gets the value of the globalVariable property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the globalVariable property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetGlobalVariable().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link GlobalVariables.GlobalVariable }",
        "Gets the value of the baseService property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the baseService property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetBaseService().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link ServiceType }{@code >}\n{@link JAXBElement }{@code <}{@link ServiceType }{@code >}",
        "Gets the value of the event property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the event property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetEvent().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link EventType }{@code >}\n{@link JAXBElement }{@code <}{@link EventType }{@code >}",
        "Checks if the project directory is set.\n\n@throws MojoExecutionException if the project directory is not set.",
        "Reads the dependencies from a file.\n\n@param resolvedFileName\nthe resolved file name\n@param dependencyType\nthe dependency type\n@return the list of dependencies\n@throws IOException\nSignals that an I/O exception has occurred.",
        "Launches a TIBCO binary.\n\n@param binary\nthe binary to launch\n@param tras\nthe list of TIBCO files to run\n@param arguments\nthe list of arguments to pass to the binary\n@param workingDir\nthe directory to use for the binary\n@param errorMsg\nthe error message to display if the binary fails\n@throws IOException\nif an IO exception occurs\n@throws MojoExecutionException\nif the binary cannot be run",
        "Gets the value of the action property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the action property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetAction().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link ActionType }{@code >}\n{@link JAXBElement }{@code <}{@link ActionType }{@code >}",
        "Clean a directory.\n\n@param directory the directory to clean\n@return true if the directory was cleaned",
        "Gets the value of the final property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the final property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetFinal().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link String }",
        "Gets the value of the rulebase property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the rulebase property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetRulebase().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link Rulebases.Rulebase }",
        "Adds an alias to the list of aliases.\n@param list the list of aliases\n@param aliasName the alias name",
        "Processes a file.\n\n@param f\nthe file\n@throws MojoExecutionException\nif an error occurs",
        "Gets the value of the rest property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the rest property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetRest().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link TExtensibleAttributesDocumented }{@code >}\n{@link JAXBElement }{@code <}{@link TExtensibleAttributesDocumented }{@code >}",
        "Gets the value of the nvPair property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the nvPair property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetNVPair().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link NVPairType }{@code >}\n{@link JAXBElement }{@code <}{@link NVPairType }{@code >}",
        "Adds a dependency to the POM.\n\n@param pom The POM file.\n@param dependency The dependency to add.\n@param logger The logger.\n@throws IOException\n@throws XmlPullParserException",
        "Removes a dependency from the POM.\n\n@param pom the POM file\n@param dependency the dependency to remove\n@param logger the logger\n@throws IOException if an I/O error occurs\n@throws XmlPullParserException if an XML pull parser error occurs",
        "Checks if a dependency exists in the list of dependencies.\n\n@param dependency the dependency to check\n@param dependencies the list of dependencies\n@return true if the dependency exists in the list of dependencies",
        "Checks if a dependency exists in the POM.\n\n@param pom The POM file.\n@param dependency The dependency to check.\n@param logger The logger.\n@return True if the dependency exists.\n@throws IOException\n@throws XmlPullParserException",
        "Adds a project to a module.\n\n@param pom The POM file.\n@param relativePath The relative path to add.\n@param profileId The profile ID.\n@param logger The logger.\n@throws IOException\n@throws XmlPullParserException",
        "Checks if a module exists in the pom.\n\n@param pom The pom.\n@param relativePath The relative path to the module.\n@param profileId The profile id.\n@param logger The logger.\n@return True if the module exists.\n@throws IOException\n@throws XmlPullParserException",
        "Returns the artifact file for the given artifact name and classifier.\n\n@param basedir the base directory\n@param finalName the artifact name\n@param classifier the classifier\n@return the artifact file",
        "Execute the goal.\n\n@throws MojoExecutionException if the goal failed.",
        "Extracts the content of the file.\n\n@param filename\nthe filename\n@return the content of the file\n@throws IOException\nSignals that an I/O exception has occurred.",
        "Updates the RepoInstances in the application.",
        "Gets the value of the any property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the any property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetAny().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link Any }",
        "Creates a new instance of the given class.\n\n@param clazz the class to instantiate\n@param params the parameters to pass to the constructor\n@param <T> the type of the instance\n@return the instantiated instance\n@throws SQLException if the constructor cannot be found",
        "Creates a proxy class that implements all the interfaces in this class.\n\n@param <T> the interface type\n@return the created class",
        "Creates a constructor for the proxy.\n\n@param <T> the type of the proxy.\n@return the constructor.",
        "Start a timer for the execution of a statement.\n\n@param query The query.\n@return The timer context.",
        "Start a timer for the life of a callable statement.\n\n@param query The query.\n@return The timer context.",
        "Start a timer for the result set life of the given query.\n\n@param query The query.\n@return The timer context.",
        "Marks a query as a result set row meter.\n\n@param query The query.",
        "Creates a new proxy instance.\n\n@param proxyHandler the proxy handler\n@param <T>         the proxy type\n@return the proxy instance",
        "Wraps a connection.\n\n@param wrappedConnection the wrapped connection\n@return the wrapped connection",
        "Wraps the given statement.\n\n@param statement the statement to wrap\n@return the wrapped statement",
        "Wraps a prepared statement with a proxy.\n\n@param preparedStatement the prepared statement\n@param sql the SQL statement\n@return the wrapped statement",
        "Wraps a CallableStatement with a proxy.\n\n@param callableStatement the callable statement\n@param sql              the SQL statement\n@return the wrapped callable statement",
        "Get the result set type.\n\n@param resultSet the result set\n@return the result set type",
        "Builds the command line arguments for the command line.\n\n@return the command line arguments",
        "Builds the face command line arguments.\n\n@param args the command line arguments",
        "Executes the command.\n\n@return the result of the command\n@throws IllegalStateException if the command is invalid",
        "Executes the command.\n\n@throws BuildException\nif the command fails",
        "Sets the language.\n\n@param language the language",
        "Returns the message for the given key.\n\n@param key\nthe key\n@return the message",
        "Says or thinks the moosage.\n\n@param args\nthe command line arguments\n@param think\nwhether or not to think the moosage\n@return the formatted moosage",
        "Formats the HTML output.\n\n@param commandLine the command line\n@param plainCow the plain COW\n@param moosage the moosage\n@param isThought true if the output is a thought output\n@return the formatted HTML",
        "Gets the cow face by mode.\n\n@param commandLine the command line\n@return the cow face by mode",
        "Gets the cow face.\n\n@param commandLine the command line\n@return the cow face",
        "Extracts the cow template from the given cow string.\n\n@param cow\nthe cow string\n@return the extracted cow template\n@throws CowParseException\nif the cow string is not valid",
        "Loads a COW file from the given file specification.\n\n@param cowfileSpec the file specification of the COW file.\n@return the loaded COW file.",
        "Reads the contents of the given InputStream and returns it as a String.\n\n@param cowInputStream the InputStream to read from\n@return the contents of the given InputStream as a String",
        "Returns an input stream to the given path.\n\n@param path the path to read\n@return an input stream to the given path",
        "Gets the input stream from the COWPATH.\n\n@param cowName the cow name\n@return the input stream",
        "Checks if the given file is a COW file.\n\n@param cowfile the file to check.\n@return true if the file is a COW file, false otherwise.",
        "Converts a Cowfile into an InputStream.\n\n@param cowfile the Cowfile\n@return the InputStream",
        "Gets the cowfile.\n\n@param folder the folder\n@param cowName the cow name\n@return the cowfile",
        "Gets the cow files.\n\n@param folder\nthe folder\n@return the cow files",
        "Get the CowFace object for the given mode.\n\n@param mode the mode\n@return the CowFace object",
        "Sets the eyes.\n\n@param eyes the new eyes",
        "Sets the tongue.\n\n@param tongue the new tongue",
        "Checks if the given mode is known.\n\n@param mode the mode to check.\n@return true if the mode is known, false otherwise.",
        "Parses the command line arguments.\n\n@param argv the command line arguments\n@return the parsed command line",
        "Shows the command line help.",
        "Formats a bubble.\n\n@param bubble the bubble to format\n@param message the message to format\n@param longestLine the longest line of the message\n@return the formatted message",
        "Wraps the given message.\n\n@param message the message to wrap.\n@return the wrapped message.",
        "Formats the given message.\n\n@param message the message to format.\n@return the formatted message.",
        "Sets the wordwrap setting.\n\n@param wordwrap the wordwrap to set",
        "Gets the longest line len.\n\n@param message the message\n@return the longest line len",
        "Log a message at the TRACE level.\n\n@param message the message to log\n@return true if the message was logged",
        "Log a message to the Loggly API.\n\n@param message   The message to log.\n@param callback A callback that will be called when the log operation is complete.",
        "Bulk log a collection of messages.\n\n@param messages The messages to log.\n@param callback The callback to call when the bulk log operation is complete.",
        "Join a collection of strings into a single string.\n\n@param messages\n@return",
        "Example of sending multiple events to Loggly.",
        "Returns a map of all schemas in this catalog.",
        "Returns the schema with the specified name.\n@param name the name of the schema\n@return the schema\n@throws NoRowException if there is no schema with the specified name\n@throws SQLException if a database error occurs",
        "Initializes the Git watcher thread.",
        "Resync the top level of the repository.\n\n@throws IOException if an I/O error occurs",
        "Returns a map of all tables in the catalog.",
        "Returns the table with the specified name.\n@param name the name of the table\n@return the table with the specified name\n@throws NoRowException if the table does not exist\n@throws SQLException if a database error occurs",
        "Writes the data to the output.\n\n@param out The output writer.\n@param writeStart The start index of the data.\n@param writeEnd The end index of the data.",
        "Returns a map of all catalogs.",
        "Returns the catalog with the specified name.\n@param name the name of the catalog\n@return the catalog with the specified name\n@throws NoRowException if there is no catalog with the specified name\n@throws SQLException if there is a problem accessing the database",
        "Returns a new buffer that holds the contents of this buffer plus the given number of characters.\n\n@param additional the number of characters to add to the buffer.\n@return a new buffer that holds the contents of this buffer plus the given number of characters.\n@throws IOException if the buffer is too large to hold the given number of characters.",
        "Write the encoder class name to the log\n@param encoder\n@throws IOException",
        "Write a writer to the log.\n@param writer the writer to write\n@throws IOException if an I/O error occurs",
        "Returns a new lexical position with the given file.\n\n@param file the file\n@param <F> the file type\n\n@return a new lexical position",
        "Appends a string value to the buffer.\n@param segmentIndex the index of the segment to append to\n@param off the offset of the first character of the string\n@param len the number of characters to append\n@param buffer the buffer to append to",
        "Writes a single segment of a string.",
        "Returns the char at the given index in the given value.",
        "Get the SQL data types.\n@return The SQL data types.\n@throws SQLException",
        "Returns a map of all the columns in this table.",
        "Returns the column with the specified name.\n\n@param name the name of the column\n@return the column\n@throws NoRowException if the table has no row with the specified name\n@throws SQLException if a database error occurs",
        "Returns the list of columns in this ResultSet object.\n\n@return a list of columns\n@throws SQLException if a database access error occurs",
        "Returns the column at the specified position.\n\n@param ordinalPosition the position of the column\n@return the column at the specified position\n@throws NoRowException if the column is not found\n@throws SQLException if an error occurs",
        "Returns the set of imported tables.",
        "Returns the set of exported tables.",
        "Adds a segment to the buffer.\n@param type The type of the segment.\n@param value The value of the segment.\n@param off The offset of the segment.\n@param len The length of the segment.",
        "Writes a single character to the log.\n@param ch The character to write.\n@throws IOException If an I/O error occurs.",
        "Writes a string to the log.\n@param value The value to write.\n@throws IOException If an I/O error occurs.",
        "Puts all of the values in the given array into the target content values.\n\n@param target the target content values\n@param values the values to put\n@return the target content values",
        "Move the camera to the last location of the map.\n\n@param map  the map to move the camera to.\n@param zoom the zoom level to apply.",
        "Animate the camera to include a specific position.\n\n@param map     google map\n@param position position to include\n@param delay   delay in milliseconds",
        "Create an Animator that animates the circle to the rect\n\n@param circle The circle to animate\n@param rect    The rect to animate\n@return Animator",
        "Create an animator that animates the circle from the given rect.\n\n@param circle The circle to animate.\n@param rect    The rect to animate.\n@return The animator.",
        "Create a transition, which will animate the arc in motion.\n\n@param context the context.\n@return the transition.",
        "Returns a bold style span.",
        "Scale the specified View in the screen.\n\n@param view The View to scale.\n@return The ViewPropertyAnimator object.",
        "Scale the view out of the screen.\n\n@param view The view to scale out.\n@return The ViewPropertyAnimator object.",
        "Create an animator that will scale the view to show the next item in the list.\n\n@param view      The view to scale.\n@param endAction The action to be performed when the animation is finished.\n@return The animator.",
        "Get the count of a Uri.\n\n@param context the context.\n@param uri the Uri to query.\n@return the count of the Uri.",
        "Concatenates the address lines of an address.\n\n@param address the address\n@param delimiter the delimiter\n@return the concatenated address lines",
        "Connect to Google API client.\n\n@param client   Google API client.\n@param connected Callback for Google API client connected event.\n@param failed   Callback for Google API client connection failed event.\n@return Google API client.",
        "Helper method to set the transition of a FragmentManager.\n\n@param fm      the FragmentManager.\n@param transit the transition.\n@return the FragmentTransaction.",
        "Returns the color of the foreground.\n\n@return the color of the foreground.",
        "Set the onClickListeners of the views.\n\n@param listener the onClickListener to set\n@param views    the views to set the onClickListeners on",
        "Returns the name of the given level.\n\n@param level the level\n@return the name of the given level",
        "Make an animation that will scale the view up.\n\n@param source The view to scale.\n@return An {@link ActivityOptions} object that can be used to start the animation.",
        "Show soft input for the given View.\n\n@param view the View to show soft input for.",
        "Hides the soft input from the given view.\n\n@param view the view to hide the soft input from",
        "Checks if a cursor has a specific position.\n\n@param cursor   The cursor to check.\n@param position The position to check.\n@return True if the cursor has the position.",
        "Gets the count of the columns of a Cursor.\n\n@param cursor the cursor.\n@param close whether or not to close the cursor.\n@return the count of the columns.",
        "Reads the int data for the first column.\n\n@param cursor the cursor.\n@param close whether the cursor should be closed after reading.\n@return the int value.",
        "Reads the long data for the first column of the cursor.\nCloses the cursor if it is not closed.\n\n@param cursor the cursor.\n@param close whether the cursor should be closed.\n@return the long value.",
        "Reads the first String in the cursor.\n\n@param cursor the cursor.\n@param close whether the cursor should be closed after reading.\n@return the String read.",
        "Read all the ints from a Cursor and close it.\n\n@param cursor the cursor.\n@param close  true to close the cursor.\n@return an int array.",
        "Reads all the long values from the cursor and closes the cursor.\n\n@param cursor the cursor to read from.\n@param close true to close the cursor.\n@return an array containing the values.",
        "Reads all the strings from a Cursor and closes it.\n\n@param cursor the cursor to read from\n@param close true if the cursor should be closed after reading\n@return an array of all the strings in the cursor",
        "Loads an image into the view.\n\n@param view       the view to load into\n@param placeholder the placeholder to use\n@param load        the image to load\n@param resize      true if the image should be resized\n@param transform  the transform to apply",
        "Get the orientation of the RecyclerView.\n\n@param view The RecyclerView.\n@return The orientation of the RecyclerView.",
        "Get the span count of the RecyclerView.\n\n@param view the RecyclerView.\n@return the span count of the RecyclerView.",
        "Add a rule to the layout.\n\n@param view   the view to add the rule to.\n@param verb   the verb to add.\n@param anchor the anchor to add.\n@return the layout params.",
        "Returns true if the current position is read.",
        "Get the current Looper.\n\n@return the current Looper.",
        "Returns a view of the elements of the specified sparse array.\n\n@param <E> the element type parameter\n@param array the sparse array\n@return a view of the elements of the specified sparse array",
        "Returns a view of the elements in the given long sparse array.\n\n@param <E> the element type parameter\n@param array the array to get the values from\n@return a view of the elements in the given long sparse array",
        "Check the adapter.",
        "Check if the drawable has changed.",
        "Updates the image matrix to be the same as the drawable at the given position.\n\n@param position the position of the drawable to be scaled.\n@param offset the offset to apply to the position.",
        "Update or delete the record.\n\n@param op the operation\n@param uri the URI of the record\n@param vals the content values of the record\n@param sel the selection clause\n@param args the selection arguments\n@return the number of rows affected",
        "Execute the query, and return the result as a Cursor.\n\n@param op the operation type\n@param uri the URI of the query\n@param proj the projection to use\n@param sel the selection clause\n@param args the selection arguments\n@param order the order by clause\n@return the result as a Cursor",
        "Returns the number of bytes required to encode the image.\n\n@param width  the width of the image\n@param height the height of the image\n@param config the configuration of the image\n@return the number of bytes required to encode the image",
        "Creates a mutable copy of the source bitmap.\n\n@param source the source bitmap\n@return the mutable copy of the source bitmap",
        "Check if the intent has an activity.\n\n@param context the context.\n@param intent the intent.\n@return true if the intent has an activity.",
        "Create an intent to send a mail to a list of recipients\n\n@param to      list of recipients\n@param cc      list of recipients\n@param bcc     list of recipients\n@param subject subject of the email\n@param body    body of the email\n@return intent",
        "Sets the default content view.",
        "Find a fragment in the specified pane.\n\n@param pane the pane to search\n@param <T>   the fragment type\n@return the fragment, or null if not found",
        "Creates a bundle with the specified keys and values.\n\n@param key1   the first key\n@param value1 the first value\n@param key2   the second key\n@param value2 the second value\n@return the bundle",
        "Create an intent to execute on a background thread.\n\n@param context the context used to execute the action.\n@param action the action to perform.\n@param data the data to be passed to the action.\n@param values the values to be passed to the action.\n@return the intent.",
        "Create an intent to update the content of a file.\n\n@param context    the context used to launch the activity, which must be an instance of\n{@link android.app.Activity}\n@param data       the data URI of the file to update\n@param values     the content values to update\n@param selection the selection string, or null if none\n@param selectionArgs the selection arguments, or null if none\n@return the intent",
        "Create an intent to delete a file.\n\n@param context the context.\n@param data the file to delete.\n@return the intent.",
        "Create an intent to delete a file from the device.\n\n@param context     The context used to launch the intent.\n@param data        The data URI of the file to delete.\n@param selection   The selection criteria.\n@param selectionArgs The selection arguments.\n@return The intent.",
        "Get the size of the action bar.\n\n@param context the context.\n@return the size of the action bar.",
        "Get the action bar background.\n\n@param context the context.\n@return the background drawable.",
        "Check if the device is connected.\n\n@param context the context.\n@return true if the device is connected.",
        "This is a helper function that is called when the diff is being cleaned up.\nIt will remove all equalities and insert the new ones.\n\n@param diffs The list of Diff objects.",
        "Create a list of patches for the text1 and diffs.\n\n@param text1 The text to patch.\n@param diffs The list of diffs.\n@return A list of patches.",
        "Applies the given function to the current value and returns the result.\n\n@param function the function to apply\n@param <R> the result type\n@return the result of applying the function to the current value",
        "Converts a SOAP message to a string.\n\n@param soapMessage\nthe SOAP message\n@return the string representation of the SOAP message",
        "Gets the file object for the profile properties file. If the file does not exist it will be created.\n\n@param filer\nthe filer\n@param fileName\nthe file name\n@return the file object for the profile properties file\n@throws IOException\nSignals that an I/O exception has occurred.",
        "Checks if the given element is a valid method.\n\n@param element\nthe element\n@return true, if the element is a valid method",
        "Checks if the given method is a getter method.\n\n@param executableElement The method to check.\n@return True if the method is a getter method.",
        "Returns the value of the property with the given key.\n\n@param propertyKey\nthe key of the property\n@return the value of the property with the given key",
        "Checks if class has noargs constructor.\n\n@param typeElement\nthe type element\n@return true, if class has noargs constructor",
        "Get an annotation from an instance.\n\n@param instance the instance\n@param annotation the annotation\n@param <T> the type\n@return the annotation from type",
        "Check if a method has a non void return type.\n\n@param method\na method\n@return true if the method has a non void return type, false otherwise",
        "Applies the given output element to the given string builder.\n\n@param stringBuilder\nthe string builder\n@param outputStyle\nthe output style\n@param outputElement\nthe output element\n@return true, if successful",
        "Find all the classes that are wrappers.\n\n@return the set of classes that are wrappers.",
        "Returns a set of all the implicit context data providers.\n\n@return a set of all the implicit context data providers",
        "Returns a list of all the available wrappers.\n\n@return a list of all the available wrappers.",
        "Initializes the connectors.",
        "Sends an error report to all registered connectors.\n\n@param connectorOutputProvider\nthe output provider to send the error report to.",
        "Returns a set of connector names.\n\n@return a set of connector names",
        "Get properties for connector configuration name.\n\n@param connectorName\nconnector name\n@return properties for connector configuration name",
        "Creates a connector instance based on the connector configuration name.\n\n@param connectorConfigurationName the name of the connector configuration.\n@return a connector instance.",
        "Checks if a connector is configured.\n\n@param connectorClass\n@return",
        "returns true if the given method has a getter prefix in it\n\n@param method\nthe method to check\n@return true if the method has a getter prefix in it",
        "Checks if the given method is public and non-static.\n\n@param method\nthe method to check.\n@return true if the method is public and non-static, false otherwise.",
        "Checks if the given method has a compatible return type for the given type.\n\n@param type the type\n@param method the method\n@return true if the method has a compatible return type for the given type",
        "Returns the field that corresponds to the given method.\n\n@param type the class to search\n@param method the method to search\n@return the field that corresponds to the given method",
        "Checks if the given method name is a getter method.\n\n@param methodName\nthe method name to check\n@return true if the method is a getter method, false otherwise",
        "Capitalizes the first character of the given string.\n\n@param input The string to capitalize.\n@return The capitalized string.",
        "Decapitalizes the first character of the given string.\n\n@param input The string to decapitalize.\n@return The decapitalized string.",
        "Strips the getter prefix from the input string.\n\n@param input the input string\n@return the string without the getter prefix",
        "Sends error report to connectors.\n\n@param proceedingJoinPoint the proceeding join point\n@param annotatedId the annotated id\n@param e the e",
        "Applies the given instance to the given context logger configuration.\n\n@param contextLoggerConfiguration The context logger configuration to use.\n@param instanceToWrap The instance to wrap.\n@return The instance that was wrapped.",
        "Creates an instance of the given class.\n\n@param type the class to create an instance of.\n@return the created instance.",
        "Returns the profile for the current thread.\n\n@return the profile for the current thread",
        "Opens a properties file.\n\n@param propertyFileName\nthe name of the properties file\n@return a Properties object\n@throws IOException\nif an I/O error occurs",
        "Fills the manual context override map.\n\n@param contexts\nthe contexts\n@param value\nthe value",
        "Creates the context string representation builder.\n\n@return the tracee context string representation builder",
        "Check if method throws contains passed exception.\n\n@param proceedingJoinPoint the proceeding join point\n@param thrownException     the thrown exception\n@return true, if method throws contains passed exception",
        "Checks if the given exception is defined in the given classes array.\n\n@param classes\nthe classes array to check.\n@param thrownException\nthe exception to check.\n@return true if the exception is defined in the given classes array, false\notherwise.",
        "Returns the exception types defined by the method signature of the given\nproceeding join point.\n\n@param proceedingJoinPoint\nthe proceeding join point\n@return the exception types defined by the method signature of the given\nproceeding join point",
        "Checks if watchdog aspect processing is deactivated by annotation.\n\n@param watchdogAnnotation\nthe watchdog annotation\n@param proceedingJoinPoint\nthe proceeding join point\n@param throwable\nthe throwable\n@return true, if successful",
        "Fails if the group has a size that is not equal to the given value.\n\n@param expected the expected size\n@return the self reference",
        "Asserts that the actual list does not contain duplicate elements. If the assertion fails, the\ncustom message is set and the assertion will fail, otherwise, the assertion is ok.",
        "Get a drop down view for the item at the specified index.\n\n@param index       the index of the item to get the drop down view for\n@param convertView the view to use to convert the view, if null then a new one will be created\n@param parent      the parent of the view, which should be used to inflate the view, if null then the\ncurrent view hierarchy will be used\n@return a drop down view for the item at the specified index",
        "Reserves a term name.\n\n@param name the term name to reserve\n@return the reserved term ordinal",
        "Registers a new term with this name.\n\n@param <S> the term class\n@param term the term to register\n@throws IllegalStateException if this name has already been registered",
        "Initializes the vocabulary.\n\n@throws IllegalStateException if the vocabulary has not been initialized",
        "Gets the representation of the data set.\n\n@return the representation of the data set",
        "Resolve a relative URI to a base URI.\n\n@param target\n@param base\n@return",
        "Merges the path and the relative path.\n\n@param path the path\n@param relativePath the relative path\n@param hasAuthority true if the path has an authority\n@return the merged path",
        "Removes all dots from the path.\n@param path the path to process\n@return the processed path",
        "Creates a name from the given names.\n\n@param name the name to create\n@param names the names to use\n@return the name",
        "Creates a name for a class.\n\n@param clazz the class.\n@param names the names.\n@return the name.",
        "Creates a media type with a wildcard type\n@param type the wildcard type\n@return a new media type with the wildcard type",
        "Creates a media type with a wildcard suffix.\n@param type the type of the media\n@param suffix the suffix of the media\n@return a new media type with the given suffix",
        "Creates a new media type from the given type and subtype.\n\n@param type the type of the media type\n@param subtype the subtype of the media type\n@return a new media type",
        "Converts a media type to a header.\n\n@param mediaType The media type\n@return The header",
        "Runs the resolution process.",
        "Compares two terms.\n\n@param other the other term\n@return a negative integer, zero, or a positive integer as this object is\nless than, equal to, or greater than the specified object.\n@throws ClassCastException if the declaring vocabulary of this term is\ndifferent from the declaring vocabulary of the other term.",
        "Returns the names of all pending attachments for the given attachment.\n\n@param attachmentId the id of the attachment\n@return the names of all pending attachments for the given attachment",
        "Adds the next name to the attachment with the given id.\n\n@param attachmentId the id of the attachment\n@param nextName the name to add",
        "Returns the next attachment name.\n@param attachmentId the attachment id\n@return the next attachment name",
        "Creates a new name provider.\n@param resource the owner name\n@return a new name provider",
        "Parses the suffix of a structured media type.\n@param mr the media range\n@param mediaType the media type",
        "Checks that the given quoted string is valid.\n\n@param quotedString\nthe quoted string",
        "Returns the next code point in the CharSequence.\n\n@return the next code point in the CharSequence\n@throws NoSuchElementException if there are no more codepoints available",
        "Runs the update process.",
        "Returns a URI with the current values of this URI.\n\n@return a URI with the current values of this URI.",
        "Closes the given input stream, logging a warning if an exception occurs.\n\n@param is\nthe input stream to close\n@param message\nthe message to log",
        "Checks if the given code point is a valid name start character.\n\n@param codePoint the code point to check.\n@return {@code true} if the given code point is a valid name start character, {@code false} otherwise.",
        "Returns true if the given code point is a valid name character.\n\n@param codePoint the code point to test.\n@return true if the given code point is a valid name character.",
        "Validates a token.\n@param token the token to validate\n@param message the message to display if the token is invalid\n@param args the arguments to display if the token is invalid",
        "Sets the media type of the resulting data.\n@param mediaType the media type of the resulting data\n@return a new data transformator with the specified media type",
        "Registers an adapter class.\n@param clazz the adapter class",
        "Creates a new instance of the adapter for the given source and target types.\n@param sourceType the source type\n@param targetType the target type\n@param <S> the source type\n@param <T> the target type\n@return the adapter",
        "Adapt an object to a type.\n@param object the object to adapt\n@param resultClass the target type\n@param <S> the source type\n@param <T> the target type\n@return the adapted object",
        "Creates a new ImmutableNamespaces object with the same prefix and namespace URI\n@param prefix the new prefix\n@param namespaceURI the new namespace URI\n@return a new ImmutableNamespaces object",
        "Returns a new ImmutableNamespaces object with the given prefixes removed.\n@param prefixes the prefixes to remove\n@return a new ImmutableNamespaces object with the given prefixes removed",
        "Escapes a CharSequence so it can be used as an XML string.\n\n@param s\nthe CharSequence to escape.\n@return the escaped String.",
        "Queries the given query for the given resource.\n\n@param resource The resource to query.\n@param query The query to execute.\n@param session The session to use.\n@return The query result.\n@throws InvalidQueryException Thrown, if the query is invalid.",
        "Adds a name provider.\n\n@param containerName the container name\n@param provider the name provider",
        "Returns the name provider for the given container.\n\n@param containerName the container name\n@return the name provider",
        "Unwraps the current instance of this object into the specified class.\n\n@param clazz the class to unwrap the current instance into.\n@return the unwrapped instance.\n@throws ApplicationEngineException if the target class is not compatible with this object.",
        "Returns true if this path is out of scope.\n\n@return true if this path is out of scope",
        "Creates a new Path with the same path but with the specified directory.\n\n@param directory\nthe directory to set\n@return a new Path with the directory set",
        "Creates a new Path with the same file name as this one.\n\n@param file\nthe file name\n@return a new Path with the same file name",
        "Assembles the relative path segments from the base path and the path.\n\n@param path the base path\n@param base the base path\n@param segments the segments to add to\n@return the assembled path",
        "Returns the type parameter for the given class.\n\n@param clazz\nthe class\n@param bound\nthe bound class\n@return the type parameter for the given class",
        "Creates a new primitive object factory.\n\n@param <T> the value class\n@param valueClass the value class\n@return the primitive object factory",
        "Creates a list of variants.\n\n@param mediaTypes the media types\n@return the list of variants",
        "Resolves the individual of this reference.\n@param dataSet the data set\n@return the individual",
        "Creates a Matcher that matches a ViewGroup with the given count of equal children.\n\n@param value The count of equal children.\n@param <T>   The type of the matched object.\n@return A Matcher that matches a ViewGroup with the given count of equal children.",
        "Creates a Matcher that matches a ViewGroup that has more children than the specified value.\n\n@param value The value that must be greater than 0.\n@param <T>   The type of the matched object.\n@return A Matcher that matches a ViewGroup that has more children than the specified value.",
        "Creates a Matcher that matches a ViewGroup if it has more children than the given value.\n\n@param value The value that must be greater than 0.\n@param <T>   The ViewGroup type.\n@return A Matcher that matches a ViewGroup if it has more children than the given value.",
        "Creates a Matcher that matches a ViewGroup with less children than the provided value.\n\n@param value The value that should be used to match.\n@param <T>   The type of the matched object.\n@return A Matcher that matches a ViewGroup with less children than the provided value.",
        "Creates a Matcher that matches a ViewGroup with less children than or equal to the provided value.\n\n@param <T> The ViewGroup type.\n@param value The value that defines the lower bound of the matched group's children.\n@return A Matcher that matches a ViewGroup with less children than or equal to the provided value.",
        "Get the measures for a specific year and state.\n\n@param year\n@param stateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a specific measure.\n\n@param measureId\n@return Measure\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the rating of a candidate.\n\n@param candidateId\n@return CandidateRating\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a specific rating.\n\n@param ratingId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the elections for a given year.\n\n@param year The year to get elections for.\n@return Elections\n@throws VoteSmartException if there are any errors during the operation\n@throws VoteSmartErrorException if there are any errors during the operation",
        "Get the election by zip5.\n\n@param zip5\n@return ElectionByZip\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the stage candidates for a specific party.\n\n@param electionId\n@param stageId\n@param party\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get an AddressAddress object for an office.\n\n@param officeId\n@return AddressAddress\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get all Offices of a specific type.\n\n@param officeTypeId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get all Offices for a given level.\n\n@param levelId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of Offices for a specific Office Type and Level.\n\n@param officeTypeId\n@param officeLevelId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of Offices for a specific branch and level.\n\n@param branchId\n@param levelId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get counties for a given state.\n\n@param stateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the cities for a given state.\n\n@param stateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the list of official candidates for a local.\n\n@param localId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Query the API and return the response as a JAXBElement.\n\n@param method\n@param argMap\n@param responseType\n@return JAXBElement\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of all the candidates that are in a state.\n\n@param stateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of candidates for a specific office type and state.\n\n@param officeTypeId\n@param stateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of candidate lists for a given zip5.\n\n@param zip5\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the Addl Bio for a candidate.\n\n@param candidateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get Bio information for a candidate.\n\n@param candidateId\n@return Bio\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of candidates for a given last name and election year.\n\n@param lastName\n@param electionYear\n@return CandidateList\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of candidates for a given election.\n\n@param electionId\n@return CandidateList\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a list of candidates for a specific district.\n\n@param districtId\n@param electionYear\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get all Committees of a given type.\n\n@param typeId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get a specific committee.\n\n@param committeeId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the members of a committee.\n\n@param committeeId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the positions of a state.\n\n@param stateId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Get the official leaders for a given leadership.\n\n@param leadershipId\n@return\n@throws VoteSmartException\n@throws VoteSmartErrorException",
        "Sleep for the specified number of milliseconds.\n@param ms The number of milliseconds to sleep.",
        "Starts the timer.",
        "Wait for the task to finish.\n\n@throws Throwable",
        "Closes the input stream.",
        "Merges the values of the given stream into the map of the given map supplier.\n\n@param <K>           type of key\n@param <V>           type of value\n@param <M>           type of map\n@param stream       stream of maps\n@param mergeFunction merge function\n@param mapSupplier map supplier\n@return map",
        "Splits the map into a list of maps with the specified size.\n\n@param map\nthe map to split\n@param limit\nthe size of the resulting map\n@param <K>\nthe key type\n@param <V>\nthe value type\n@return the list of maps",
        "Map sizer.\n\n@param <K> the key type\n@param <V> the value type\n@param limit the limit\n@return the collector",
        "Sorts the entries of the given map using the given comparator.\n\n@param <K>         type of key\n@param <V>         type of value\n@param map         map to sort\n@param comparator comparator to use\n@return sorted map",
        "Returns the first value in the map.\n\n@param map\nthe map\n@param <T>\nthe type of the value\n@return the first value in the map",
        "Asserts that the given test object is null, with a message. If the\nobject is not null, it will fail, and log the error.\n\n@param test\nthe test object\n@param message\nthe message to display if the test object is null",
        "Checks if a test object is not null. If it is null, it will fail, and log\nthe issue with a screenshot for traceability and added debugging support.\n\n@param test      the test object to check\n@param message the message to display if the test object is null",
        "Checks if the String is not null or empty trimmed.\n@param value the String to check\n@param message the message to display if the check fails",
        "Checks if set is null or empty.\n\n@param set     the set to validate.\n@param message the error message. If null, it will be used.\n@param <T>     the type of the set.",
        "Checks if the array is null or empty. If it is null or empty, it will throw an\nerror with the provided message.\n\n@param array\nthe array to check.\n@param message\nthe message to display if the check fails.",
        "Read a resource file and return it as a string.\n@param resourceFile the resource file to read\n@param clazz the class to use\n@return the resource as a string\n@deprecated Use {@link #getResourceAsStream(String)}",
        "Returns a set of words from a resource file.\n@param resourceFile the resource file\n@param clazz the class to load the resource from\n@return a set of words",
        "Get the last modified time of the resource file.\n@param resourceFile the resource file\n@param clazz the class of the resource\n@return the last modified time of the resource file\n@deprecated use {@link #getLastModifiedDate(String, Class)}",
        "Reads the contents of the given input stream and returns it as a String.\n\n@param is\nthe input stream to read from\n@param encoding\nthe encoding to use\n@return the contents of the given input stream as a String",
        "Reads the contents of the given input stream into a byte array.\n\n@param is\nthe input stream to read from\n@return the byte array containing the contents of the given input stream",
        "Reads the contents of the given file into a String.\n\n@param file the file to read\n@return the contents of the file as a String\n@throws IOException if the file cannot be read",
        "Gets the absolute path of the resource.\n\n@param resource the resource name\n@param clazz the class\n@return the absolute path\n@deprecated use {@link #getResourceAbsolutePath(String, Class)}",
        "Generates a random string with the specified length.\n\n@param length\nthe length of the generated string\n@return a random string with the specified length",
        "Generates a long value.\n\n@param length the length of the id\n@return a long value",
        "Joins the given arrays.\n\n@param <T> the type of the elements in the first array.\n@param array1 the first array.\n@param array2 the second array.\n@return the joined array.",
        "Splits the set into a list of sets with the specified maximum size.\n\n@param set the set to split\n@param maxSize the maximum size of the resulting sets\n@param <T> the type of the set\n@return a list of sets with the specified maximum size",
        "Method to get month start instant.\n\n@param time the time\n@return month start instant",
        "Method to get month end instant.\n\n@param time the time instant\n@return month end instant",
        "Trims the given text and returns it if it is not null or empty.\n\n@param text\nthe text to trim\n@return the trimmed text or null if the text is null or empty",
        "Capitalizes the first character of the string.\n\n@param input\n@return",
        "Joins the given arguments with the given separator.\n\n@param args\nthe arguments to join\n@param separator\nthe separator to use\n@return the joined string",
        "Joins the items in the set with the given separator.\n\n@param items\nthe items to join\n@param separator\nthe separator to use\n@return the joined string",
        "Returns a list of all words in the text.\n\n@param text\nthe text to be processed.\n@return a list of all words in the text.",
        "Trims the text down to the specified size.\n\n@param text\nthe text to trim\n@param size\nthe size to trim the text down to\n@return the trimmed text",
        "Trims the text down to the specified size and appends the given string.\n\n@param text the text to trim.\n@param sizeMinusAppend the size of the string to append.\n@param append the string to append.\n@return the trimmed text.",
        "Returns a list of characters from the given text.\n\n@param text the text to convert.\n@return a list of characters from the given text.",
        "Returns the relevance of the first letter of the given string, or -1 if the string is null or empty.\n\n@param value the first letter of the string\n@param search the string to search for\n@return the relevance of the first letter of the given string, or -1 if the string is null or empty",
        "Unquotes a string.\n\n@param text the text to unquote\n@return the unquoted text",
        "Returns the time in milliseconds since the epoch for the timezone.\n\n@param time\nthe time to convert\n@param timezone\nthe timezone to use\n@return the time in milliseconds since the epoch for the timezone",
        "Returns the list of tag states that have the specified tag ID.\n\n@param tagID The ID of the tag to look for.\n@return A list of tag states that have the specified tag ID.",
        "Determines if the severity is a violation.\n\n@param severity\nThe severity to check.\n@return True if the severity is a violation.",
        "Prints the severity icon.\n\n@param level the severity level",
        "Show severity icon.\n\n@param level severity level\n@param textType severity level",
        "Returns a list of tags in the order they were added.\n\n@param brLineBreak true if the line breaks should be added to the list.\n@return a list of tags in the order they were added.",
        "Sets the next node and cleans the previous node.\n\n@param next the next node",
        "Sets the previous node and cleans the node.\n\n@param previous the previous node",
        "Find a node by its host and port.\n\n@param host\nthe host\n@param port\nthe port\n@return the node",
        "Find all nodes that have the given host.\n\n@param host\nthe host to search for\n@return the nodes that have the given host",
        "Returns all nodes that are not dead.\n\n@return all nodes that are not dead",
        "Adds a node to the map.\n\n@param node\nthe node to add",
        "Removes a node from the map.\n\n@param node\nthe node to remove",
        "Marks the given node as alive.\n\n@param node The node to mark as alive.",
        "Marks the given node as dead.\n\n@param node The node to mark as dead.",
        "Sends a node event to all registered handlers.\n\n@param node the node that triggered the event\n@param type the type of event",
        "Returns the version of the Checkstyle API.\n\n@return the version of the Checkstyle API.",
        "Configures the resource locator to search for files in the project's directory.\n\n@param resourceManager the resource manager\n@param request the request\n@param additionalArtifacts the additional artifacts",
        "Builds an object of the factory class.\n\n@param attributes the attributes to use for the object creation.\n@return the created object.",
        "Creates a map of property values from the given default property values and the given attributes.\n\n@param defaultPropertyValues The default property values.\n@param attributes The attributes.\n@return A map of property values.",
        "Returns the current sequence number for the given class.\n\n@param name The name of the class.\n@return The current sequence number for the given class.",
        "Compare this node ID to another.\n\n@param that\n@return 0 if this node ID is equal to that node ID,\n1 if this node ID is greater than that node ID,\n-1 if this node ID is less than that node ID",
        "Gets the eventslist.\n\n@return the eventslist",
        "Find the packages that are contained in the classes in the current execution.\n\n@return a sorted set of packages that are contained in the classes in the current execution.",
        "Set a property on an object\n\n@param target The target object\n@param name The property name\n@param value The property value\n@return True if the property was set",
        "Sets the value of the field with the given name on the given target object.\n\n@param target The target object.\n@param name The field name.\n@param value The field value.\n@return True if the field was set, false otherwise.",
        "Returns all methods annotated with the specified annotation type on the target class.\n\n@param targetClass The target class.\n@param annotationType The annotation type.\n@return The list of methods.",
        "Invokes the given method on the given target object.\n\n@param target    the target object\n@param method   the method to invoke\n@param arguments the arguments to pass to the method",
        "Starts the cache server and waits for it to finish.\n\n@param args\nthe command line arguments\n@throws Exception\nif an error occurs",
        "Get the value of an attribute from a Configuration.\n\n@param config the Configuration to search\n@param parentConfiguration the parent Configuration\n@param attributeName the attribute name\n@param defaultValue the default value to return if the attribute is not found\n@return the value of the attribute",
        "Print the summary of the rules.\n\n@param results the results",
        "Checks if the given audit event matches the given rule.\n\n@param event the audit event\n@param ruleName the rule name\n@param expectedMessage the expected message\n@param expectedSeverity the expected severity\n@return true if the event matches the rule",
        "Creates the key to store the received at time.\n\n@param fromClusterName\nthe name of the cluster from\n@param toClusterName\nthe name of the cluster to\n@return the key to store the received at time",
        "Initializes the cache and region.",
        "Waits until all other clusters have been started.",
        "Waits until all other clusters have been sent.",
        "Waits until all the clusters are connected.",
        "Waits for the node to be connected.\n\n@param timeout\ntimeout for the wait\n@return true if the node is connected",
        "Closes the cache and the cache manager.",
        "Prints the state of the connection process.\n\n@param connected\ntrue if the connection process is connected, false otherwise",
        "Starts a guest node.\n\n@param args\nthe arguments for the guest node",
        "Returns a list of all the properties in the order they are defined.\n\n@return List of all the properties in the order they are defined.",
        "Returns a hash code for the version model.\n\n@param version\nThe version to hash. If -1, the hash code is the same as the\nhash code of the properties.\n@return The hash code for the version model.",
        "Get the total number of pages.\n\n@return total number of pages\n@throws QueryException if something wrong happens",
        "Gets the values.\n\n@param entriesKeysForPage the entries keys for page\n@return the values",
        "Prepares the result data for the query.\n\n@param force\nif true, the query is forced to load the result data even if it has\nbeen already loaded. If false, the query is loaded immediately.",
        "Stores the results of the query.\n\n@param resultKeys\nthe keys of the results",
        "Creates a new instance of the model class.\n\n@param attributes the attributes of the new instance.\n@return the created instance.",
        "Compares two TagToCategory objects.\n\n@param o1 First TagToCategory object.\n@param o2 Second TagToCategory object.\n@return A negative integer, zero, or a positive integer as the first\nTagToCategory object is less than, equal to, or greater than the\nsecond.",
        "Migrate broken locales.\n\n@param preparedStmt prepared stmt\n@param localeMap locale map\n@throws SQLException sql exception",
        "Recalculates the min hash for a topic.\n\n@param topic\nthe topic to be recalculated.\n@param minHashXORs\nthe list of min hash XORs.\n@return true if the min hash was recalculated, false otherwise.",
        "Get the minhashes for the XML.\n\n@param xml the XML to get the minhashes for.\n@param minHashXORs the list of minhash XORs.\n@return the map of minhash functions and their corresponding minhash values.",
        "Clean the XML for min hash.\n\n@param xml the XML to clean\n@return the cleaned XML",
        "Validates the relationships of a topic and fixes them.\n\n@param topic The topic to validate and fix.",
        "Update the content hash of a topic.\n\n@param topic The topic to update.",
        "Validate the tags that are applied to a topic. This method will remove any tags that are not applicable to the topic.\n\n@param topic the topic to validate",
        "Sort the given ClassDocs in the given order by their package name.\n\n@param classDocs The ClassDocs to sort.\n@return A Map of the sorted ClassDocs for each package.",
        "Executes the rule.\n\n@param helper the enforcer rule helper\n@throws EnforcerRuleException if an error occurs",
        "Splices a comma separated list of strings into a single list.\n\n@param toSplice\nthe comma separated list of strings\n@return the single list of strings",
        "Splices a string into a list of Patterns.\n\n@param toSplice\nthe string to splice\n@return a list of Patterns\n@throws PatternSyntaxException\nif the string is not a valid pattern",
        "Checks if the provided string is a prefix of any of the strings in the provided list.\n\n@param source\nthe list of strings to check.\n@param toCheck\nthe string to check.\n@return true if the string is a prefix of any of the strings in the provided list, false otherwise.",
        "Returns the factory class for the given factory class.\n\n@param factoryClass the factory class.\n@return the factory class.",
        "Sends a message to the specified recipient.\n\n@param subject\nthe subject of the message\n@param content\nthe content of the message\n@throws MessagingException\nif the message could not be sent",
        "Sends a message to the specified recipient.\n\n@param subject\nthe subject of the message\n@param content\nthe content of the message\n@param to\nthe recipient's email address\n@throws MessagingException\nif the message could not be sent",
        "Executes the zero function.\n\n@param pool\nthe pool\n@return the int\n@throws FunctionException\nthe function exception\n@throws InterruptedException\nthe interrupted exception",
        "Executes the query.\n\n@param functionContext\nthe function context",
        "Handles the exception.\n\n@param e\nthe exception\n@param resultSender\nthe result sender\n@param queryString\nthe query string",
        "Formats the results of a select operation.\n\n@param selectResults\n@return",
        "Adds an error message to the list of errors.\n\n@param message The error message to add.",
        "Returns the error message.\n\n@return the error message",
        "Checks if the socket is alive.\n\n@param host the host\n@param port the port\n@return true, if the socket is alive",
        "Executes the specified thread.\n\n@param thread\nis the thread to be executed.\n@param timeout\nis the timeout for the thread.",
        "Checks if the resources are in the correct directory.\n\n@param resources the resources\n@return true if the resources are in the correct directory",
        "Merges the deprecated information into the report.\n\n@throws MavenReportException if the deprecated information is invalid.",
        "Adds a limit to the query string.\n\n@param queryString\nthe query string\n@param queryLimit\nthe limit number\n@return the query string with the limit added",
        "Returns the first locator from the given locators string.\n\n@param locatorsString\nthe locators string\n@return the first locator",
        "Returns the size of the region.\n\n@param region the region to get the size of\n@return the size of the region",
        "Returns true if the current thread is a client thread.\n\n@return true if the current thread is a client thread.",
        "Removes all of the elements in the specified set from the specified region.\n\n@param <K>\nthe key type\n@param region\nthe region to remove from\n@param keys\nthe keys to remove",
        "Executes the runnable with exponential backoff.\n\n@param runnable The runnable to execute.\n@param maxRetries The maximum number of retries.\n@param <T> The return type of the runnable.\n@return The result of the runnable.\n@throws InterruptedException Thrown, if the thread is interrupted while waiting for the\noperation to complete.\n@throws OperationRetryFailedException Throw, if the maximum number of retries has been\nreached.",
        "Generate a buffered image from the input.\n\n@param in the input\n@param w the width\n@param h the height\n@throws TranscoderException if an error occurs",
        "Paints the icon.\n\n@param c the component.\n@param g the Graphics context.\n@param x the x location.\n@param y the y location.",
        "Returns the buffered reader.\n\n@return The buffered reader.",
        "Waits until the user presses enter.\n\n@param message The message to display on the screen.",
        "Executes the CheckReplicationTool.\n\n@param args The command line arguments.\n@param debugEnabled Whether or not to print out debug information.\n@param quiet Whether or not to print out quiet mode.",
        "Parses the command-line arguments.\n\n@param commandLineArguments The command-line arguments to parse.",
        "Prints the help message.\n\n@param options the options to print",
        "Construct the options for Gnuplot.\n\n@return the options for Gnuplot",
        "This method aggregates the data from a single cluster.\n\n@param taskResults\nthe list of results from the task",
        "Adds an error message if the property is null.\n\n@param property the property to check.\n@param name the name of the property.\n@return this ExpressionBuilder.",
        "Parses the command line arguments.\n\n@param commandLineArguments\nthe command line arguments",
        "Prints the help message.\n\n@param options the options",
        "Construct the options for Gnu program.\n\n@return the options for Gnu program.",
        "Finds the index of the first command in the given array of arguments.\n\n@param args the array of arguments\n@return the index of the first command in the given array of arguments",
        "Extracts the launcher arguments from the given array.\n\n@param args\nthe array of arguments.\n@param commandIndex\nthe index of the command to extract the launcher\narguments from.\n@return the extracted launcher arguments.",
        "Extracts the command arguments from the given array.\n\n@param args\n@param commandIndex\n@return",
        "Main method for the launcher.\n\n@param args the command line arguments",
        "print debug message to stderr\n\n@param message\n@param t",
        "Starts the timer.",
        "Creates a set of regions based on the given map of region names.\n\n@param regionNames\nthe map of region names.\n@return the set of regions.",
        "Processes the expiration policy for the given region.\n\n@param region the region for which the expiration policy is to be processed\n@param policy the expiration policy to be processed\n@return the number of destroyed entries",
        "Sets the indentation token to use for the generated code.\n\n@param indentationToken\nThe indentation token to use for the generated code.",
        "Returns the package statement found in the given source file.\n\n@param sourceFile the source file\n@return the package statement found or an empty string if none was found",
        "Start the RootDoc.\n\n@param root the RootDoc to start.\n@return true if the RootDoc was started, false if it was already started.",
        "Extracts the ports set from the member.\n\n@param member the member\n@return the ports set\n@throws AdminException if an error occurred",
        "Find or create a pool.\n\n@param host the host\n@param port the port\n@return the pool",
        "Get the name of the event source.\n\n@param eventSrcName\n@return",
        "Get the category of the event.\n\n@param eventSrcName\nthe name of the event source\n@return the category of the event",
        "Enter a new frame.\n\n@param className\nthe name of the class",
        "Exit the current frame.\n\n@param className\nthe name of the class that is currently executing",
        "Returns a string containing the names of the classes that have been loaded.\n\n@return a string containing the names of the classes that have been loaded.",
        "Sets the PackageExtractor implementations to use.\n\n@param packageExtractorImplementations\nThe package extractor implementations to use.\n\n@throws IllegalArgumentException\nIf any of the PackageExtractor implementations are not valid.",
        "Recursively add all source files and directories to the map.\n\n@param fileOrDirectory\n@param package2FileNamesMap",
        "Update the image data.\n\n@throws CustomConstraintViolationException if a constraint has been violated",
        "Sets the original file name of the file that was edited.\n\n@param uiOriginalFileName The original file name of the file that was edited.",
        "Extracts the limit from the query string.\n\n@param queryString\nthe query string\n@return the limit",
        "Formats the select results.\n\n@param queryResults\nthe query results\n@param limit\nthe limit\n@return the select results",
        "check if the given object is allowed in real time 0\n\n@param obj\nthe object to be checked\n@param depth\nthe current depth of the stack (this is used to determine if the object is allowed in real time 0)\n@throws InvalidClassException\nif the given object is not allowed in real time 0",
        "Runs a process with a confirmation.\n\n@param id\nthe id\n@param klass\nthe class\n@param javaArguments\nthe java arguments\n@param processArguments\nthe process arguments\n@return the process\n@throws IOException\nSignals that an I/O exception has occurred.\n@throws InterruptedException\nthe interrupted exception",
        "Run the given class with the default startup delay.\n\n@param klass the class to run.\n@param javaArguments the arguments to pass to the java executable.\n@param processArguments the arguments to pass to the process.\n@return the process.\n@throws IOException if an I/O error occurs.\n@throws InterruptedException if the thread was interrupted.\n@throws TimeoutException if the timeout occurred.",
        "Runs the given class with the given arguments and waits for the process to\nstart. If the processStartupTime is greater than 0, the process will be\nstarted after the specified time.\n\n@param klass\nthe class to run\n@param javaArguments\nthe arguments to pass to the java executable\n@param processArguments\nthe arguments to pass to the process\n@param processStartupTime\nthe time to wait before starting the process\n@return the process\n@throws IOException\nif an IO exception occurs\n@throws InterruptedException\nif the thread is interrupted while waiting\n@throws TimeoutException\nif the timeout occurs",
        "Stops the given process by sending a new line into it.\n\n@param process\nthe process to stop\n@throws IOException\nif an IO exception occurs\n@throws InterruptedException\nif the thread was interrupted while waiting",
        "Starts a process.\n\n@param id\nthe id\n@param klass\nthe klass\n@param javaArguments\nthe java arguments\n@param processArguments\nthe process arguments\n@param withConfirmation\nthe with confirmation\n@return the process\n@throws IOException\nSignals that an I/O exception has occurred.\n@throws InterruptedException\nthe interrupted exception",
        "Redirects the streams of the process to the parent process.\n\n@param id\nthe id of the parent process\n@param klass\nthe class of the parent process\n@param process\nthe process to redirect\n@param redirectProcessStdOut\nthe flag indicating if the process std out should be\nredirected",
        "Waits until the process has been started successfully.\n\n@param className\nthe name of the class that has been started\n@param process\nthe process that has been started\n@throws IOException\nif an I/O exception occurs\n@throws InterruptedException\nif the process has been already finished without\nwaiting for the process to finish",
        "Generates a template from a given template name.\n\n@param outputFilename the name of the file to write the generated template to.\n@param template the name of the template to generate.\n@param context the context to use for merging the template.\n@throws MojoExecutionException if the template cannot be merged.\n@throws IOException if the file cannot be written.",
        "Processes the replication process.\n\n@return the exit code of the process",
        "Checks if is a.\n\n@param clazz  the clazz\n@param pType the p type\n@return true, if is a",
        "Checks if two methods are compatible.\n\n@param method the first method\n@param intfMethod the second method\n@return true if the two methods are compatible",
        "Returns the method that implements the given interface method.\n\n@param clazz\nClass to search\n@param intfMethod\nInterface method to search\n@return Method implementing the given interface method",
        "Gets the type argument.\n\n@param genericType the generic type\n@return the type argument",
        "Resolve a type variable.\n\n@param root the root class\n@param typeVariable the type variable\n@return the resolved type",
        "Returns the actual type arguments of an interface.\n\n@param classToSearch\nClass to search\n@param interfaceToFind\nInterface to find\n@return Type arguments",
        "Populate the pool with the objects that are currently in the pool.\n\n@throws Exception if an error occurs",
        "Add the description of the return option for the given method.\n\n@param method the method for which to add the description.\n@param returnBuilder the return builder for the method.",
        "Returns the given classifier to the pool.\n\n@param pool the pool\n@param object the classifier to return to the pool",
        "Get the destination with the given name.\n\n@param destinationName the name of the destination\n@return the destination with the given name",
        "Returns the consumer for the given destination.\n\n@param destinationName\nthe destination name\n@return the consumer for the given destination",
        "Returns the producer for the given destination.\n\n@param destinationName\nthe destination name\n@return the producer for the given destination",
        "Gets the JMS session.\n\n@return the JMS session",
        "Gets the connection.\n\n@return the connection",
        "Sends a text message to a destination.\n\n@param destinationName\nthe destination name\n@param messageContent\nthe message content",
        "Register a message listener to receive text messages from a destination.\n\n@param destinationName the name of the destination\n@param messageListener the listener to receive text messages",
        "Receive a text message from a destination with a specified timeout.\n\n@param destinationName\nthe destination name\n@param timeout\nthe timeout\n@return the text message",
        "Stops the producer and consumer.",
        "Handles a load from the user data service.\n\n@param loadedUser The user that has been loaded from the user data service.\n@param recommendationsCallback The callback that is invoked when the recommendations are available.",
        "Returns the configuration of the pool.\n\n@return the configuration of the pool.",
        "Sets the id of the entity.\n\n@param id The id of the entity.",
        "Sets the model file.\n\n@param model the model file",
        "Add or update a Weka model.\n\n@param wekaModelConfig the model config\n@throws FOSException",
        "Remove model.\n\n@param modelId the model id",
        "Clustered event manager service queue.\n\n@param eventBusCluster the event bus cluster\n@return the service queue",
        "Clustered event manager.\n\n@param eventConnectorHub the event connector hub\n@return the event manager",
        "Encodes non-ASCII characters in the string.\n\n@param string the string to encode\n@return the encoded string",
        "Decodes a multivalued map.\n\n@param map the multivalued map to decode\n@return the decoded multivalued map",
        "Creates a service group from the given resource classes.\n\n@param resourceClasses the resource classes\n@param serviceGroupBuilder the service group builder\n@return the created service group",
        "Closes the server.\n\n@throws FOSException",
        "This method forwards an event to the event connector.\n\n@param event the event to forward.",
        "Returns all annotations on a method.\n\n@param method\nthe method\n@return the annotations",
        "Find annotation.\n\n@param <T>        the type parameter\n@param type       the type\n@param annotations the annotations\n@param annotation the annotation\n@return the t",
        "Creates a resource constructor for the given class.\n\n@param annotatedResourceClass The class for which a resource constructor is required.\n@return A resource constructor.",
        "Creates a resource class from the given class.\n\n@param clazz\n@return",
        "Sets up the bagging classifiers.\n\n@param bagging\nthe enhancer to use\n@throws Exception\nif the bagging classifiers cannot be set up",
        "Get the object from the serialized form.\n\n@return the object\n@throws IOException            if an I/O exception occurs\n@throws ClassNotFoundException if a class cannot be found",
        "Returns the serialized form of the object.\n\n@return the serialized form of the object.",
        "Writes the serialized object to the specified file.\n\n@param file the file to write to\n@throws IOException if an I/O error occurs",
        "Returns the leaf score of the given distribution.\n\n@param classDistribution\nthe distribution\n@param instances\nthe instances\n@return the leaf score",
        "Returns the provider URL.\n\n@return the provider URL",
        "Returns the context.\n\n@return the context",
        "Gets the connection supplier.\n\n@return the connection supplier",
        "Builds the service.\n\n@return the jms service",
        "Returns the type for the given jackson type.\n\n@param jacksonType the jackson type\n@return the type for the given jackson type",
        "Returns the Jackson type for the given Java type.\n\n@param type the Java type\n@return the Jackson type",
        "Introspects the given serializer.\n\n@param serializer the serializer to introspect\n@param type       the type to introspect",
        "Introspects the serializer and adds the properties to the custom type.\n\n@param beanSerializer The serializer to introspect.\n@param type           The custom type to add the properties to.",
        "Introspects the enum serializer and adds the enumeration values to the\nCustomType.\n\n@param enumSerializer\nthe enum serializer\n@param type\nthe CustomType",
        "Introspects the serializer and adds the types to the type object.\n\n@param mapSerializer the map serializer\n@param type the type object",
        "frame 1.",
        "Frame 3.",
        "Frame 4.",
        "Randomly move the array to the next position.",
        "Returns the next number in the sequence.\n@return the next number in the sequence",
        "Main method to run the benchmark.\n\n@param args\nthe command line arguments",
        "Makes a last name from a number.\n\n@param number\nThe number of the last name.\n@return The last name.",
        "Randomly choose from a distribution.\n\n@param probs\nthe probabilities\n@return the selected index",
        "Get the relative path of the given file from the given repository.\n\n@param in the file to get the relative path from\n@param repositoryPath the repository where the file is located\n@return the relative path of the given file from the given repository\n@throws JavaGitException if the path is not relative or absolute",
        "Add a file to the working tree.\n\n@return the GitAddResponse object containing the result of the add operation.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if an error occurs.",
        "Commits the changes made to this file.\n\n@param comment the commit comment.\n@return the response of the commit.\n@throws IOException if an I/O error occurs.\n@throws JavaGitException if a Git error occurs.",
        "Move a file to a new location.\n\n@param dest the new location\n@return the response\n@throws IOException if an I/O exception occurs\n@throws JavaGitException if a Git exception occurs",
        "Remove a file from the working tree.\n\n@return the response\n@throws IOException if an I/O exception occurs\n@throws JavaGitException if an error occurs",
        "Check if the file exists.\n\n@param file the file to check\n@throws IOException if the file does not exist",
        "Check if two lists are equal.\n\n@param l1 first list\n@param l2 second list\n@return true if lists are equal",
        "Checks if the index is in the range.\n\n@param index the index to check.\n@param start the lower bound of the range.\n@param end the upper bound of the range.\n@throws IndexOutOfBoundsException if the index is out of range.",
        "Get the client instance for the given client type.\n\n@param clientType\nthe client type\n@return the client instance",
        "Sets the preferred client type.\n\n@param preferredClientType the preferred client type to set",
        "Add a list of files to a repository.\n\n@param repositoryPath\nthe path to the repository.\n@param options\nthe options for adding the files.\n@param paths\nthe list of files to add.\n@return the GitAddResponse object.\n@throws JavaGitException\nif an error occurs.\n@throws IOException\nif an error occurs.",
        "Add files to a repository.\n\n@param repositoryPath\nthe path to the repository\n@param files\nthe files to add\n@return the response\n@throws JavaGitException\nif an error occurs\n@throws IOException\nif an IO error occurs",
        "Add a file to a repository.\n\n@param repositoryPath the path to the repository.\n@param file            the file to add.\n@return the response.\n@throws JavaGitException if an error occurs.\n@throws IOException        if an IO error occurs.",
        "Adds a file to a repository.\n\n@param repositoryPath the path to the repository\n@param options the options for adding the file\n@param file the file to add\n@return the response\n@throws JavaGitException if a git error occurs\n@throws IOException if there is an IO error",
        "Add a list of files to a repository.\n\n@param repositoryPath the path to the repository.\n@param paths the files to add.\n@return the response from the server.\n@throws JavaGitException if an error occurs.\n@throws IOException if an error occurs.",
        "Add a list of files to a repository.\n\n@param repositoryPath the path to the repository.\n@param paths the files to add.\n@return the response from the server.\n@throws JavaGitException if an error occurs.\n@throws IOException if an error occurs.",
        "Add a list of files to a repository, forcefully.\n\n@param repositoryPath the path to the repository.\n@param paths the files to add.\n@return the response from the server.\n@throws JavaGitException if an error occurs.\n@throws IOException if an error occurs.",
        "Sets the dryRun flag if the options are set.\n\n@param options the options\n@param response the response",
        "Compares the release minor of two git versions.\n\n@param that the version to compare to.\n@return a negative integer, zero, or a positive integer as this is less than, equal to, or greater than the specified version.",
        "Add a list of files to a repository.\n\n@param repositoryPath the path to the repository.\n@param options the options for adding the files.\n@param paths the list of files to add.\n@return the response from the server.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if there is a problem with the Git client.",
        "Add a list of files to a repository.\n\n@param repositoryPath the path to the repository.\n@param paths the files to add.\n@return the response.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if a Git exception occurs.",
        "Executes a Git commit command.\n\n@param repository the repository to use.\n@param options the commit options.\n@param message the commit message.\n@param paths the paths to commit.\n@return the commit response.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Set the Git path.\n\n@param path the Git path.\n@throws IOException if the path is not a directory or if the path is not a valid git directory.\n@throws JavaGitException if the path is not a valid git directory.",
        "Creates a list of parameters from a method.\n\n@param method\nthe method\n@return the list of parameters",
        "Returns an array of function definition values.\n\n@param functionOffset the offset of the function in the grammar\n@param maxParams the maximum number of parameters\n@param returnType the return type of the function\n@return an array of function definition values",
        "Returns an array of parameter values.\n\n@param ws\n@param binder\n@param ctx\n@return",
        "Check if the instance exists.\n\n@param path the path\n@return true, if the instance exists",
        "Creates a new branch.\n\n@param name the name of the new branch.\n@return the new branch.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if a Git exception occurs.",
        "Deletes a branch.\n\n@param branch the branch to delete.\n@param forceDelete true to force delete the branch, false to not delete it.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Renames a branch.\n\n@param branchFrom the branch to rename\n@param nameTo the new name of the branch\n@param forceRename if true, the branch will be renamed even if it already exists\n@return the new branch reference\n@throws IOException if there is a problem accessing the repository\n@throws JavaGitException if there is a problem with the Git object",
        "Get all branches of this branch.\n\n@return an iterator of branches.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if a Git exception occurs.",
        "Commits all changes in the repository.\n\n@param repository the repository to commit changes to.\n@param message the commit message.\n@return the response.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if a JavaGit exception occurs.",
        "Convert an object to another type.\n\n@param from the object to convert.\n@param to the target type.\n@return the converted value.\n@throws UnsupportedOperationException if the converter does not exist.\n@throws RuntimeException if the conversion failed.",
        "Converts an integer to a boolean.\n\n@param value the integer value\n@return the boolean value",
        "Converts a Boolean value to an Integer value.\n\n@param value the Boolean value\n@return the Integer value",
        "Convert a long date to a string.\n\n@param value the date to convert\n@return the string representation of the date",
        "Get the message for the given error code.\n\n@param code the error code\n@return the message",
        "Get the file that is needed to update the given index.\n\n@param index The index of the file to update.\n@return The file that is needed to update the given index.",
        "Add a file to the list of files to be committed.\n@param file the file to add",
        "Add a file to the list of files that are not updated.\n@param file the file to add",
        "Add a file to the list of modified files to commit.\n@param file the file to add",
        "Add a file to the list of files that have been modified since the last\nrun.\n\n@param file the file to add",
        "Add a file to the list of files that need to be committed.\n@param file the file to add",
        "Add a file to the list of files that should be committed.\n@param file the file to add",
        "Add a file to the list of untracked files.\n@param file the file to add",
        "Creates a new parameter.\n\n@param name the name of the parameter\n@param type the type of the parameter\n@param required whether the parameter is required\n@return the parameter\n@throws IllegalArgumentException if the type is not valid",
        "Get the value of this parameter.\n\n@param binder the data binder\n@return the value of this parameter",
        "Set the value of verbose option.\n\n@param optVerbose\nvalue of verbose option",
        "Set whether -d should be used for lower case delete.\n@param optDLower true if -d should be used for lower case delete, false if -d\nshould be used for upper case delete.",
        "Set whether the delete option should be set to upper case.\n@param optDUpper true if the delete option should be set to upper case, false if\nit should be set to lower case",
        "Set whether -m should be used with -M.\n@param optMLower true if -m should be used with -M, false otherwise",
        "Set whether -M should be used with -m.\n@param optMUpper true if -M should be used with -m, false otherwise",
        "Returns the return type of a function.\n\n@param m the function\n@return the return type of the function",
        "Evaluates a function.\n\n@param info the script info\n@param args the arguments\n@param context the execution context\n@return true if the function was handled, false if not\n@throws IllegalArgumentException if the number of arguments is not enough\n@throws ServiceException if an error occurs",
        "Returns the value array of the method parameter.\n\n@param method the method.\n@param args the method arguments.\n@param ctx the execution context.\n@return the value array of the method parameter.\n@throws IllegalArgumentException if the method argument is not a valid method parameter.\n@throws ServiceException if the method is not inside a service context.",
        "Runs a function method.\n\n@param functionIndex the function index\n@param args the arguments\n@param ctx the execution context\n@return the return value\n@throws SecurityException if the caller does not have permission to call the method\n@throws NoSuchMethodException if the method is not found\n@throws IllegalArgumentException if the method's parameter types are not compatible with the\nexecution context\n@throws ServiceException if the method throws an exception\n@throws IllegalAccessException if the method cannot be accessed\n@throws InvocationTargetException if the method cannot be invoked",
        "Converts the return value of a script to a JavaScript value.\n\n@param result the return value of a script\n@return the JavaScript value",
        "Evaluates the script variable.\n\n@param info\nthe script info\n@param returnBool\nthe boolean array to return the result\n@param returnString\nthe string array to return the result\n@param context\nthe execution context\n@param isConditional\nthe boolean array to return the result\n@return true if the script variable was evaluated, false if it was not\nevaluated\n@throws ServiceException",
        "Branch a repository.\n\n@param repositoryPath the repository path.\n@return the response.\n@throws IOException            if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Delete a branch from a repository.\n\n@param repositoryPath the repository path.\n@param forceDelete if true, the branch will be deleted even if it is in the \"deleted\" state.\n@param remote if true, the branch will be deleted from the remote.\n@param branchName the branch to delete.\n@return the response of the delete operation.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Delete a list of branches from a repository.\n\n@param repositoryPath the path to the repository.\n@param forceDelete whether to force delete the branch or not.\n@param remote whether the branch is on a remote server.\n@param branchList the list of branches to delete.\n@return the response of the delete operation.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Rename a branch.\n\n@param repositoryPath the path to the repository.\n@param forceRename if true, the branch will be renamed even if it already exists.\n@param newName the new name of the branch.\n@return the response of the operation.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Commits the changes made to the file.\n\n@param comment the commit comment.\n@return the response.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if a JavaGit exception occurs.",
        "Get the current branch.\n\n@return the current branch\n@throws IOException if an I/O exception occurs\n@throws JavaGitException if a Git exception occurs",
        "Checkout a branch.\n\n@param ref the ref to checkout\n@throws IOException if an I/O exception occurs\n@throws JavaGitException if a Git exception occurs",
        "Get the status of the repository.\n\n@return the Git status response\n@throws IOException if an IO exception occurs\n@throws JavaGitException if an error occurs",
        "Remove a file from a repository.\n\n@param repository the repository to remove the file from.\n@param path the path to remove.\n@return the response.\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if an error occurs.",
        "Returns the file at the given index in the list of files to commit.\n\n@param index The index of the file to return.\n@return The file at the given index in the list of files to commit.",
        "Returns the file from the list of deleted files to commit.\n\n@param index The index of the file to return.\n@return The file at the given index.",
        "Get the file from the list of modified files to commit.\n\n@param index The index of the file to get.\n@return The file at the specified index.",
        "Returns the file at the given index in the list of deleted files.\n\n@param index The index of the file to return.\n@return The file at the given index in the list of deleted files.",
        "Returns the file at the specified index.\n\n@param index The index of the file to return.\n@return The file at the specified index.",
        "Returns the file at the given index in the list of untracked files.\n\n@param index The index of the file to return.\n@return The file at the given index in the list of untracked files.",
        "Returns the file from the list of renamed files.\n\n@param index The index of the file to return.\n@return The file at the given index.",
        "Returns the error at the given index.\n\n@param index the index of the error to return\n@return the error at the given index",
        "Returns a string containing the errors.\n\n@return a string containing the errors.",
        "Reset a repository.\n\n@param repository the repository to reset.\n@return the response\n@throws IOException if an I/O exception occurs.\n@throws JavaGitException if an error occurs.",
        "Add a file to the list of added files.\n\n@param pathToFile\n@param mode\n@return true if the file was added, false otherwise",
        "Add a file to be copied or moved.\n\n@param sourceFilePath\n@param destinationFilePath\n@param percentage\n@return true if the file was added, false otherwise",
        "Add a file to be deleted.\n\n@param pathToFile\n@param mode\n@return true if the file was added, false otherwise",
        "Sets the number of files that have been changed since the last run.\n\n@param filesChangedStr the number of files that have been changed since the last run\n@return true if the value was set, false otherwise",
        "Sets the number of lines deleted.\n\n@param linesDeletedStr the lines deleted to set\n@return true if the lines deleted is set, false otherwise",
        "Sets the number of lines that have been inserted.\n\n@param linesInsertedStr the number of lines that have been inserted\n@return true if the number of lines was set, false otherwise",
        "Executes a Git mv command.\n\n@param repoPath the path to the repository.\n@param options the options for the command.\n@param source the source files.\n@param destination the destination file.\n@return the GitMvResponse object.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "find the first index of the character in the string starting at the specified index\n\n@param str the string to search\n@param from the index to start at\n@param c the character to search for\n@return the index of the character in the string",
        "Get a result set from the service.\n\n@param name the name of the result set\n@param service the service\n@return the result set",
        "Get the log of the repository.\n\n@param repositoryPath\nthe path to the repository.\n@param options\nthe options for the command.\n@return the list of commits.\n@throws JavaGitException\nif an error occurred\n@throws IOException\nif an error occurred",
        "Adds a commit to the list of commits.",
        "Add a file to the commit.\n@param filename the filename of the file.\n@param linesAdded the number of lines added.\n@param linesDeleted the number of lines deleted.",
        "Checkout a branch.\n\n@param repositoryPath\nthe path to the repository.\n@param options\nthe options for the checkout.\n@param ref\nthe ref to checkout.\n@return the response from the git checkout.\n@throws JavaGitException\nif an error occurs.\n@throws IOException\nif an error occurs.",
        "Checkout a repository.\n\n@param repositoryPath the path to the repository.\n@return the response from the Git checkout command.\n@throws JavaGitException if an error occurs\n@throws IOException     if an IO error occurs",
        "Checkout a branch of a repository.\n\n@param repositoryPath the path to the repository.\n@param branch the branch to checkout.\n@return the response from the Git command.\n@throws JavaGitException if a Git related error occurs.\n@throws IOException if there is an error accessing the repository.",
        "Checkout a list of files from a repository.\n\n@param repositoryPath\nthe path to the repository.\n@param paths\nthe list of files to checkout.\n@return the response from the git checkout.\n@throws JavaGitException\nif an error occurs.\n@throws IOException\nif an error occurs.",
        "Checkout a single path in a repository.\n\n@param repositoryPath the path to the repository.\n@param options        the options for the checkout.\n@param ref            the ref to checkout.\n@param paths          the paths to checkout.\n@return the response from the git checkout.\n@throws JavaGitException if an error occurs.\n@throws IOException     if an error occurs.",
        "Checkout a file in a repository.\n\n@param repositoryPath\nthe path to the repository.\n@param options\nthe options for the checkout.\n@param branch\nthe branch to checkout.\n@param path\nthe path to checkout.\n@return the response from the git checkout.\n@throws JavaGitException\nif an error occurs.\n@throws IOException\nif an error occurs.",
        "Checks if a Ref is of the correct type.\n\n@param ref\nthe Ref to check\n@param refType\nthe type of the Ref\n@throws IllegalArgumentException\nif the Ref is not of the correct type",
        "Get all of the children of this directory.\n\n@return a list of GitFileSystemObject objects.\n@throws IOException if an I/O error occurs.\n@throws JavaGitException if an error occurs.",
        "Returns the file at the specified index.\n\n@param index\nThe index of the file to return.\n@return The file at the specified index.",
        "Checkout a list of paths.\n\n@param repositoryPath the path to the repository.\n@param paths the list of paths to checkout.\n@return the response from the Git checkout.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Checkout a single file or directory.\n\n@param repositoryPath the path to the repository.\n@param ref the ref to checkout.\n@param paths the list of files to checkout.\n@return the GitCheckoutResponse object.\n@throws JavaGitException if an error occurred.\n@throws IOException if there is an error accessing the repository.",
        "Sets a comment on the line with the given number.\n\n@param lineNumber the line number\n@param commentString the comment string",
        "Sets the delete options.\n\n@param options the options\n@param forceDelete the force delete\n@param remote the remote",
        "Injects service methods for the given class.\n\n@param klass the class to inject service methods for\n@throws DataException if an error occurs",
        "Injects a service method.\n\n@param method the method to be injected\n@param annotation the service method annotation\n@throws DataException if the service method cannot be injected",
        "Set the branch to which this entry is mapped.\n\n@param newBranch The new branch name.",
        "Executes a Git clone.\n\n@param workingDirectoryPath the working directory path.\n@param options the options.\n@param repository the Git repository URL.\n@param directory the directory to clone.\n@return the GitCloneResponse object.\n@throws IOException if an IO exception occurs.\n@throws JavaGitException if an error occurs.",
        "Load the filter configuration from the specified file.",
        "Returns an Enumeration of URLs for the resources in the jar file.\n\n@param classLoader the ClassLoader to use\n@param configFileName the name of the config file\n@return an Enumeration of URLs",
        "Sets up the object.\n\n@param resetType the type of reset\n@param commitName the name of the commit",
        "Adds a method to the methods map.\n\n@param m the method to add\n@return the hashcode of the method",
        "Filter the data.\n\n@param ws\n@param binder\n@param ctx\n@return\n@throws DataException\n@throws ServiceException",
        "Decreases the number of open database connections.",
        "Consumes the database connection.\n\n@param dbConsumer the consumer",
        "Executes a query on the database.\n\n@param table\nThe table to query.\n@param columns\nThe columns to query.\n@param selection\nThe selection clause.\n@param selectionArgs\nThe selection arguments.\n@param groupBy\nThe group by clause.\n@param having\nThe having clause.\n@param orderBy\nThe order by clause.\n@return A {@link Cursor} object.",
        "Executes the given SQL statement, returning a Cursor.\n\n@param sql\nThe SQL statement to execute.\n@return A {@link Cursor} object.",
        "Builds the command line for the git rm command.\n\n@param options the options\n@param path the path\n@param paths the paths\n@return the command line",
        "Returns the file at the given index.\n\n@param index The index of the file to return.\n@return The file at the given index.\n@throws IndexOutOfBoundsException if the index is out of range.",
        "Returns the file at the given index.\n\n@param index The index of the file to return.\n@return The file at the given index.",
        "Returns the modified file at the given index.\n\n@param index The index of the modified file to return.\n@return The modified file at the given index.\n@throws IndexOutOfBoundsException if the index is out of range (0, size() - 1).",
        "Get the status of the file.\n\n@return the status of the file.\n@throws IOException if an I/O error occurs.\n@throws JavaGitException if an error occurs.",
        "Get the HTML head element.\n\n@return the head element",
        "Get the files that are currently selected.\n\n@return the files that are currently selected.",
        "Returns the number of files in the element.\n\n@return the number of files in the element.",
        "Returns true if the string matches the pattern.\n\n@param string the string to match\n@return true if the string matches the pattern",
        "Updates the list after a hit.\n\n@param entry the entry",
        "Removes the last entry from the list.",
        "Cleans up the cache entries that have expired.",
        "Updates the list after a hit.\n\n@param entry the entry",
        "Checks if a string starts with a substring.\n\n@param src the source string\n@param find the substring to find\n@param startAt the index of the first character to search\n@return true if the string starts with the substring",
        "Get an access token from the OAuth2 provider.\n\n@param requestToken the request token\n@param verifier      the verifier\n@return the access token",
        "Signs the given request with the given access token.\n\n@param accessToken the access token\n@param request      the request to sign",
        "Get the authorization URL.\n\n@param config the OAuth config.\n@return the authorization URL.",
        "Finishes the current build.\n\n@return {@code true} if the build was successful.",
        "Finishes the creation of a sample file.\n\n@param containerName the name of the container to create.\n@param location the location of the container.\n@param monitor the progress monitor.\n@throws CoreException if the creation fails.",
        "Creates the control for the artifact editor.\n\n@param parent the parent control",
        "Returns the default package for the artifact.\n\n@return the default package for the artifact.",
        "Sets the visibility of the component.\n\n@param visible\nthe new visibility",
        "Creates a debug string for the query.\n\n@return the debug string",
        "Returns the query parameters as a list.\n\n@return the query parameters as a list.",
        "Creates the control for the palette.\n@param parent the parent composite",
        "Add a palette item to a category\n@param category the category to add the item to\n@param item the item to add",
        "Returns the palette items for the given category.\n@param category the category\n@return the palette items for the given category",
        "Configures the table to be resizing based on the client area width.\n\n@param parent the parent composite.\n@param table the table.\n@param column1 the first column.\n@param column2 the second column.",
        "Returns the currently selected template.\n\n@return the currently selected template",
        "Returns the template string for the currently selected template.\n\n@return the template string for the currently selected template.",
        "Loads the last saved preferences.",
        "Saves the last saved preferences.",
        "Sets the selected template.\n\n@param templateName the selected template name",
        "Updates the viewer input.",
        "Create an in-expression.\n\n@param relativePath the relative path to the object.\n@param values the values.\n@return the criterion.",
        "Creates a member-of criterion.\n\n@param relativePath the relative path\n@param value the value\n@return the criterion",
        "Create a not-member-of criterion.\n\n@param relativePath The relative path.\n@param value The value.\n@return The criterion.",
        "Create the field editors for the Google API client.",
        "Returns the last path component of the given path.\n\n@param path the path\n@return the last path component",
        "Initialises the container name field.",
        "Validates the page.\n\n@return true if the page is valid",
        "Checks if the extension of the file is valid for the content type.\n\n@param fileName\nthe name of the file.\n@return true if the extension is valid for the content type.",
        "Adds the default extension to the filename.\n\n@param filename the filename.\n@return the new filename.",
        "Returns the project from the given path.\n\n@param path the path to check.\n@return the project.",
        "Gets the user id.\n\n@param request the request\n@return the user id",
        "Creates the first page in the nested text editor.",
        "Save the current page as the file.",
        "If the resource of the text editor is changed, close the editor.\n\n@param event the change event.",
        "Shows the page.",
        "Creates a log message for a JPQL query.\n\n@param query the JPQL query\n@param parameterValues the parameter values\n@return the log message",
        "Converts an object to a string.\n\n@param obj the object to convert\n@return the string representation of the object",
        "Inserts a new timeline item into the repository.\n\n@param item\nthe new timeline item\n@return the updated timeline item\n@throws IOException\nif any error occurs",
        "Insert a new timeline item into the repository.\n\n@param item\nthe timeline item to be inserted\n@param attachmentContentType\nthe content type of the attachment\n@param attachmentData\nthe data of the attachment\n@throws IOException\nif any error occurs",
        "Inserts a new timeline item with an attachment.\n\n@param item\nthe item to be inserted\n@param attachmentContentType\nthe content type of the attachment\n@param attachmentInputStream\nthe stream of the attachment\n@throws IOException\nif an error occurs",
        "Validates the response message against a keyword.\n\n@param response the response to validate.\n@param keyword the keyword to validate against.",
        "Returns the query string for the given criteria.\n\n@param criteria the criteria\n@param queryBuilder the query builder\n@return the query string",
        "Returns the template store.\n\n@return the template store",
        "Returns the context type registry.\n\n@return the context type registry",
        "Replies the action with the given ID.\n\n@param editor the editor.\n@param actionID the ID of the action.\n@return the action.",
        "Creates a new DBI instance.\n\n@return the DBI instance\n@throws Exception if the DBI instance cannot be created",
        "Appends the limit and offset set.\n\n@param sql\nthe sql\n@param page\nthe page",
        "Create a new named property.\n\n@param name  the name of the property\n@param value the value of the property\n@param <N>  the type of the name\n@return the named property",
        "Creates a named property with the given name and value.\n\n@param name the name of the property\n@param value the value of the property\n@param <N> the type of the property name\n@return a named property with the given name and value",
        "Creates a new named property.\n\n@param name  the name of the property\n@param value the value of the property\n@param <N>  the type of the name\n@return the named property",
        "Create a literal string literal.\n\n@param value the value\n@param <N> the type\n@return the literal",
        "Create a literal for a URI.\n\n@param value the URI value\n@param <N> the literal type\n@return the literal",
        "Create a typed literal.\n\n@param value the value\n@param type the type\n@param <N> the value type\n@return the literal",
        "Create a QName from the given namespace URI, local part and prefix.\n\n@param namespaceURI the namespace URI\n@param localPart the local part\n@param prefix the prefix\n@return the QName",
        "Initializes the CORS filter.\n\n@param filterConfig the filter configuration\n@throws ServletException if an error occurs",
        "Sets the entity id and entity version to 1 and sets the created by entity id.\n\n@param createdByEntityId\nthe created by entity id",
        "Initializes the field handler.\n\n@param parser the parser\n@throws IOException Signals that an I/O exception has occurred.",
        "Updates the entity.\n\n@param lastupdatedByEntityId the last updated by entity id",
        "Closes all listeners.\n\n@param port the port to close",
        "Starts the server.\n\n@param args the command line arguments",
        "Validates the given instance.\n\n@param instance\nThe instance to validate.\n@throws ValidationException\nIf the instance is invalid.",
        "Validates the given arguments.\n\n@param args\nthe arguments\n@param instance\nthe instance\n@param m\nthe method\n@param cmd\nthe command",
        "Subscribes to a topic.\n@param name the name of the topic\n@param listener the listener to be notified\n@param headers a map of headers to add to the subscribe request",
        "Unsubscribes a listener from a group.\n\n@param name the name of the group\n@param l the listener to be removed",
        "Unsubscribes a listener from the channel.\n\n@param name the name of the listener to unsubscribe.\n@param header a map of header parameters.",
        "Unsubscribes a user from the group.\n\n@param name the user's name\n@param header the user's header\n@throws InterruptedException if the thread gets interrupted",
        "Transmits a message to a destination.\n\n@param dest the destination\n@param mesg the message to send\n@param header a map of header parameters",
        "Returns the next message in the queue.\n\n@param name the name of the destination\n@return the next message in the queue",
        "Returns true if the receipt with the given ID exists.",
        "Removes a receipt from the list of receipts.\n@param receipt_id The id of the receipt to remove",
        "Logs the dead event.\n\n@param deadEvent the dead event",
        "Convert the given source object to the given target class.\n\n@param source\nthe source object\n@param targetclass\nthe target class\n@return the converted object",
        "Returns the priority of the given number of lines.\n\n@param lines the number of lines.\n@return the priority of the given number of lines.",
        "Executes a command.\n\n@param p\nthe parser",
        "Inject options from the parser into the instance.",
        "Adjusts the list of arguments to match the method's signature.\n\n@param args the list of arguments\n@param m the method\n@return the adjusted list of arguments",
        "Performs the migration for the given personality.\n\n@param metadataManager the metadata manager\n@param personalityName the personality name\n@param targetVersion the target version\n@param options the migration options\n@return the migration results",
        "Tag the request with the CORS information.\n\n@param request the request being tagged",
        "Handles an actual CORS request.\n\n@param request\nthe HTTP request\n@param response\nthe HTTP response\n@throws InvalidCORSRequestException\nif the request is not a valid CORS request\n@throws CORSOriginDeniedException\nif the origin is not allowed\n@throws UnsupportedHTTPMethodException\nif the request method is not supported",
        "Handles a preflight CORS request.\n@param request the request\n@param response the response\n@throws InvalidCORSRequestException if the request is not a CORS request\n@throws CORSOriginDeniedException if the origin is not allowed\n@throws UnsupportedHTTPMethodException if the requested method is not supported\n@throws UnsupportedHTTPHeaderException if the requested headers are not supported",
        "Parse the options and set the values.\n\n@param options the options to parse\n@return true if the options were parsed successfully\n@throws Exception if an error occurred",
        "Checks the configuration.\n\n@return\t\tThe error message if any.",
        "Filters a list of lines based on a regular expression.\n\n@param lines\t\tthe lines to filter\n@param regexp\t\tthe regular expression to filter the lines\n@param invert\t\tif true, the lines are not filtered\n@return\t\tthe filtered lines",
        "Returns the regular expression for the packages.\n\n@return\t\tthe regular expression",
        "Writes the dependencies to the output file.",
        "Compares this instance with the specified instance.\n\n@param instanceProvider the instance to compare with\n@return a negative integer, zero, or a positive integer as this instance is\nless than, equal to, or greater than the specified instance",
        "Get the IOUtils instance.\n\n@return the IOUtils instance",
        "Get image utils.\n\n@return image utils",
        "Get the price utils.\n\n@return the price utils",
        "Get the resource utils.\n\n@return the resource utils",
        "Get the ZipUtils instance.\n\n@return the ZipUtils instance.",
        "Get the digest utils.\n\n@return the digest utils",
        "Get the string utils.\n\n@return the string utils",
        "Get the resource service.\n\n@return the resource service",
        "Get the pricing service.\n\n@return the pricing service",
        "Get the instance service.\n\n@return the instance service",
        "This method will create a digital object from the given file.\n\n@param uploadedFile The file containing the digital object.\n@return A set of object ids.\n@throws HarvesterException",
        "Creates a digital object from a file.\n\n@param file\n@return\n@throws HarvesterException\n@throws StorageException",
        "Stores a list of values in a property.\n\n@param props\nthe properties\n@param details\nthe details\n@param field\nthe field",
        "Ensure that the metadata table exists.\n\n@param options the options to apply to the migration\n@return the list of metadata info\n@throws MigratoryException if the migration cannot be executed",
        "Creates a source detail for a duplicate code.\n\n@param owner the build that owns the source\n@param container the container containing the duplicate code\n@param defaultEncoding the default encoding to use\n@param fromString the string representation of the from annotation\n@param toString the string representation of the to annotation\n@return the source detail",
        "Validates the given threshold against the normal threshold.\n\n@param highThreshold the high threshold\n@param normalThreshold the normal threshold\n@param message the error message\n@return {@link FormValidation#ok()} if the threshold is valid, {@link FormValidation#error(String)} otherwise",
        "Validate the arguments.\n\n@param args the arguments\n@param instance the instance\n@param m the method\n@param cmd the command",
        "Validates the given instance.\n\n@param instance the instance to validate",
        "Checks if the class is on the classpath.\n\n@param className the class name\n@return true if the class is on the classpath",
        "Check if the given URI is acceptable for migration.\n\n@param uri the URI to check\n@return true if the given URI is acceptable for migration",
        "Loads the content of the given file URI into a string.\n\n@param fileUri the file URI\n@return the content of the file",
        "Runs the CLI.\n\n@throws RuntimeException if an error occurs",
        "Read commands from XML files.",
        "Post process.\n\n@param target\nthe target\n@param baseRequest\nthe base request\n@param request\nthe request\n@param response\nthe response\n@throws IOException\nSignals that an I/O exception has occurred.\n@throws ServletException\nthe servlet exception",
        "Pre process the target.\n\n@param target\nthe target\n@param baseRequest\nthe base request\n@param request\nthe request\n@param response\nthe response\n@return the map\n@throws IOException\nSignals that an I/O exception has occurred.\n@throws ServletException\nthe servlet exception",
        "Migrate the database.\n\n@param migrationPlan the migration plan\n@param options the options\n@return the metadata info\n@throws MigratoryException the migrator exception",
        "Validates a set of personalities against the database.\n\n@param personalities the personalities to validate\n@param options the options to apply\n@return a map of the validation results\n@throws MigratoryException if an error occurred",
        "Returns a map of metadata information about the specified personalities.\n\n@param personalities the personalities to retrieve metadata information for\n@param options the options to use\n@return a map of metadata information about the specified personalities\n@throws MigratoryException if an error occurred",
        "Initializes the database.\n\n@param options the options\n@return the metadata info\n@throws MigratoryException the migrator exception",
        "Convert a list of lines to a list of statements.\n\n@param lines the lines to convert\n@return the list of statements",
        "region > findByNotableAndCalendarName",
        "region > updateLink",
        "Parse the command line options.\n\n@param args\n@return",
        "Transmits a command to the server.\n\n@param c the command to send\n@param h the map containing the parameters\n@param b the string to send",
        "Returns the formatted source code.\n\n@return the formatted source code",
        "Get the linked annotation.\n\n@param linkHashCode\nthe hash code of the linked annotation\n@return the linked annotation\n@throws NoSuchElementException\nif no linked annotation is found",
        "Transmits a command to the server.\n\n@param c the command to transmit\n@param h a map containing the parameters to send\n@param b the string to send",
        "Gets the JAXB context.\n\n@param contextPath the context path\n@return the JAXB context",
        "Creates a list of boxes from a box tree.\n@param root the root box of the tree.\n@param list the list of boxes.",
        "Creates a tree of boxes.\n@param rootbox the root box of the tree\n@param boxlist the list of boxes\n@param useBounds whether to use the bounds of the boxes\n@param useVisualBounds whether to use the visual bounds of the boxes\n@param preserveAux whether to preserve the auxiliary boxes\n@return the root node of the tree",
        "Computes the backgrounds for the tree.\n@param root the root node of the tree.\n@param currentbg the current background color.",
        "Sets the mapping file.\n\n@param url the url\n@param realFile the real file",
        "Get the mapping file for the given url.\n@param url the url\n@return the mapping file\n@throws IOException if the file cannot be found",
        "Creates a VersionRange object from a version specification.\n\n@param spec the version specification\n@return the created VersionRange\n@throws InvalidVersionSpecificationException if the version specification is invalid",
        "Concatenates this transform with the given one.\n@param src the transform to concatenate with this one.\n@return a new transform that is the concatenation of this transform and the given one.",
        "Transforms a rectangle.\n@param rect The rectangle to transform.\n@return The transformed rectangle.",
        "Returns the minimal visual bounds of the box.\n@return the minimal visual bounds of the box.",
        "Recomputes the visual bounds of this box.",
        "Recomputes the bounds of the box.",
        "Computes the bounding box of the content box.\n@return the bounding box of the content box",
        "Returns the top border of the box.\n@return the top border of the box",
        "Returns the bottom border of the box.\n@return the bottom border of the box",
        "Returns the left border of the box.\n@return the left border of the box",
        "Returns the right border of the box.\n@return the right border of the box.",
        "Gets the color of the element.\n@return the color of the element.",
        "Checks if the child node visually encloses the parent.\n@param childNode the child node to check\n@return true if the child node visually encloses the parent",
        "Takes all the children of this node and all its children.\n@param list the list of children to take.",
        "Process command.\n\n@param command the command",
        "The DataSource bean.\n@return the DataSource bean.",
        "The data source for the test.\n@return the data source",
        "Sets up the platform configuration and environment.\n\n@param config The platform configuration.\n@param env The environment.",
        "Query the OpenStates API.\n\n@param methodMap\n@param argMap\n@param responseType\n@return\n@throws OpenStatesException",
        "Registers a command.\n\n@param command the command to register",
        "Registers a command.\n\n@param name the name of the command\n@param command the command",
        "Unregisters a command.\n\n@param name the name of the command to unregister.",
        "Executes a command on the console.\n\n@param line The command line.",
        "Starts the command line.",
        "Search for committees in a specific state\n\n@param state The state to search for\n@param chamber The chamber to search for\n@return The committees\n@throws OpenStatesException If the state is not found",
        "Get a specific committee.\n\n@param id The id of the committee to retrieve.\n@return The committee.\n@throws OpenStatesException If there are any errors.",
        "Connect to the JMX service.\n\n@param host The host.\n@param port The port.\n@param login The login.\n@param password The password.\n@return The JMX connector.\n@throws IOException If the connection fails.",
        "Returns the value of the property with the specified key.\n\n@param properties The properties.\n@param key       The key of the property.\n@return The value of the property.",
        "Invokes a method on the MBean.\n\n@param proxy the proxy object\n@param method the method to invoke\n@param args the method arguments\n@return the result of invoking the method\n@throws Throwable if an error occurs",
        "Search for districts in a specific state.\n\n@param state\nThe state to search for.\n@return The districts.\n@throws OpenStatesException\nIf the query fails.",
        "Search for districts in a state.\n\n@param state\nThe state to search for.\n@param chamber\nThe chamber to search for.\n@return The districts.\n@throws OpenStatesException",
        "Lookup a boundary by its ID.\n\n@param boundary_id the boundary ID\n@return the boundary\n@throws OpenStatesException if the boundary does not exist",
        "Get metadata about a given state.\n\n@param state The state to get metadata about.\n@return The metadata about the state.\n@throws OpenStatesException If there are any errors.",
        "Creates an object of the given interface.\n\n@param interfaceClass The interface to create an object of.\n@param <T> The interface to create an object of.\n@return An object of the given interface.\n@throws IllegalArgumentException If more than one object has been found.",
        "Registers the given interface with the given object name.\n\n@param interfaceClass The interface class.\n@param objectName     The object name for the registered interface.\n@param <T>            The interface type.\n@return The object name for the registered interface.\n@throws MBeanException If an error occurs while registering the interface.",
        "Unregister the given MBean with the platform MBean server.\n\n@param objectName the name of the MBean to unregister.\n@throws MBeanException if an error occurs while unregistering the MBean.",
        "Validates an MBean.\n\n@param interfaceClass the interface class\n@param objectName the object name\n@param mBeanServerConnection the server connection\n@throws MBeanException if the MBean is not valid",
        "Returns a random string.\n\n@return a random string",
        "Add a value to the parameter.\n@param value the value to add.\n@param isDefault true if the value is the default value.",
        "Search legislators by a specific state\n\n@param state The state to search for\n@return The legislators for the given state\n@throws OpenStatesException If the state is not valid",
        "Search legislators by state and active\n\n@param state [required] State to search for\n@param active [required] Active flag to search for\n@return Legislators\n@throws OpenStatesException",
        "Search legislators by a state and term.\n\n@param state The state to search for.\n@param term The term to search for.\n@return The legislators.\n@throws OpenStatesException If the query fails.",
        "Search for legislators in a specific state.\n\n@param state The state to search in.\n@param active If true, search for active legislators. If false, search for inactive legislators.\n@param term The term to search for.\n@param chamber The chamber to search for.\n@param district The district to search for.\n@param party The party to search for.\n@param first_name The first name to search for.\n@param last_name The last name to search for.\n@return The legislators.\n@throws OpenStatesException",
        "Get a specific legislator.\n\n@param id\n@return\n@throws OpenStatesException",
        "Compares this enum with the specified object for order.\n\n@param o the object to compare with.\n@return a negative integer, zero, or a positive integer as this object is\nless than, equal to, or greater than the specified object.\n@throws ClassCastException if the specified object is not of the same type as this enum.",
        "Sets the mapped class.\n\n@param mappedClass the mapped class",
        "Proceed to the method.\n\n@return the result of the method invocation\n@throws Throwable\nif an error occurs",
        "Stops the timer.\n\n@return The elapsed time in nanoseconds.",
        "Builds the client.\n\n@return the client",
        "Returns the request to be sent.\n\n@return the request to be sent.",
        "Converts a response string to a pid.\n\n@param responseText the response string\n@return the pid\n@throws IOException if something goes wrong",
        "Evaluates an XPath expression on an XML string.\n\n@param xml the XML string.\n@param xpath the XPath expression.\n@return the result of the XPath expression.\n@throws ParserConfigurationException if there is a problem with the XML parser configuration.\n@throws SAXException if there is a problem with the XML parsing.\n@throws IOException if there is a problem with the IO.\n@throws XPathExpressionException if there is a problem with the XPath.",
        "Mints the pid from the server.\n\n@return the minted pid",
        "Create a new configuration binder for the given class.\n\n@param klass the class to bind\n@param binder the binder to use\n@param <T> the configuration class\n@return a new configuration binder",
        "To instance.\n\n@param configuration the configuration",
        "Creates a new instance of a filter pattern.\n\n@param dispatcherTypes the set of dispatcher types\n@param matchAfter      true if the filter should match after the last match\n@param patterns        the patterns\n@return the filter pattern",
        "Proceeds to the constructor.\n\n@return the constructed object\n@throws Throwable\nif the constructor throws an exception"
    ],
    "references": [
        [
            "Toggle UUID generator into sequential mode, so the random segment is in order and increases by one. In\nsequential mode, there is presumably a desire that UUIDs generated around the same time should begin with similar\ncharacters, but this is difficult in a distributed environment. The solution is to set the counter value based\non a hash of the UTC date and time up to a 10 minute precision. This means that UUID classes initialized at\nsimilar times should start with similar counter values, but this is not guaranteed. If one of these classes\nis generating vastly more UUIDs than others, then these counters can become skewed.\n\nCalling this method more than once without toggling back to variable mode has no effect, so it probably makes\nmore sense to call this from a static context, like your main method or in a class' static initialization."
        ],
        [
            "This method maps a hex character to its 4-bit representation in an int.\n@param x Hex character in the range ('0' - '9', 'a' - 'f', 'A' - 'F').\n@return 4-bit number in int representing hex offset from 0."
        ],
        [
            "Map two hex characters to 4-bit numbers and combine them to produce 8-bit number in byte.\n@param a First hex character.\n@param b Second hex character.\n@return Byte representation of given hex characters."
        ],
        [
            "Extract timestamp from raw UUID bytes and return as int. If the UUID is not the default type, then we can't parse\nthe timestamp out and null is returned.\n@return Millisecond UTC timestamp from generation of the UUID, or null for unrecognized format."
        ],
        [
            "Extract MAC address fragment from raw UUID bytes, setting missing values to 0, thus the first 2 and a half bytes\nwill be 0, followed by 3 and a half bytes of the active MAC address when the UUID was generated.\n@return Byte array of UUID fragment, or null for unrecognized format."
        ],
        [
            "Sets a custom property.  This will override settings in socialize.properties.\n@param key\n@param value"
        ],
        [
            "Sets the FB credentials for the current user if available.\n@param userId\n@param token\n@deprecated No longer used. Any values set here will be ignored.  Use FacebookUtils to link a known user."
        ],
        [
            "Sets the Socialize credentials for your App.\n@param consumerKey Your consumer key, obtained via registration at http://getsocialize.com\n@param consumerSecret Your consumer secret, obtained via registration at http://getsocialize.com"
        ],
        [
            "Merge properties into the config.\n@param other"
        ],
        [
            "Creates the socialize share object."
        ],
        [
            "Handles a non-network share like email or SMS."
        ],
        [
            "Adds a comment to the given entity.  This method will also prompt the user to share their comment.\n@param context The current context.\n@param entity The entity on which the comment will be associated.\n@param text The text of the comment.\n@param listener A listener to handle the result."
        ],
        [
            "Deletes a comment.  Only the person that created the comment can delete it.\n@param context The current context.\n@param id The ID of the comment to be deleted.\n@param listener A listener to handle the result."
        ],
        [
            "Adds a comment to the given entity.  This method will NOT prompt the user to share their comment as the desired networks are passed as a parameter.\n@param context The current context.\n@param entity The entity on which the comment will be associated.\n@param text The text of the comment.\n@param commentOptions Optional parameters for the comment.\n@param listener A listener to handle the result.\n@param networks 0 or more networks on which to share the comment.  It is assumed that the user is already linked to the given networks.  If not an error will be reported in the listener for each propagation failure."
        ],
        [
            "Retrieves a single comment based on ID.\n@param context The current context.\n@param id\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves comments based on a set of IDs.\n@param context The current context.\n@param listener A listener to handle the result.\n@param ids An array of comment IDs"
        ],
        [
            "Retrieves all comments made by the given user.\n@param context The current context.\n@param user The user.\n@param start The start index for pagination (from 0).\n@param end The end index for pagination.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves all comments associated with the given entity.\n@param context The current context.\n@param entityKey The entity on which the comment were associated.\n@param start The start index for pagination (from 0).\n@param end The end index for pagination.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves all comments across all entities.\n@param context The current context.\n@param start The start index for pagination (from 0).\n@param end The end index for pagination.\n@param listener A listener to handle the result."
        ],
        [
            "Shows the comments for an entity.\n@param listener A listener to handle the result."
        ],
        [
            "Detects whether the inbound string is a JSONArray and if so wraps the array in an object with a single field called \"data\"\n@param json\n@return"
        ],
        [
            "Connect to an HTTP URL and return the response as a string.\n\nNote that the HTTP method override is used on non-GET requests. (i.e.\nrequests are made as \"POST\" with method specified in the body).\n\n@param url - the resource to open: must be a welformed URL\n@param method - the HTTP method to use (\"GET\", \"POST\", etc.)\n@param params - the query parameter for the URL (e.g. access_token=foo)\n@return the URL contents as a String\n@throws MalformedURLException - if the URL format is invalid\n@throws IOException - if a network problem occurs"
        ],
        [
            "Parse a server response into a JSON Object. This is a basic\nimplementation using org.json.JSONObject representation. More\nsophisticated applications may wish to do their own parsing.\n\nThe parsed JSON is checked for a variety of error fields and\na FacebookException is thrown if an error condition is set,\npopulated with the error message and error type or code if\navailable.\n\n@param response - string representation of the response\n@return the response as a JSON Object\n@throws JSONException - if the response is not valid JSON\n@throws FacebookError - if an error condition is set"
        ],
        [
            "Display a simple alert dialog with the given text and title.\n\n@param context\nAndroid context in which the dialog should be displayed\n@param title\nAlert dialog title\n@param text\nAlert dialog message"
        ],
        [
            "A proxy for Log.d api that kills log messages in release build. It\nnot recommended to send sensitive information to log output in\nshipping apps.\n\n@param tag\n@param msg"
        ],
        [
            "Finds a compatible runtime type if it is more specific"
        ],
        [
            "Reverts to only set the entity key if the name is not defined.\nThis ensures an existing entity name is not wiped out when the action is saved.\n@param entity"
        ],
        [
            "Constructs the URL to access the FB graph API and retrieve a profile image for the\nuser with the given facebook id.\n@param id\n@return"
        ],
        [
            "Called when the profile picture has been changed by the user.\n@param bitmap"
        ],
        [
            "Builds the signature base string from the data this instance was\nconfigured with.\n\n@return the signature base string\n@throws OAuthMessageSignerException"
        ],
        [
            "Normalizes the set of request parameters this instance was configured\nwith, as per OAuth spec section 9.1.1.\n\n@param parameters\nthe set of request parameters\n@return the normalized params string\n@throws IOException"
        ],
        [
            "Default authorize method. Grants only basic permissions.\n\nSee authorize() below for @params."
        ],
        [
            "Full authorize method.\n\nStarts either an Activity or a dialog which prompts the user to log in to\nFacebook and grant the requested permissions to the given application.\n\nThis method will, when possible, use Facebook's single sign-on for\nAndroid to obtain an access token. This involves proxying a call through\nthe Facebook for Android stand-alone application, which will handle the\nauthentication flow, and return an OAuth access token for making API\ncalls.\n\nBecause this process will not be available for all users, if single\nsign-on is not possible, this method will automatically fall back to the\nOAuth 2.0 User-Agent flow. In this flow, the user credentials are handled\nby Facebook in an embedded WebView, not by the client application. As\nsuch, the dialog makes a network request and renders HTML content rather\nthan a native UI. The access token is retrieved from a redirect to a\nspecial URL that the WebView handles.\n\nNote that User credentials could be handled natively using the OAuth 2.0\nUsername and Password Flow, but this is not supported by this SDK.\n\nSee http://developers.facebook.com/docs/authentication/ and\nhttp://wiki.oauth.net/OAuth-2 for more details.\n\nNote that this method is asynchronous and the callback will be invoked in\nthe original calling thread (not in a background thread).\n\nAlso note that requests may be made to the API without calling authorize\nfirst, in which case only public information is returned.\n\nIMPORTANT: Note that single sign-on authentication will not function\ncorrectly if you do not include a call to the authorizeCallback() method\nin your onActivityResult() function! Please see below for more\ninformation. single sign-on may be disabled by passing FORCE_DIALOG_AUTH\nas the activityCode parameter in your call to authorize().\n\n@param activity\nThe Android activity in which we want to display the\nauthorization dialog.\n@param applicationId\nThe Facebook application identifier e.g. \"350685531728\"\n@param permissions\nA list of permissions required for this application: e.g.\n\"read_stream\", \"publish_stream\", \"offline_access\", etc. see\nhttp://developers.facebook.com/docs/authentication/permissions\nThis parameter should not be null -- if you do not require any\npermissions, then pass in an empty String array.\n@param activityCode\nSingle sign-on requires an activity result to be called back\nto the client application -- if you are waiting on other\nactivities to return data, pass a custom activity code here to\navoid collisions. If you would like to force the use of legacy\ndialog-based authorization, pass FORCE_DIALOG_AUTH for this\nparameter. Otherwise just omit this parameter and Facebook\nwill use a suitable default. See\nhttp://developer.android.com/reference/android/\napp/Activity.html for more information.\n@param listener\nCallback interface for notifying the calling application when\nthe authentication dialog has completed, failed, or been\ncanceled."
        ],
        [
            "Helper to validate an activity intent by resolving and checking the\nprovider's package signature.\n\n@param context\n@param intent\n@return true if the service intent resolution happens successfully and the\nsignatures match."
        ],
        [
            "Invalidate the current user session by removing the access token in\nmemory, clearing the browser cookie, and calling auth.expireSession\nthrough the API.\n\nNote that this method blocks waiting for a network response, so do not\ncall it in a UI thread.\n\n@param context\nThe Android context in which the logout should be called: it\nshould be the same context in which the login occurred in\norder to clear any stored cookies\n@throws IOException\n@throws MalformedURLException\n@return JSON string representation of the auth.expireSession response\n(\"true\" if successful)"
        ],
        [
            "Generate a UI dialog for the request action in the given Android context\nwith the provided parameters.\n\nNote that this method is asynchronous and the callback will be invoked in\nthe original calling thread (not in a background thread).\n\n@param context\nThe Android context in which we will generate this dialog.\n@param action\nString representation of the desired method: e.g. \"feed\" ...\n@param parameters\nString key-value pairs to be passed as URL parameters.\n@param listener\nCallback interface to notify the application when the dialog\nhas completed."
        ],
        [
            "See issue 162"
        ],
        [
            "Links the current user to a facebook account.  The user will be presented with the Facebook authentication dialog.\n@param context The current context.\n@param listener A listener to handle the result."
        ],
        [
            "Links the current user to a facebook account with custom FB permissions.  The user will be presented with the Facebook authentication dialog.\n@param context The current context.\n@param listener A listener to handle the result.\n@param permissions One or more permissions defined by http://developers.facebook.com/docs/authentication/permissions/"
        ],
        [
            "Links an existing Facebook access token with the current user.  No authentication dialog will be shown.\n@param context The current context.\n@param token The Facebook access token.\n@param verifyPermissions If true this method will also verify that the permissions assigned to the given token match the default permissions required by Socialize.\nIf not an authentication with FB will be attempted.  If this parameter is false it is ASSUMED that permissions are valid.\n@param listener A listener to handle the result."
        ],
        [
            "Posts an entity to the user's Facebook wall.  Post data can be customized by implementing the onBeforePost method in the given SocialNetworkListener.\n@param context The current context.\n@param entity The Socialize entity to which the post corresponds (Required)\n@param text The text for the post.\n@param listener A listnener to handle callbacks from the post."
        ],
        [
            "Extends the user's Facebook access token if needed.\n@param context The current context\n@param listener A listener to handle the result after re-authentication with Socialize.\n@deprecated Use onResume()"
        ],
        [
            "Retrieves the current permissions for token provided.\n@param parent The current context.\n@param token The token for which we are going to retrieve permissions.\n@param callback A callback to handle the response."
        ],
        [
            "Returns the hash key used to authenticate this application with Facebook.  Useful for debugging.\n@param context\n@return\n@throws NoSuchAlgorithmException"
        ],
        [
            "Saves or Creates an entity\n@param context The current context.\n@param e The entity to be created.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves an entity based on its key.\n@param context The current context.\n@param key The entity key.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves an entity based on its id.\n@param context The current context.\n@param id The entity id.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves all entities sorted by creation date.\n@param context The current context.\n@param start The start index for pagination (0 based).\n@param end The end index for pagination (0 based).\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves the entities designated by the given keys.\n@param context The current context.\n@param listener A listener to handle the result.\n@param keys One or more entity keys."
        ],
        [
            "Called BEFORE the default activity onCreateContextMenu event.\n\n@param activity The calling activity.\n@param menu     The context menu that is being built\n@param v        The view for which the context menu is being built\n@param menuInfo Extra information about the item for which the context menu should be shown. This information will vary depending on the class of v.\n@return True to PREVENT the default implementation from executing."
        ],
        [
            "Subscribes the current user to notifications for new comments on this entity.\n@param context The current context.\n@param e The entity.\n@param type The subscription type.\n@param listener A listener to handle the result."
        ],
        [
            "Determines if the current user is subscribed to notifications on new comments for the given entity.\n@param context The current context.\n@param e The entity.\n@param type The subscription type.\n@param listener A listener to handle the result."
        ],
        [
            "Called at application startup.\n@param context"
        ],
        [
            "Returns the type of the next token without consuming it."
        ],
        [
            "Consumes the next token from the JSON stream and asserts that it is a\nliteral null.\n\n@throws IllegalStateException if the next token is not null or if this\nreader is closed."
        ],
        [
            "Unescapes the character identified by the character or characters that\nimmediately follow a backslash. The backslash '\\' should have already\nbeen read. This supports both unicode escapes \"u000A\" and two-character\nescapes \"\\n\".\n\n@throws NumberFormatException if any unicode escape sequences are\nmalformed."
        ],
        [
            "Displays the default share dialog.  In most cases this is the simplest version to use.\n@param context The current context.\n@param entity The entity being shared."
        ],
        [
            "Displays the default share dialog and allows for the handling of share dialog events.\n@param context The current context.\n@param entity The entity being shared.\n@param listener A listener to handle events on the dialog."
        ],
        [
            "Shares the given entity via email.  This method with launch the default email application on the device.\n@param context The current context.\n@param entity The entity being shared.\n@param listener A listener to handle events."
        ],
        [
            "Shares the given entity via Google+.  This method with launch the Google+ application on the device.\n@param context The current context.\n@param entity The entity being shared.\n@param listener A listener to handle events."
        ],
        [
            "Shares the given entity via a user selected medium.  This method with launch the default application share dialog on the device.\n@param context The current context.\n@param entity The entity being shared.\n@param listener A listener to handle events."
        ],
        [
            "Shares the given entity via SMS.  This method with launch the default SMS application on the device.\n@param context The current context.\n@param entity The entity being shared.\n@param listener A listener to handle events."
        ],
        [
            "Shares the given entity via a Social Network such as Twitter or Facebook.  This will prompt the user to select a network.\n@param context The current context.\n@param entity The entity being shared.\n@param shareOptions Options for the share.  If text is available for the share it can be specified here.\n@param listener A listener to handle events."
        ],
        [
            "Retrieves a single share event based on ID.\n@param context The current context.\n@param listener A listener to handle the result.\n@param id The ID of the share."
        ],
        [
            "Retrieves multiple share events based on ID.\n@param context The current context.\n@param listener A listener to handle the result.\n@param ids One or more IDs for the shares returned."
        ],
        [
            "Retrieves all share events performed by the given user.\n@param context The current context.\n@param user The user who performed the share(s).\n@param start The start index for the result set (0 indexed).\n@param end The end index for the result set.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves all share events performed on the given entity.\n@param context The current context.\n@param entityKey The key of the entity that was shared.\n@param start The start index for the result set (0 indexed).\n@param end The end index for the result set.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves all share events across all entities.\n@param context The current context.\n@param start The start index for the result set (0 indexed).\n@param end The end index for the result set.\n@param listener A listener to handle the result."
        ],
        [
            "Records a like against the given entity for the current user. This method will also prompt the user to share their like.\n@param context The current context.\n@param entity The entity to be liked.\n@param listener A listener to handle the result."
        ],
        [
            "Records a like against the given entity for the current user.  This method will NOT prompt the user to share their like.\n@param context The current context.\n@param entity The entity to be liked.\n@param likeOptions Optional parameters for the like.\n@param listener A listener to handle the result.\n@param networks 0 or more networks on which to share the like."
        ],
        [
            "Removes a like previously created for the current user.\n@param context The current context.\n@param entityKey The entity that was liked.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves a like for an entity and the current user.\n@param context The current context.\n@param entityKey The entity that was liked.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves a like based on its ID.\n@param context The current context.\n@param id The id of the like.\n@param listener A listener to handle the result."
        ],
        [
            "Determines if the given entity has been liked by the current user.\n@param context The current context.\n@param entityKey The entity that was liked.\n@param listener listener A listener to handle the result."
        ],
        [
            "Lists all likes for the given user.\n@param context The current context.\n@param user The user for whom likes will be queried.\n@param start The first index (for pagination), starting at 0\n@param end The last index (for pagination)\n@param listener A listener to handle the result."
        ],
        [
            "Lists all likes for the given entity.\n@param context The current context.\n@param entityKey The entity for whom likes will be queried.\n@param start The first index (for pagination), starting at 0\n@param end The last index (for pagination)\n@param listener A listener to handle the result."
        ],
        [
            "DO NOT CALL"
        ],
        [
            "Collects OAuth Authorization header parameters as per OAuth Core 1.0 spec\nsection 9.1.1"
        ],
        [
            "Collects x-www-form-urlencoded body parameters as per OAuth Core 1.0 spec\nsection 9.1.1"
        ],
        [
            "Collects HTTP GET query string parameters as per OAuth Core 1.0 spec\nsection 9.1.1"
        ],
        [
            "Returns a new JSON writer configured for this GSON and with the non-execute\nprefix if that is configured."
        ],
        [
            "Constructors for common interface types like Map and List and their\nsubytpes."
        ],
        [
            "Replaces successive new line characters.\n@param src The source String.\n@param from Number of successive new lines (e.g. 3 would be \\n\\n\\n)\n@param to The number of new lines to replace with.\n@return The cleaned string."
        ],
        [
            "end-snippet-0"
        ],
        [
            "Returns a simple one-line address based on city and country\n@param address\n@return"
        ],
        [
            "so we can mock"
        ],
        [
            "Gets the application-wide actions.\n@param context The current context.\n@param start The start index for pagination (0 based).\n@param end The end index for pagination (0 based).\n@param listener A listener to handle the result."
        ],
        [
            "Gets the actions of a single user.\n@param context The current context.\n@param userId The user for whom the actions will be returned.\n@param start The start index for pagination (0 based).\n@param end The end index for pagination (0 based).\n@param listener A listener to handle the result."
        ],
        [
            "Gets the actions for a given entity.\n@param context The current context.\n@param entityKey The entity key.\n@param start The start index for pagination (0 based).\n@param end The end index for pagination (0 based).\n@param listener A listener to handle the result."
        ],
        [
            "Gets the actions of a single user on a single entity.\n@param context The current context.\n@param userId The user for whom the actions will be returned.\n@param entityKey The entity key.\n@param start The start index for pagination (0 based).\n@param end The end index for pagination (0 based).\n@param listener A listener to handle the result."
        ],
        [
            "Closes the current scope by appending any necessary whitespace and the\ngiven bracket."
        ],
        [
            "Encodes the property name.\n\n@param name the name of the forthcoming value. May not be null.\n@return this writer."
        ],
        [
            "Parses the specified JSON string into a parse tree\n\n@param json JSON text\n@return a parse tree of {@link JsonElement}s corresponding to the specified JSON\n@throws JsonParseException if the specified text is not valid JSON\n@since 1.3"
        ],
        [
            "Returns the next value from the JSON stream as a parse tree.\n\n@throws JsonParseException if there is an IOException or if the specified\ntext is not valid JSON\n@since 1.6"
        ],
        [
            "Links the current user to their Twitter account using an existing Twitter oAuth token and secret.\n@param context The current activity.\n@param token The user's Twitter token.\n@param secret The user's Twitter token secret.\n@param listener A listener to handle the result."
        ],
        [
            "Sets the Twitter App credentials for the application.  This sets the same configuration properties as twitter.consumer.key and twitter.consumer.secret\n@param context The current context.\n@param consumerKey The Twitter App Consumer Key\n@param consumerSecret The Twitter App Consumer Secret"
        ],
        [
            "\"Tweets\" an entity.  A \"share\" event will be recorded in Socialize and the entity URL generated by Socialize will be posted to the user's Twitter feed.\nIf the user is not currently linked to a Twitter account they will be prompted to authenticate.\n@param context The current activity.\n@param entity The entity to be tweeted.\n@param text The text to be posted along with the tweet.\n@param listener A listener to handle the result."
        ],
        [
            "Performs a simple HTTP GET to the Twitter resource endpoint specified. If the user is not currently linked to a Twitter account they will be prompted to authenticate.\n@param context The current Activity.\n@param resource The resource to be called.  NOTE: This should NOT include the full url (e.g. http://api.twitter.com) but just the resource.\nChanging the full URL endpoint can be done via the SocialNetworkPostListener onBeforePost callback.\n@param params The parameters to be posted.\n@param listener A listener to handle the result."
        ],
        [
            "Performs a simple \"tweet\". If the user is not currently linked to a Twitter account they will be prompted to authenticate.\n@param context The current Activity.\n@param tweet The Tweet to be tweeted.\n@param listener A listener to handle the result."
        ],
        [
            "Publishes a photo to a user's Twitter feed.  If the user is not currently linked to a Twitter account they will be prompted to authenticate.\n@param context The current Activity.\n@param photo The image to be tweeted.\n@param listener A listener to handle the result."
        ],
        [
            "Returns a scaled bitmap, cropped if necessary.\n@param bitmap\n@param scaleToWidth\n@param scaleToHeight\n@param recycleOriginal\n@return"
        ],
        [
            "Does a POST, but expects a single object in return.\n@param session\n@param endpoint\n@param object\n@param listener"
        ],
        [
            "Set the text size in DIP\n@param textSize"
        ],
        [
            "Called when the user's profile image is changed.\n@param bitmap The image."
        ],
        [
            "Saves the given user.\n@param context The current context.\n@param user The user to be saved.\n@param listener A listener to handle the result."
        ],
        [
            "Retrieves a User based on the given ID.\n@param context The current context.\n@param id The id of the user.\n@param listener A listener to handle the GET."
        ],
        [
            "Saves the profile for the given user.\n@param context The current context.\n@param userSettings The user settings to be saved.\n@param listener A listener to handle the save."
        ],
        [
            "Sets the auto post preferences for the user.\n@param networks\n@return true if the new settings differed from the old ones."
        ],
        [
            "Authenticates with default permissions and Single Sign On."
        ],
        [
            "Authenticates with Single Sign On."
        ],
        [
            "Gets the value of the given static field from the given class.\n@param fieldName\n@param clazz\n@return\n@throws Exception"
        ],
        [
            "Returns the name of the static field that corresponds to the given value\n@param value\n@param clazz\n@return\n@throws Exception"
        ],
        [
            "Handles a GCM message.  Returns true ONLY if this message was intended for Socialize.\n@param context\n@param intent\n@return"
        ],
        [
            "Handles a broadcast intent received by a Broadcast Receiver on Android.\nCall this method if you already have a broadcast receiver defined but want to also utilize Socialize SmartAlerts.\n@param context The current context.\n@param intent The broadcast intent provided by Android.\n@return Returns true if Socialize handled the intent.  This indicates the intent was designed to be handled by Socialize and you do not need to handle it yourself."
        ],
        [
            "Encodes a byte array into Base64 notation.\n\n@param source The data to convert\n@param off Offset in array where conversion should begin\n@param len Length of data to convert\n@param alphabet is the encoding alphabet\n@param maxLineLength maximum length of one line.\n@return the BASE64-encoded byte array"
        ],
        [
            "Decodes Base64 content using the supplied decodabet and returns\nthe decoded byte array.\n\n@param source    The Base64 encoded data\n@param off       The offset of where to begin decoding\n@param len       The length of characters to decode\n@param decodabet the decodabet for decoding Base64 content\n@return decoded data"
        ],
        [
            "Records a view against the given entity for the current user.\n@param context The current context.\n@param e The entity to be viewed.\n@param listener A listener to handle the result."
        ],
        [
            "Called when the current logged in user updates their profile."
        ],
        [
            "Parse a form-urlencoded document."
        ],
        [
            "Construct a Map containing a copy of the given parameters. If several\nparameters have the same name, the Map will contain the first value,\nonly."
        ],
        [
            "Helper method to concatenate a parameter and its value to a pair that can\nbe used in an HTTP header. This method percent encodes both parts before\njoining them.\n\n@param name\nthe OAuth parameter name, e.g. oauth_token\n@param value\nthe OAuth parameter value, e.g. 'hello oauth'\n@return a name/value pair, e.g. oauth_token=\"hello%20oauth\""
        ],
        [
            "Adds an object to cache with the given time-to-live\n@param strKey\n@param object\n@param ttl"
        ],
        [
            "Adds an object to cache that optionally lives forever.\n@param strKey\n@param object\n@param eternal\n@return"
        ],
        [
            "Adds an object to cache with the given Time To Live in milliseconds\n@param k\n@param object\n@param ttl milliseconds\n@param eternal"
        ],
        [
            "Ignores proxy and always returns raw object\n@param strKey\n@return"
        ],
        [
            "Gets an object from cache.  Returns null if the object does not exist, or has expired.\n@param key\n@return"
        ],
        [
            "Returns true if the object with the given key resides in the cache.\n@param k\n@return true if the object with the given key resides in the cache."
        ],
        [
            "Extends the ttl of the object with the given key with the current system time.\n@param strKey"
        ],
        [
            "Loads an image based on Base64 encoded bytes.\n@param id The id to give the request\n@param name The name to give the image in cache.\n@param encodedData The encoded image data.\n@param listener A listener to handle the callback."
        ],
        [
            "Asynchronously loads the image at the given url and calls the listener when it is loaded.\n@param id The id to give the request\n@param url The url to be loaded\n@param listener A listener to handle the callback."
        ],
        [
            "Convert a tag string into a tag map.\n\n@param tagString a space-delimited string of key-value pairs. For example, {@code \"key1=value1 key_n=value_n\"}\n@return a tag {@link Map}\n@throws IllegalArgumentException if the tag string is corrupted."
        ],
        [
            "Convert a tag map into a space-delimited string.\n\n@param tagMap\n@return a space-delimited string of key-value pairs. For example, {@code \"key1=value1 key_n=value_n\"}"
        ],
        [
            "Call this function whenever a potentially tag-encoded name is prefixed.\n\n@param name a metric name with encoded tag strings that has been prefixed.\n@return a fixed metric name"
        ],
        [
            "Creates a Builder for a metric name.\n\n@param name name can contain either a pure CodaHale metric name, or a string returned by {@code encodeTagsInName}.\nIf it's the latter, the tags are parsed out and passed to {@code withTags}.\n@return a {@link Builder}"
        ],
        [
            "Returns a put string version of this metric compatible with the telnet-style reporter.\n\nFormat:\n<pre><code>\nput (metric-name) (timestamp) (value) (tags)\n</code></pre>\n\nExample:\n<pre><code>\nput sys.cpu.nice 1346846400 18 host=web01 dc=lga\n</code></pre>\n\n@return a string version of this metric compatible with the telnet reporter."
        ],
        [
            "Converts the domain to a Unicode representation suitable for human interpretation. It does IDNA conversion.\n\n@see Host#toHumanString()\n@return unicode string"
        ],
        [
            "Percent-decodes a string.\n\nPercent-encoded bytes are assumed to represent UTF-8 characters.\n\n@see <a href=\"http://url.spec.whatwg.org/#percent-encoded-bytes\">WHATWG URL Standard: Percent-encoded bytes</a>\n\n@param input\n@return"
        ],
        [
            "Gets the first query parameter value for a given name.\n\n@see {@link #queryParameters(String)}\n\n@param name Parameter name.\n@return The first parameter value or null if there parameter is not present."
        ],
        [
            "Gets all query parameter values for a given name.\n\n@param name Parameter name.\n@return A {@link java.util.List} with all parameter values or null if the parameter is not present."
        ],
        [
            "Returns a relative URL reference for the given URL.\n\nBehaves as @{link java.net.URI#relativize(URL)}.\n\n@param url Absolute URL.\n@return Relative reference."
        ],
        [
            "Gets a URL object from a relative scheme and a host.\n\n@param scheme\n@param host\n@return\n@throws GalimatiasParseException"
        ],
        [
            "Gets a URL object from a non-relative scheme.\n\n@param scheme\n@return\n@throws GalimatiasParseException"
        ],
        [
            "Serializes the URL to a human-readable representation. That is,\npercent-decoded and with IDN domains in its Unicode representation.\n\n@return"
        ],
        [
            "Executes a quey for stream with ordinal parameters."
        ],
        [
            "Executes a query for stream with named parameters."
        ],
        [
            "Get fields of the given class.\n@param clazz the class\n@return the fields of the given class"
        ],
        [
            "Fetches a row if not fetched yet."
        ],
        [
            "Get the column value as LocalDateTime.\n@param rs    ResultSet\n@param index column index\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Get the column value as LocalDate.\n@param rs    ResultSet\n@param index column index\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Get the column value as LocalTime.\n@param rs    ResultSet\n@param index column index\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Get the column value as ZonedDateTime.\n@param rs     ResultSet\n@param index  column index\n@param zoneId zoneId\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Get the column value as OffsetDateTime.\n@param rs     ResultSet\n@param index  column index\n@param zoneId zoneId\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Get the column value as OffsetTime.\n@param rs     ResultSet\n@param index  column index\n@param zoneId zoneId\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Get the column value.\n\n@param rs           ResultSet\n@param index        column index\n@param requiredType the required value type\n@return column value\n@throws SQLException in case of extraction failure"
        ],
        [
            "Adds top-left-aligned crop.\n\n@param width Crop width\n@param height Crop height"
        ],
        [
            "Adds center-aligned crop.\n\n@param width Crop width\n@param height Crop height"
        ],
        [
            "Adds top-left-aligned crop with a filled background.\n\n@param width Crop width\n@param height Crop height\n@param color Background color"
        ],
        [
            "Resizes width, keeping the aspect ratio.\n\n@param width New width"
        ],
        [
            "Resizes width and height\n\n@param width New width\n@param height New height"
        ],
        [
            "Scales the image until one of the dimensions fits,\nthen crops the bottom or right side.\n\n@param width New width\n@param height New height"
        ],
        [
            "Scales the image until one of the dimensions fits,\ncenters it, then crops the rest.\n\n@param width New width\n@param height New height"
        ],
        [
            "Performs Gaussian blur on result image.\n\n@param strength Strength is standard deviation (aka blur radius) multiplied by ten. Strength\ncan be up to 5000. Default is 10."
        ],
        [
            "Performs sharpening on result image. This can be useful after scaling down.\n\n@param strength Strength can be from 0 to 20. Default is 5."
        ],
        [
            "Reduces an image proportionally in order to fit it into given dimensions.\n\n@param width New width\n@param height New height"
        ],
        [
            "Requests project info from the API.\n\n@return Project resource"
        ],
        [
            "Requests file data.\n\n@param fileId Resource UUID\n@return File resource"
        ],
        [
            "Marks a file as deleted.\n\n@param fileId Resource UUID"
        ],
        [
            "Marks a file as saved.\n\nThis has to be done for all files you want to keep.\nUnsaved files are eventually purged.\n\n@param fileId Resource UUID"
        ],
        [
            "Executes the request et the Uploadcare API and return the HTTP Response object.\n\nThe existence of this method(and it's return type) enables the end user to extend the\nfunctionality of the\nUploadcare API client by creating a subclass of {@link com.uploadcare.api.Client}.\n\n@param request    request to be sent to the API\n@param apiHeaders TRUE if the default API headers should be set\n@return HTTP Response object"
        ],
        [
            "Verifies that the response status codes are within acceptable boundaries and throws\ncorresponding exceptions\notherwise.\n\n@param response The response object to be checked"
        ],
        [
            "Creates a URL for URL upload.\n\n@param sourceUrl URL to upload from\n@param pubKey Public key\n@param store Store the file upon uploading.\n\n@see com.uploadcare.upload.UrlUploader"
        ],
        [
            "Injects a target object using this ActionBarActivity's object graph.\n\n@param target the target object"
        ],
        [
            "Create new Builder.\n\n@param context    context.\n@param themeResId theme res id.\n@return {@link Builder}."
        ],
        [
            "Returns the class with the given name if it has already been loaded by\nthe given class loader\n\n<p>If the class has not been loaded yet, this method returns {@code\nnull}.</p>\n\n@param className the full name of the class to be loaded\n@return the class instance, if found"
        ],
        [
            "Loads the class defined with the given name and bytecode using the given\nclass loader\n\n<p>Since package and class idendity includes the ClassLoader instance\nused to load a class, we use reflection on the given class loader to\ndefine generated classes.</p>\n\n<p>If we used our own class loader (in order to be able to access the\nprotected \"defineClass\" method), we would likely still be able to load\ngenerated classes; however, they would not have access to package-private\nclasses and members of their super classes.</p>\n\n@param className the full name of the class to be loaded\n@param bytecode the bytecode of the class to load\n@return the class instance"
        ],
        [
            "Core search method\n\n<p>This method uses a {@link CharBuffer} to perform searches, and changes\nthis buffer's position as the match progresses. The two other arguments\nare the depth of the current search (ie the number of nodes visited\nsince root) and the index of the last node where a match was found (ie\nthe last node where {@link #fullWord} was true.</p>\n\n@param buffer the charbuffer\n@param matchedLength the last matched length (-1 if no match yet)\n@param currentLength the current length walked by the trie\n@return the length of the match found, -1 otherwise"
        ],
        [
            "Add one word to the trie\n\n@param word the word to add\n@return this\n@throws IllegalArgumentException word is empty"
        ],
        [
            "Appends the given char.\nIf this instance is currently uninitialized the given char is used for initialization.\n\n@param c the char to append\n@return true"
        ],
        [
            "Replaces this references value with the given one.\n\n@param value the new value\n@return the previous value"
        ],
        [
            "Determines whether the class with the given descriptor is assignable to\nthe given type.\n\n@param classInternalName the class descriptor\n@param type the type\n@return true if the class with the given descriptor is assignable to the\ngiven type"
        ],
        [
            "MUST be called after copyInputText!"
        ],
        [
            "Generate a hash of the group, use it to name it\n\n@param group the instruction group\n@param className this group's parent class name"
        ],
        [
            "Match a given character in a case-insensitive manner\n\n@param c the character to match\n@return a rule"
        ],
        [
            "Match one Unicode character\n\n@param codePoint the code point\n@return a rule"
        ],
        [
            "Match a Unicode character range\n\n<p>Note that this method will delegate to \"regular\" character matchers if\npart of, or all of, the specified range is into the basic multilingual\nplane.</p>\n\n@param low the lower code point (inclusive)\n@param high the upper code point (inclusive)\n@return a rule"
        ],
        [
            "Match any of the characters in the given string\n\n<p>This method delegates to {@link #anyOf(Characters)}.</p>\n\n@param characters the characters\n@return a rule\n\n@see #anyOf(Characters)"
        ],
        [
            "Match any given character among a set of characters\n\n<p>Both {@link #anyOf(char[])} and {@link #anyOf(String)} ultimately\ndelegate to this method, which caches its resuls.</p>\n\n@param characters the characters\n@return a new rule"
        ],
        [
            "Match a string literal\n\n@param string the string to match\n@return a rule"
        ],
        [
            "Match a given set of characters as a string literal\n\n@param characters the characters of the string to match\n@return a rule"
        ],
        [
            "Match a string literal in a case insensitive manner\n\n@param string the string to match\n@return a rule"
        ],
        [
            "Try and match a rule zero or one time\n\n<p>This rule therefore always succeeds.</p>\n\n@param rule the subrule\n@return a rule"
        ],
        [
            "Try and match a given set of rules once\n\n<p>This rule will therefore never fail.</p>\n\n@param rule the first subrule\n@param rule2 the second subrule\n@param moreRules the other subrules\n@return a rule"
        ],
        [
            "Kickstart a repeat rule\n\n<p>Like {@link #repeat(Object)}, except several rules are accepted as\narguments.</p>\n\n@param rule first rule\n@param rule2 second rule\n@param moreRules other rules\n@return a rule\n\n@see #sequence(Object, Object, Object...)"
        ],
        [
            "Try and match a set of rules zero or more times\n\n<p>This is an alias for {@code repeat(rule, rule2, ...).min(0)}.</p>\n\n@param rule the first subrule\n@param rule2 the second subrule\n@param moreRules the other subrules\n@return a rule"
        ],
        [
            "Convert a string literal to a parser rule\n\n@param string the string\n@return the rule"
        ],
        [
            "Convert the given object array to an array of rules\n\n@param objects the objects to convert\n@return the rules corresponding to the given objects"
        ],
        [
            "Converts the given object to a rule\n\n@param obj the object to convert\n@return the rule corresponding to the given object"
        ],
        [
            "Inserts the given value a given number of elements below the current top\nof the value stack\n\n@param down the number of elements to skip before inserting the value (0\nbeing equivalent to {@code push(value)})\n@param value the value\n@return true\n\n@throws IllegalArgumentException the stack does not contain enough\nelements to perform this operation"
        ],
        [
            "Removes the value at the top of the value stack and casts it before\nreturning it\n\n@param c the class to cast to\n@param <E> type of the class\n@return the current top value\n@throws IllegalArgumentException the stack is empty\n\n@see #pop()"
        ],
        [
            "Removes the value the given number of elements below the top of the value\nstack and casts it before returning it\n\n@param c the class to cast to\n@param down the number of elements to skip before removing the value (0\nbeing equivalent to {@code pop()})\n@param <E> type of the class\n@return the value\n@throws IllegalArgumentException the stack does not contain enough\nelements to perform this operation\n\n@see #pop(int)"
        ],
        [
            "Returns and casts the value at the top of the value stack without\nremoving it\n\n@param c the class to cast to\n@param <E> type of the class\n@return the value\n\n@see #peek()"
        ],
        [
            "Replaces the element the given number of elements below the current top\nof the value stack\n\n@param down the number of elements to skip before replacing the value (0\nbeing equivalent to {@code poke(value)})\n@param value the value to replace with\n@return true\n\n@throws IllegalArgumentException the stack does not contain enough\nelements to perform this operation"
        ],
        [
            "Internal method. DO NOT USE!\n\n@param context the MatcherContext\n@param <T> type parameter of the values on the parser stack\n@return true on a match; false otherwise"
        ],
        [
            "Determines whether this range overlaps with the given other one.\n\n@param other the other range\n@return true if there is at least one index that is contained in both ranges"
        ],
        [
            "Determines whether this range immediated follows or precedes the given other one.\n\n@param other the other range\n@return true if this range immediated follows or precedes the given other one."
        ],
        [
            "Created a new IndexRange that spans all characters between the smallest and the highest index of the two ranges.\n\n@param other the other range\n@return a new IndexRange instance"
        ],
        [
            "Generate the byte code of a transformed parser class\n\n<p>When you create a parser using {@link\n#createParser(Class, Object...)}, Parboiled generates a new class which\nis the one you actually use for parsing. This method allows to get the\nbyte code of such a generated class in a byte array.</p>\n\n@param parserClass the parser class\n@param <P> class of the parser\n@param <V> see {@link BaseParser}\n@return the byte code\n\n@throws RuntimeException byte code generation failure\n@see ParserTransformer#getByteCode(Class)"
        ],
        [
            "Add a word\n\n<p>Here also, a {@link CharBuffer} is used, which changes position as we\nprogress into building the tree, character by character, node by node.\n</p>\n\n<p>If the buffer is \"empty\" when entering this method, it means a match\nmust be recorded (see {@link #fullWord}).</p>\n\n@param buffer the buffer (never null)"
        ],
        [
            "Retrieves the innermost Matcher that is not a ProxyMatcher.\n\n@param matcher the matcher to unwrap\n@return the given instance if it is not a ProxyMatcher, otherwise the innermost non-proxy Matcher"
        ],
        [
            "Register a listener to the event bus\n\n@param listener the listener\n@return always true\n\n@see EventBus#register(Object)"
        ],
        [
            "Post an arbitrary, non null, object on the bus\n\n@param object the object (must not be null)\n@return always true"
        ],
        [
            "default implementation is to simply delegate to the context"
        ],
        [
            "Return a rule with a minimum number of cycles to run\n\n@param nrCycles the number of cycles\n@return a rule\n@throws IllegalArgumentException {@code nrCycles} is less than 0\n\n@see Range#atLeast(Comparable)"
        ],
        [
            "Return a rule with a maximum number of cycles to run\n\n@param nrCycles the number of cycles\n@return a rule\n@throws IllegalArgumentException {@code nrCycles} is less than 0\n\n@see Range#atMost(Comparable)"
        ],
        [
            "Return a rule with an exact number of cycles to run\n\n@param nrCycles the number of cycles\n@return a rule\n@throws IllegalArgumentException {@code nrCycles} is less than 0\n\n@see Range#singleton(Comparable)"
        ],
        [
            "Return a rule with both lower and upper bounds on the number of cycles\n\n<p>Note that the range of cycles to run is closed on both ends (that is,\nthe minimum and maximum number of cycles) are <strong>inclusive</strong>.\n</p>\n\n@param minCycles the minimum number of cycles\n@param maxCycles the maximum number of cycles\n@return a rule\n@throws IllegalArgumentException minimum number of cycles is negative; or\nmaximum number of cycles is less than the minimum\n\n@see Range#closed(Comparable, Comparable)"
        ],
        [
            "Core method for building a repeating matcher\n\n<p>This is the method which all other methods (min, max, times) delegate\nto; among other things it is responsible for the logic of simplifying\nmatchers where possible.</p>\n\n<p>The simplifications are as follows:</p>\n\n<ul>\n<li>[0..0]: returns an {@link EmptyMatcher};</li>\n<li>[0..1]: returns an {@link OptionalMatcher} with the rule as a\nsubmatcher;</li>\n<li>[1..1]: returns the rule itself.</li>\n</ul>\n\n<p>If none of these apply, this method delegates as follows:</p>\n\n<ul>\n<li>[n..+\u221e) for whatever n: delegates to {@link #boundedDown(int)};\n</li>\n<li>[0..n] for n &gt;= 2: delegates to {@link #boundedUp(int)};</li>\n<li>[n..n] for n &gt;= 2: delegates to {@link #exactly(int)};</li>\n<li>[n..m] with 0 &lt; n &lt; m: delegates to {@link\n#boundedBoth(int, int)}.</li>\n</ul>\n\n@param range the range\n@return the final resulting rule"
        ],
        [
            "Creates a new Characters instance containing all characters minus the given ones.\n\n@param chars the chars to NOT include\n@return a new Characters object"
        ],
        [
            "Gets the value of the deploymentDescriptor property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the deploymentDescriptor property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetDeploymentDescriptor().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link DeploymentDescriptorFactory }{@code >}\n{@link JAXBElement }{@code <}{@link Modules }{@code >}\n{@link JAXBElement }{@code <}{@link DeploymentDescriptorType }{@code >}\n{@link JAXBElement }{@code <}{@link StartAsOneOf }{@code >}\n{@link JAXBElement }{@code <}{@link CustomTSMPlugInConfiguration }{@code >}\n{@link JAXBElement }{@code <}{@link DiffExcludeFilter }{@code >}\n{@link JAXBElement }{@code <}{@link ClassLoaderExtension }{@code >}\n{@link JAXBElement }{@code <}{@link RequiresAuthentication }{@code >}\n{@link JAXBElement }{@code <}{@link NameValuePairs }{@code >}\n{@link JAXBElement }{@code <}{@link SupportsFaultTolerance }{@code >}\n{@link JAXBElement }{@code <}{@link RequiredComponents }{@code >}"
        ],
        [
            "Gets the value of the authenticationConfiguration property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the authenticationConfiguration property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetAuthenticationConfiguration().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link CookieAuthenticationConfiguration }{@code >}\n{@link JAXBElement }{@code <}{@link URLAuthenticationConfiguration }{@code >}\n{@link JAXBElement }{@code <}{@link CustomAuthenticationConfiguration }{@code >}\n{@link JAXBElement }{@code <}{@link WebServerAuthenticationConfiguration }{@code >}\n{@link JAXBElement }{@code <}{@link AuthenticationConfigurationType }{@code >}\n{@link JAXBElement }{@code <}{@link HttpSessionAuthenticationConfiguration }{@code >}"
        ],
        [
            "This method retrieves the list of objects of type \"BWServiceType\"."
        ],
        [
            "Add &lt;events> in &lt;monitor> element of all &lt;bw> elements.\n@param events"
        ],
        [
            "Gets the value of the globalVariable property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the globalVariable property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetGlobalVariable().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link GlobalVariables.GlobalVariable }"
        ],
        [
            "Gets the value of the baseService property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the baseService property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetBaseService().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link Bw }{@code >}\n{@link JAXBElement }{@code <}{@link Service }{@code >}\n{@link JAXBElement }{@code <}{@link ServiceType }{@code >}\n{@link JAXBElement }{@code <}{@link Im }{@code >}\n{@link JAXBElement }{@code <}{@link FormFlow }{@code >}\n{@link JAXBElement }{@code <}{@link Adapter }{@code >}"
        ],
        [
            "Gets the value of the event property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the event property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetEvent().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link EventType }{@code >}\n{@link JAXBElement }{@code <}{@link LogEvent }{@code >}\n{@link JAXBElement }{@code <}{@link SuspendProcessEvent }{@code >}\n{@link JAXBElement }{@code <}{@link FailureEvent }{@code >}"
        ],
        [
            "This will check that the BW project specified in the POM project exists.\n\nTODO : add additional checks about BW project integrity\n\n@throws MojoExecutionException"
        ],
        [
            "This will read the dependencies from the 'resolved' file found in the\nbuild directory. This file was created earlier in the build by the\n'resolve-bw-dependencies' execution of the 'process-resources' phase.\n\n@return The list of dependencies of type {@link dependencyType}\n@throws IOException"
        ],
        [
            "Same as launchTIBCOBinary with 'fork=false' and 'synchronous=true'"
        ],
        [
            "Gets the value of the action property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the action property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetAction().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link AlertAction }{@code >}\n{@link JAXBElement }{@code <}{@link ActionType }{@code >}\n{@link JAXBElement }{@code <}{@link CustomAction }{@code >}\n{@link JAXBElement }{@code <}{@link EmailAction }{@code >}"
        ],
        [
            "Delete all file of a directory and then delete this directory\n\n@param directory\n@return"
        ],
        [
            "Gets the value of the final property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the final property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetFinal().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link String }"
        ],
        [
            "Gets the value of the rulebase property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the rulebase property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetRulebase().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link Rulebases.Rulebase }"
        ],
        [
            "This method add an alias in the object used internally by TIBCO\nBusinessWorks.\n\n@param list, an object used internally by TIBCO BusinessWorks.\n@param aliasName, the name of the alias as normalized b\n{@link AbstractBWMojo}."
        ],
        [
            "This method adds the JAR aliases to a \".aliaslib\" file\n\n@param f, the \".aliaslib\" file to update\n@throws MojoExecutionException"
        ],
        [
            "Gets the rest of the content model.\n\n<p>\nYou are getting this \"catch-all\" property because of the following reason:\nThe field name \"Output\" is used by two different parts of a schema. See:\nline 217 of file:/C:/temp/tibco_xsd/bw/wsdl.xsd\nline 209 of file:/C:/temp/tibco_xsd/bw/wsdl.xsd\n<p>\nTo get rid of this property, apply a property customization to one\nof both of the following declarations to change their names:\nGets the value of the rest property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the rest property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetRest().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link TParam }{@code >}\n{@link JAXBElement }{@code <}{@link TParam }{@code >}\n{@link JAXBElement }{@code <}{@link TFault }{@code >}"
        ],
        [
            "Gets the value of the nvPair property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the nvPair property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetNVPair().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link JAXBElement }{@code <}{@link NVPairType }{@code >}\n{@link JAXBElement }{@code <}{@link NameValuePairInteger }{@code >}\n{@link JAXBElement }{@code <}{@link NameValuePairPassword }{@code >}\n{@link JAXBElement }{@code <}{@link NameValuePairBoolean }{@code >}\n{@link JAXBElement }{@code <}{@link NameValuePair }{@code >}"
        ],
        [
            "Add the Maven dependency to a POM file.\n\n@param pom\n@param dependency\n@throws IOException\n@throws XmlPullParserException"
        ],
        [
            "Remove the Maven dependency from a POM file.\n\n@param pom\n@param dependency\n@throws IOException\n@throws XmlPullParserException"
        ],
        [
            "Check whether a dependency exists in a list of dependencies.\n\n@param dependency\n@param dependencies\n@return true if the dependency exists in dependencies list"
        ],
        [
            "Check whether a dependency exists in a POM.\n\n@param pom\n@param dependency\n@param logger\n@return true if the dependency exists in the POM\n@throws IOException\n@throws XmlPullParserException"
        ],
        [
            "Add a project as a module.\n\n@param pom\n@param relativePath\n@param logger\n@throws IOException\n@throws XmlPullParserException"
        ],
        [
            "Check whether a module exists in a POM.\n\n@param rootPOM\n@param relative\n@param log\n@return\n@throws XmlPullParserException\n@throws IOException"
        ],
        [
            "Retrieves the full path of the artifact that will be created.\n\n@param basedir, the directory where the artifact will be created\n@param finalName, the name of the artifact, without file extension\n@param classifier\n@return a {@link File} object with the path of the artifact"
        ],
        [
            "MOJO execution method."
        ],
        [
            "Reads the complete content of the javaxpath file.\n\n@param filename\n@return\n@throws IOException"
        ],
        [
            "This will update the &lt;repoInstances> element."
        ],
        [
            "Gets the value of the any property.\n\n<p>\nThis accessor method returns a reference to the live list,\nnot a snapshot. Therefore any modification you make to the\nreturned list will be present inside the JAXB object.\nThis is why there is not a <CODE>set</CODE> method for the any property.\n\n<p>\nFor example, to add a new item, do as follows:\n<pre>\ngetAny().add(newItem);\n</pre>\n\n\n<p>\nObjects of the following type(s) are allowed in the list\n{@link Element }\n{@link java.lang.Object }"
        ],
        [
            "Instantiate a new object of type T\n\n@param clazz  Object class\n@param params Constructor args\n@param <T>    Object type\n@return New object"
        ],
        [
            "Create proxy class\n@param <T> Expected proxy type\n@return Class of proxy for given classloader and interfaces"
        ],
        [
            "Create proxy constructor\n\nCreate proxy class\n@param <T> Expected proxy type\n@return Constructor of proxy for given classloader and interfaces"
        ],
        [
            "Start Timer when statement is executed\n\n@param query SQL query\n@return Started timer context or null"
        ],
        [
            "Start Timer when callable statement is created\n\n@return Started timer context or null"
        ],
        [
            "Start Timer when result set is created\n\n@return Started timer context or null"
        ],
        [
            "Increment when result set row is read"
        ],
        [
            "Create a proxy for given JDBC proxy handler\n@param <T> Proxy type\n@param proxyHandler Proxy handler\n@return Proxy"
        ],
        [
            "Wrap a connection to monitor it.\n\n@param wrappedConnection Connection to wrap\n@return Wrapped connection"
        ],
        [
            "Wrap a simple statement to monitor it.\n\n@param statement Statement to wrap\n@return Wrapped statement"
        ],
        [
            "Wrap a prepared statement to monitor it.\n\n@param preparedStatement Prepared statement to wrap\n@param sql SQL\n@return Wrapped prepared statement"
        ],
        [
            "Wrap a callable statement to monitor it.\n\n@param callableStatement Prepared statement to wrap\n@param sql SQL\n@return Wrapped prepared statement"
        ],
        [
            "Determine the interface implemented by this result set\n\n@param resultSet Result set"
        ],
        [
            "Build an args array that can be passed to cowsay.\n@return commandline args"
        ],
        [
            "Face specific flags, either a face mode or face customizations.\n@param args The arg line to add to."
        ],
        [
            "Run cowsay with the provided properties.\n@return The formatted cow message.\n@throws IllegalStateException If mandatory properties have not been set."
        ],
        [
            "Run cowsay with the provided attributes.\n@throws BuildException If something goes wrong during execution."
        ],
        [
            "Set the language.\n@param language A BCP47 language, e.g. \"en\", \"fr\"."
        ],
        [
            "Get a message in the correct language.\n@param key The lookup key for the message.\n@return The message in the correct language, if found, otherwise in the default language."
        ],
        [
            "Do some cowsaying or cowthinking.\n@param args the command line arguments\n@param think if true will think instead of say (the --cowthink flag can also invoke thinking)"
        ],
        [
            "May apply HTML markup to the cow, if requested in the command line.\n@param commandLine The command line with user options.\n@param plainCow The cow formatted in plain text.\n@param moosage The message the cow is saying.\n@param isThought true if this is cowthink instead of cowsay.\n@return Either the plaintext cow or an HTML marked up version, depending on command line."
        ],
        [
            "If a pre-defined cow mode has been set on the command line then use that face.\n@param commandLine The command line with user options.\n@return The cowface for the mode selected on the command line or null if no mode set."
        ],
        [
            "Get a regular cow face optionally formatted with custom eyes and tongue from the command line.\n@param commandLine The command line with user options.\n@return A regular cowface, possibly formatted with custom tongue and/or eyes."
        ],
        [
            "Extracts the ascii art part of the cowfile, removing any before or after PERL comments, variable assignments, weird EOC markers etc.\n@param cow The raw cowfile content.\n@return The ascii art portion of the cowfile.\n@throws CowParseException if the cowfile cannot be parsed."
        ],
        [
            "Call this with the provided cowfileSpec - that is the value passed to `-f` on the commandline.\n\n@param cowfileSpec If cowfileSpec contains a filepath separator it is interpreted as relative to CWD\notherwise the COWPATH will be searched. If not found on the COWPATH we will search for a bundled cowfile.\n@return The content of the specified cowfile (or default cowfile if cowfileSpec is null or empty)."
        ],
        [
            "Reads a cowfile from an InputStream and returns a string.\n@param cowInputStream The InputStream instance to read into a String.\n@return A String representing the result of reading the entire InputStream."
        ],
        [
            "In the case that the cowfileSpec is a filesystem path call this method to attempt to load the cowfile.\nIt will attempt to load the cowfile relative to CWD and if that fails it will try as an absolute path.\n@param path A path to a cowfile either relative to CWD or an absolute path.\n@return An InputStream to the cowfile if it exists."
        ],
        [
            "This will attempt to load a cowfile, by name, from the COWPATH environment variable or bundled cowfiles.\nNote that bundled cowfiles are considered part of the COWPATH since this is how to original `cowsay` worked.\nCOWPATH takes precedence and bundled cowfiles are only considered after searching the COWPATH.\n\n@param cowName The name of a cowfile, e.g. \"sheep\" or \"sheep.cow\".\n@return An InputStream to the first matching cowfile found."
        ],
        [
            "Determine if this File appears to be a genuine cowfile.\nThis is not a deep check, more rigor will be applied later.\n@param cowfile A potential cowfile.\n@return true if this File seems to be a cowfile."
        ],
        [
            "Reads a File to an InputStream.\nNot sure why I thought this should be a separate method, I guess it made sense at the time.\n@param cowfile The cowfile to read.\n@return An InputStream which can be used to read the File."
        ],
        [
            "Get a cowfile, by name, from the given directory.\n@param folder The absolute path to the filesystem folder.\n@param cowName The name of the cowfile to load (without the \".cow\" extension).\n@return A File if the cowfile is found in this directory otherwise null."
        ],
        [
            "Gets all cowfiles found in the given directory.\n@param folder The absolute path to the filesystem folder.\n@return A list of all cowfiles found in this directory."
        ],
        [
            "Get cow args by mode.\n@param mode A mode key, \"b\" for Borg, \"d\" for dead, \"g\" for greedy etc\n@return The CowArgs for the given mode or null if not found"
        ],
        [
            "Set custom cow eyes.\n@param eyes The eyes to use - if more than two characters long the first two will be used."
        ],
        [
            "Set custom cow tongue.\n@param tongue The tongue to use - if more than two characters long the first two will be used."
        ],
        [
            "Determine if the given mode flag is known and mapped to a particular cow face.\n@param mode The key to the mode, generally a single character, e.g. \"b\" for \"Borg\" mode.\n@return true if this is a known mode."
        ],
        [
            "Parses an array of arguments.\n@param argv Arguments array.\n@return The parsed arguments."
        ],
        [
            "Displays help message to user."
        ],
        [
            "Draws a complete bubble around a line-wrapped message.\n@param bubble The BubbleWrap to use (e.g. SPEECH_BUBBLE or THOUGHT_BUBBLE)\n@param message The message to wrap, it should already be line-wrapped if appropriate.\n@param longestLine The length of the longest line in the message.\n@return The message, wrapped in a bubble."
        ],
        [
            "Applies word wrapping to the message to handle long lines.\n@param message The raw input message.\n@return The message with long lines wrapped."
        ],
        [
            "Builds the bubble around the message.\n@param message The plain message as provided by the user.\n@return The message, line-wrapped and bubble-wrapped."
        ],
        [
            "Set the length of the wordwrap, default is \"40\", zero disables line-wrap.\n@param wordwrap A number indicating where (approximately) to line-wrap the message."
        ],
        [
            "For a given multiline message determines the character count of the longest line.\n@param message The message after line-wrap has been applied but before any bubble wrapping.\n@return The count of characters in the longest line."
        ],
        [
            "Posts a log message to Loggly\n@param message message to be logged\n@return {@code true} if successful; {@code false} otherwise"
        ],
        [
            "Posts a log message asynchronously to Loggly\n@param message message to be logged\n@param callback callback to be invoked on completion of the post"
        ],
        [
            "Posts several log messages in bulk to Loggly asynchronously\n@param messages messages to be logged\n@param callback callback to be invoked on completion of the post"
        ],
        [
            "Combines a collection of messages to be sent to Loggly.\nIn order to preserve event boundaries, the new lines in\neach message are replaced with '\\r', which get stripped\nby Loggly.\n@param messages messages to be combined\n@return a single string containing all the messages"
        ],
        [
            "Runs a demo of the Loggly client\n\n@param args command-line arguments. The first and only argument\nshould be your Loggly customer token.\nhttp://loggly.com/docs/customer-token-authentication-token/"
        ],
        [
            "Gets all schemas for this catalog keyed by unique name.\n\n@see  java.sql.DatabaseMetaData#getSchemas()"
        ],
        [
            "Gets the schema of the provided name.\n\n@throws  NoRowException if the schema doesn't exist"
        ],
        [
            "Set to null when context shutdown"
        ],
        [
            "Resyncs the entire directory recursively, registering and canceling any\ndiscrepancies found."
        ],
        [
            "Gets all tables for this schema keyed by unique name.\n\n@see  java.sql.DatabaseMetaData#getTables()"
        ],
        [
            "Gets the table of the provided name.\n\n@throws  NoRowException if the table doesn't exist"
        ],
        [
            "Implementation of writeTo\n\n@param out\n@param writeStart  The absolute index to write from\n@param writeEnd    The absolute index one past last character to write\n@throws IOException"
        ],
        [
            "Gets all catalogs for this database keyed by unique name.\n\n@see  java.sql.DatabaseMetaData#getCatalogs()"
        ],
        [
            "Gets the catalog of the provided name.\n\n@throws  NoRowException if the catalog doesn't exist"
        ],
        [
            "Grows as-needed to fit the provided new capacity.\n\n@returns the possibly new buffer."
        ],
        [
            "Provides detailed logging for a media encoder."
        ],
        [
            "Provides detailed logging for a writer."
        ],
        [
            "Construct a lexical position at line 0, column 0, with the given file.\n\n@param file The type name\n@param <F>  The type of file names\n\n@return A lexical position"
        ],
        [
            "Appends the given range of a segment. to the buffer."
        ],
        [
            "Writes the given range of a segment to the given writer using the given encoder."
        ],
        [
            "Gets the character at the given index in a segment.\nThis is the absolute index, the offset is not added-in."
        ],
        [
            "Loads the custom types when first needed and caches the results."
        ],
        [
            "Gets all columns for this schema keyed by unique name.\n\n@see  java.sql.DatabaseMetaData#getColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
        ],
        [
            "Gets the column of the provided name.\n\n@throws  NoRowException if the column doesn't exist"
        ],
        [
            "Gets all columns for this schema in their ordinal position order.\nColumn with ordinal position one is at index zero.\n\n@see  #getColumnMap()"
        ],
        [
            "Gets the column of the provided ordinal position, where positions start at one.\n\n@throws  NoRowException if the column doesn't exist"
        ],
        [
            "Gets the set of tables that this table depends on.\n\nThis is based on getImportedKeys"
        ],
        [
            "Gets the set of tables that depend on this table.\n\nThis is based on getExportedKeys"
        ],
        [
            "Adds a new segment."
        ],
        [
            "Writes a character, unicode escaping as needed."
        ],
        [
            "Writes a String, unicode escaping as needed."
        ],
        [
            "Put all of the values into the existing set.\n\n@param values length must be a multiple of two: {@code String key, Object value, ...}\n@throws IllegalArgumentException if a value type is not supported"
        ],
        [
            "Move and zoom to the most recently reported location.\n\n@see CameraUpdateFactory#newLatLngZoom(LatLng, float)"
        ],
        [
            "If the position is not visible on the map, animate the camera to include it, after the delay."
        ],
        [
            "Get an Animator that reveals the rectangular View from the circular View.\n\n@param circle to start reveal from\n@param rect   to reveal, probably should already be {@link View#INVISIBLE invisible}"
        ],
        [
            "Get an Animator that \"unreveals\" the rectangular View to the circular View.\n\n@param circle to end \"unreveal\" at\n@param rect   to \"unreveal\", will be {@link View#INVISIBLE invisible} when the animation\nends"
        ],
        [
            "Get a cached arc motion transition."
        ],
        [
            "Get a cached bold span.\n\n@param i starts at zero\n@since 2.6.0"
        ],
        [
            "Scale in the View to full size.\n\n@since 4.0.0"
        ],
        [
            "Scale out the View to zero size.\n\n@since 4.0.0"
        ],
        [
            "Scale out the ViewSwitcher, show the next View, scale it back in, and run the action.\n\n@since 4.0.0"
        ],
        [
            "Get the number of rows at the URI.\n\n@return {@link Integer#MIN_VALUE} if the URI could not be queried\n@since 2.3.0"
        ],
        [
            "Get a single line address which uses the delimiter between the original lines."
        ],
        [
            "Register the listeners and then connect the client."
        ],
        [
            "Begin a transaction that uses the transition.\n\n@return null if the FragmentManager is null"
        ],
        [
            "Get the result of applying the alpha to the color."
        ],
        [
            "Set the listener on all of the Views.\n\n@since 4.0.0"
        ],
        [
            "Get the name of the level.\n\n@param level one of the Android {@link android.util.Log Log} constants"
        ],
        [
            "Scale the new Activity from the View to its full size.\n\n@see ActivityOptions#makeScaleUpAnimation(View, int, int, int, int)"
        ],
        [
            "Show the current input method for the focused View which can receive input."
        ],
        [
            "Hide the input method for the View's window."
        ],
        [
            "True if the cursor has a row at the position.\n\n@since 4.0.0"
        ],
        [
            "Get the number of rows in the cursor.\n\n@param close true to close the cursor or false to leave it open"
        ],
        [
            "Get the int value in the first row and column.\n\n@param close true to close the cursor or false to leave it open\n@return {@link Integer#MIN_VALUE} if the cursor is empty\n@since 2.5.0"
        ],
        [
            "Get the long value in the first row and column.\n\n@param close true to close the cursor or false to leave it open\n@return {@link Long#MIN_VALUE} if the cursor is empty"
        ],
        [
            "Get the String value in the first row and column.\n\n@param close true to close the cursor or false to leave it open\n@return null if the cursor is empty"
        ],
        [
            "Get all int values in the first column.\n\n@param close true to close the cursor or false to leave it open\n@since 2.5.0"
        ],
        [
            "Get all long values in the first column.\n\n@param close true to close the cursor or false to leave it open"
        ],
        [
            "Get all String values in the first column.\n\n@param close true to close the cursor or false to leave it open"
        ],
        [
            "Set a placeholder before loading an image, optionally resizing and transforming it. All\nattributes are optional.\n\n@param transform can be \"circle\""
        ],
        [
            "Get the orientation of the RecyclerView's LayoutManager.\n\n@return -1 if the RecyclerView doesn't have a LayoutManager\n@see RecyclerView#VERTICAL\n@see RecyclerView#HORIZONTAL"
        ],
        [
            "Get the number of spans laid out by the RecyclerView's LayoutManager.\n\n@return 0 if the RecyclerView doesn't have a LayoutManager"
        ],
        [
            "Add the rule to the View's RelativeLayout params and request a layout of the View."
        ],
        [
            "True if this method has been previously called for the current row. False if the cursor is\nbefore the first row or after the last row."
        ],
        [
            "Get this thread's Looper, if it's a Looper thread. Otherwise get the main thread Looper."
        ],
        [
            "Get the values of the SparseArray."
        ],
        [
            "Get the values of the LongSparseArray."
        ],
        [
            "Check if the pager has a new adapter and switch to it if it does."
        ],
        [
            "Check if the ImageView has a new Drawable and calculate the new scaling if it does."
        ],
        [
            "Scale the image and translate it according to the pager position and offset."
        ],
        [
            "Update or delete records and get the number of rows affected."
        ],
        [
            "Get the updated SQL elements for the URI and, when not inserting, a cursor with the query\nresults."
        ],
        [
            "Get the number of bytes that would be used to store a bitmap with the size, in pixels, and\nstorage config."
        ],
        [
            "If the bitmap is immutable, get a mutable copy of it. After a copy is created, the source\nbitmap will be recycled. If the bitmap is already mutable, it will be returned.\n\n@return null if a copy could not be made"
        ],
        [
            "True if the Intent can be resolved to an Activity."
        ],
        [
            "Get an Activity Intent that launches an email app with the headers. Any null or empty\nparameters are skipped. The subject and body will be encoded.\n\n@since 4.0.0"
        ],
        [
            "Use the default layout for the panes."
        ],
        [
            "Get the fragment that is displayed in the pane.\n\n@return null if a fragment hasn't been added to the pane yet"
        ],
        [
            "Get a Bundle of the keys and values."
        ],
        [
            "Get an Intent to insert or update rows of the content.\n\n@param action must be {@link Intent#ACTION_INSERT ACTION_INSERT} or\n{@link Intent#ACTION_EDIT ACTION_EDIT}\n@since 4.0.0"
        ],
        [
            "Get an Intent to update the selected rows of the content.\n\n@since 4.0.0"
        ],
        [
            "Get an Intent to delete rows of the content.\n\n@since 4.0.0"
        ],
        [
            "Get an Intent to delete the selected rows of the content.\n\n@since 4.0.0"
        ],
        [
            "Get the ActionBar height in the Context's theme."
        ],
        [
            "Get the ActionBar background in the Context's theme.\n\n@return null if a background is not defined"
        ],
        [
            "True if a data network is connected."
        ],
        [
            "Reduce the number of edits by eliminating operationally trivial equalities.\n@param diffs LinkedList of Diff objects."
        ],
        [
            "Compute a list of patches to turn text1 into text2.\ntext2 is not provided, diffs are the delta between text1 and text2.\n@param text1 Old text.\n@param diffs Array of Diff objects for text1 to text2.\n@return LinkedList of Patch objects."
        ],
        [
            "Returns an Option consisting of the result of applying the given function to the current value.\n\n@since 1.2"
        ],
        [
            "Converts a SOAPMessage instance to string representation."
        ],
        [
            "Central method to get cached FileObjectWrapper. Creates new FileObjectWrapper if it can't be found"
        ],
        [
            "Checks if passed element is a method declared as public, not abstract and not static\n\n@param element the element to check\n@return true if passed element is public, not abstract and not static method"
        ],
        [
            "Checks if passed element has a non void return type and takes no parameters\n\n@param executableElement\n@return true if passed element has a non void return type and takes no parameters"
        ],
        [
            "Checks whether the property for the passed key is enabled or not.\n\n@param propertyKey the property key to check\n@return true, if the property is enabled in profile or manual overrides and not disabled in manual overrides, otherwise false"
        ],
        [
            "Checks if class has noargs constructor or default noargs constructor.\n\n@param typeElement the type element to check.\n@return true if element has noarg constructor or no constructor at all"
        ],
        [
            "Gets an annotation of passed instance.\n\n@param instance he instance to get the annotation from\n@param <T>      the annotations class to get\n@return the annotation if present, otherwise null"
        ],
        [
            "Checks whether the passsed method has a non void return value.\n\n@param method the method to check\n@return true if the method has a non void return type, otherwise false"
        ],
        [
            "Write the type string to the Stringbuilder\n\n@param stringBuilder the stringbuilder to write to\n@param outputStyle   the output style to use\n@param outputElement the output element to write the type string for.\n@return true, if any output was written to the stringbuilder, otherwise false."
        ],
        [
            "Gets a list with all wrapper classes.\n\n@return a list with all wrapper classes"
        ],
        [
            "Generic function to get a implicit data provider classes from resource files.\n\n@return a set that contains all context provider type the were found"
        ],
        [
            "Method to get all available wrappers.\n\n@return all wrapping between wrapper classes and their wrapped types."
        ],
        [
            "Initializes all available connectors."
        ],
        [
            "Send error report to all initialized connector instances.\n\n@param connectorOutputProvider the context data provider used for output"
        ],
        [
            "Extracts all names for connector configurations from System properties.\n\n@return a Set containing all connector configuration names"
        ],
        [
            "Collects all properties for a given connector configuration name and writes them to a Map.\n\n@param connectorName the name of the connector configuration\n@return a Map containing all properties for a connector configuration name"
        ],
        [
            "Tries to create a Connector for a given connector configuration name.\n\n@param connectorConfigurationName the name of the connector configuration\n@return the connector if it could be created and initialized without error, otherwise null"
        ],
        [
            "Checks whether the LogConnector is defined or not.\n\n@param connectorClass the connector to check for\n@return true, if LogConnector is already defined, otherwise false."
        ],
        [
            "Getter method names must have a specific prefix.\n\n@param method the method to check\n@return true, if the method name prefix is a getter Prefix, otherwise false"
        ],
        [
            "Getter methods must be public and not be static.\n\n@param method the method to check\n@return true if the method is not static and public, otherwise false"
        ],
        [
            "Getter method and field must have compatible fields.\n\n@param type the type to search the field in\n@param method the method to check\n@return true, if field type is assignable to methods return type"
        ],
        [
            "Helper method for getting a corresponsing field for a method\n\n@param type the type to search the field in\n@param method the getter method to search the field for\n@return the Field or null if the field for the passed method doesn't exists"
        ],
        [
            "Checks whether the method name starts with a getter prefix.\n\n@param methodName the method name to check for\n@return true if the method name starts with eiher one of values stored in GETTER_PREFIXES"
        ],
        [
            "Capitalizes first char of an input string.\n\n@param input the string to be processed;\n@return The input string with the first capitalized char. Returns empty string, if passed input String is null or empty."
        ],
        [
            "Decapitalizes first char of an input string.\n\n@param input the string to be processed;\n@return The input string with the first capitalized char. Returns empty string, if passed input String is null or empty."
        ],
        [
            "Strips getter prefix from input string\n\n@param input the input string to be processed\n@return the string stripped by getter prefix"
        ],
        [
            "Sends the error reports to all connectors.\n\n@param proceedingJoinPoint the aspectj calling context\n@param annotatedId         the id defined in the watchdog annotation"
        ],
        [
            "Wraps the passed instance inside a matching tracee context logging provider instance.\nWill return the passed instance, if no matching tracee context logging provider exists.\n\n@param contextLoggerConfiguration the configuration to use\n@param instanceToWrap             the instance to wrap\n@return either a tracee context provider that encapsulates the passed instance or the instance itself if no matching context provider exists"
        ],
        [
            "Creates a new instance of the passed type via reflection.\n\n@param type the type of the new instance\n@return a new instance of the passed type or null if an exception occurred during the creation of the instance of if the passed type is null."
        ],
        [
            "Gets the current profile.\nUses the following algorithm to determine the profile.\n1. If System Property is set force it as profile\n2. If Custom Profile resource can be located in classpath use that file as profile\n3. Use default profile\n\n@return"
        ],
        [
            "Loads properties from resources.\n\n@param propertyFileName the property file name to load\n@return the properties, or null if the properties can't be found\n@throws IOException if property file can't be opened"
        ],
        [
            "Adds passed contexts value pairs to manualContextOverrides.\n\n@param contexts The property name of the context data.\n@param value    the value which should be set."
        ],
        [
            "Creates a TraceeGsonContextStringRepresentationBuilder instance which can be used for creating the createStringRepresentation message.\n\n@return An instance of TraceeGsonContextStringRepresentationBuilder"
        ],
        [
            "Checks whether the passed Throwable is contained in methods throws part.\n\n@param proceedingJoinPoint The aspectj join point\n@param thrownException The Throwable which must be looked for\n@return true if Throwable was found and must be suppressed, otherwise false"
        ],
        [
            "Checks whether the passed Throwable is defined included in passed classes array or is subtype of one of the included classes.\n\n@param classes the classes to search\n@param thrownException the Throwable which must be searched for\n@return true if Throwable was found, otherwise false"
        ],
        [
            "Gets all Exceptions declared at the throws part of the method signature.\n\n@param proceedingJoinPoint the proceeding join point to get the method signature from.\n@return All defined exceptions that must be caught (are defined in the method signature in the throws part)"
        ],
        [
            "Checks whether the exception should be processed or not.\n\n@param watchdogAnnotation the watchdog annotation to check.\n@return true, if passed watchdogAnnotation is not null and not disabled vie system properties, otherwise false."
        ],
        [
            "Verifies that the number of values in the actual group is equal to the given one.\n\n@param expected the expected number of values in the actual group.\n@return this assertion object.\n@throws AssertionError if the number of values of the actual group is not equal to the given one."
        ],
        [
            "Verifies that the actual group of objects does not have duplicates.\n\n@throws AssertionError if the actual group of objects is {@code null}.\n@throws AssertionError if the actual group of objects has duplicates."
        ],
        [
            "Declared by SpinnerAdapter, this method allows your spinner to show\ndifferent views in your drop down vs the 'closed' spinned box."
        ],
        [
            "Allow the reservation of term names during the initialization of the\nvocabulary.\n\n@param name\nthen name of the term\n@return a number that represents the position in which the term was\nreserved\n@throws IllegalArgumentException\nif the specified name is not valid or it has been already\nreserved.\n@throws IllegalStateException\nif the vocabulary has been already initialized."
        ],
        [
            "Upon reservation, the method enables registering the properly built\nimmutable term instance.\n\n@param term\nthe term to be registered.\n@throws IllegalArgumentException\nif the specified term instance cannot be registered, either\nbecause the ordinal is invalid or because another term\nwith the same name has already been registered.\n@throws IllegalStateException\nif the vocabulary has been already initialized."
        ],
        [
            "Complete the initialization of the vocabulary. Beyond this point the\nvocabulary can be put to use.\n\n@throws IllegalStateException\nif the vocabulary has been already initialized or not all the\nreserved names have been registered."
        ],
        [
            "Get custom representation with bad data\n\n@return the representation"
        ],
        [
            "5.2.  Relative Resolution\n\nThis section describes an algorithm for converting a URI reference\nthat might be relative to a given base URI into the parsed components\nof the reference's target.  The components can then be recomposed, as\ndescribed in Section 5.3, to form the target URI.  This algorithm\nprovides definitive results that can be used to test the output of\nother implementations.  Applications may implement relative reference\nresolution by using some other algorithm, provided that the results\nmatch what would be given by this one.\n\n5.2.1.  Pre-parse the Base URI\n\nThe base URI (Base) is established according to the procedure of\nSection 5.1 and parsed into the five main components described in\nSection 3.  Note that only the scheme component is required to be\npresent in a base URI; the other components may be empty or\nundefined.  A component is undefined if its associated delimiter does\nnot appear in the URI reference; the path component is never\nundefined, though it may be empty.\n\nNormalization of the base URI, as described in Sections 6.2.2 and\n6.2.3, is optional.  A URI reference must be transformed to its\ntarget URI before it can be normalized.\n\n5.2.2.  Transform References\n\nFor each URI reference (R), the following pseudocode describes an\nalgorithm for transforming R into its target URI (T):\n-- The URI reference is parsed into the five URI components\n--\n(R.scheme, R.authority, R.path, R.query, R.fragment) = parse(R);\n\n-- A non-strict parser may ignore a scheme in the reference\n-- if it is identical to the base URI's scheme.\n--\nif ((not strict) and (R.scheme == Base.scheme)) then\nundefine(R.scheme);\nendif;\n\nif defined(R.scheme) then\nT.scheme    = R.scheme;\nT.authority = R.authority;\nT.path      = remove_dot_segments(R.path);\nT.query     = R.query;\nelse\nif defined(R.authority) then\nT.authority = R.authority;\nT.path      = remove_dot_segments(R.path);\nT.query     = R.query;\nelse\nif (R.path == \"\") then\nT.path = Base.path;\nif defined(R.query) then\nT.query = R.query;\nelse\nT.query = Base.query;\nendif;\nelse\nif (R.path starts-with \"/\") then\nT.path = remove_dot_segments(R.path);\nelse\nT.path = merge(Base.path, R.path);\nT.path = remove_dot_segments(T.path);\nendif;\nT.query = R.query;\nendif;\nT.authority = Base.authority;\nendif;\nT.scheme = Base.scheme;\nendif;\n\nT.fragment = R.fragment;"
        ],
        [
            "5.2.3.  Merge Paths\n\nThe pseudocode above refers to a \"merge\" routine for merging a\nrelative-path reference with the path of the base URI.  This is\naccomplished as follows:\n\no  If the base URI has a defined authority component and an empty\npath, then return a string consisting of \"/\" concatenated with the\nreference's path; otherwise,\no  return a string consisting of the reference's path component\nappended to all but the last segment of the base URI's path (i.e.,\nexcluding any characters after the right-most \"/\" in the base URI\npath, or excluding the entire base URI path if it does not contain\nany \"/\" characters).\n\n@param hasAuthority"
        ],
        [
            "5.2.4.  Remove Dot Segments\n\nThe pseudocode also refers to a \"remove_dot_segments\" routine for\ninterpreting and removing the special \".\" and \"..\" complete path\nsegments from a referenced path.  This is done after the path is\nextracted from a reference, whether or not the path was relative, in\norder to remove any invalid or extraneous dot-segments prior to\nforming the target URI.  Although there are many ways to accomplish\nthis removal process, we describe a simple method using two string\nbuffers.\n\n1.  The input buffer is initialized with the now-appended path\ncomponents and the output buffer is initialized to the empty\nstring.\n\n2.  While the input buffer is not empty, loop as follows:\n\nA.  If the input buffer begins with a prefix of \"../\" or \"./\",\nthen remove that prefix from the input buffer; otherwise,\n\nB.  if the input buffer begins with a prefix of \"/./\" or \"/.\",\nwhere \".\" is a complete path segment, then replace that\nprefix with \"/\" in the input buffer; otherwise,\n\nC.  if the input buffer begins with a prefix of \"/../\" or \"/..\",\nwhere \"..\" is a complete path segment, then replace that\nprefix with \"/\" in the input buffer and remove the last\nsegment and its preceding \"/\" (if any) from the output\nbuffer; otherwise,\n\nD.  if the input buffer consists only of \".\" or \"..\", then remove\nthat from the input buffer; otherwise,\n\nE.  move the first path segment in the input buffer to the end of\nthe output buffer, including the initial \"/\" character (if\nany) and any subsequent characters up to, but not including,\nthe next \"/\" character or the end of the input buffer.\n\n3.  Finally, the output buffer is returned as the result of\nremove_dot_segments."
        ],
        [
            "Concatenates elements to form a dotted name, discarding null values\nand empty strings.\n\n@param name\nthe first element of the name\n@param names\nthe remaining elements of the name\n@return {@code name} and {@code names} concatenated by periods"
        ],
        [
            "Concatenates a canonical class name and elements to form a dotted name, discarding any null values or empty strings\nany null values or empty strings.\n\n@param clazz\nthe first element of the name\n@param names\nthe remaining elements of the name\n@return {@code clazz} and {@code names} concatenated by periods"
        ],
        [
            "Create a wildcard media type for a given primary type\n\n@param type\nThe media type primary type\n@return a wildcard media type for the given primary type\n@throws NullPointerException\nif the type is null\n@throws IllegalArgumentException\nif the specified type is not valid"
        ],
        [
            "Create a wildcard structured-syntax media type for a given primary type\n\n@param type\nThe media type primary type\n@param suffix\nThe suffix associated to the structured-syntax\n@return a wildcard media type for the given primary type and suffix\n@throws NullPointerException\nif the type or suffix is null\n@throws IllegalArgumentException\nif the specified type or suffix is not valid"
        ],
        [
            "Create a media type\n\n@param type\nThe media type primary type\n@param subtype\nThe media type subtype\n@return A media type for the specified media range\n@throws NullPointerException\nif any of the specified media range elements is null\n@throws InvalidMediaTypeException\nif any of the specified media range elements is not valid"
        ],
        [
            "Format the media type in a HTTP-header compliant manner using preferred\nformat.\n\n@param mediaType\nthe media type to format\n@return the compliant representation of the media type\n@see <a href=\"https://tools.ietf.org/html/rfc7231#section-3.1.1.1\">[RFC\n7231] Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content,\nsection 3.1.1.1</a>"
        ],
        [
            "Update the resource representation adding the path where the resource is\npublished and whether or not if given that URI it can be resolved to the\nsame resource."
        ],
        [
            "Compares this term with the specified object for order. Returns a\nnegative integer, zero, or a positive integer as this object is less\nthan, equal to, or greater than the specified object.\n\nTerm constants are only comparable to other term constants of the same\nvocabulary. The natural order implemented by this method is the order in\nwhich the constants are declared."
        ],
        [
            "Return the pending names for the specified attachment.\n\n@param attachmentId\nthe name of the attachment.\n@return the pending names for the specified attachment."
        ],
        [
            "Add a name to the list of available names for a given attachment.\n\n@param attachmentId\nthe name of the attachment.\n@param nextName\nthe member name."
        ],
        [
            "Return the next available name for a given attachment. The name will be\nremoved from the list of available names for the specified attachment.\n\n@param attachmentId\nthe name of the attachment.\n@return the next available name for the specified attachment."
        ],
        [
            "Create a new name provider.\n\n@param resource\nthe name of the owner of the name provider.\n@return a name provider."
        ],
        [
            "As per RFC 6838, Section 4.2 structuring syntaxes specifier syntaxes are\ndefined after the last '+' symbol.\n\n@see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2>[RFC 6838]\nMedia Type Specifications and Registration Procedures, Section\n4.2</a>"
        ],
        [
            "Checks the given quoted string for illegal characters, as defined in RFC\n7230, section 3.2.6.\n\n@throws IllegalArgumentException\nin case of illegal characters\n@see <a href=\"http://tools.ietf.org/html/rfc7230#section-3.2.6\">Hypertext\nTransfer Protocol (HTTP/1.1): Message Syntax and Routing, Section\n3.2.6</a>"
        ],
        [
            "Returns the next code point in the iteration.\n\n@return the next code point in the iteration\n@throws NoSuchElementException\nif the iteration has no more code points"
        ],
        [
            "Update the resource representation adding a temporal timestamp of when\nthe resource was last updated."
        ],
        [
            "5.3.  Component Recomposition\n\nParsed URI components can be recomposed to obtain the corresponding\nURI reference string.  Using pseudocode, this would be:\n\nresult = \"\"\n\nif defined(scheme) then\nappend scheme to result;\nappend \":\" to result;\nendif;\n\nif defined(authority) then\nappend \"//\" to result;\nappend authority to result;\nendif;\n\nappend path to result;\n\nif defined(query) then\nappend \"?\" to result;\nappend query to result;\nendif;\n\nif defined(fragment) then\nappend \"#\" to result;\nappend fragment to result;\nendif;\n\nreturn result;\n\nNote that we are careful to preserve the distinction between a\ncomponent that is undefined, meaning that its separator was not\npresent in the reference, and a component that is empty, meaning that\nthe separator was present and was immediately followed by the next\ncomponent separator or the end of the reference."
        ],
        [
            "Close an input stream logging possible failures.\n@param is The input stream that is to be closed.\n@param message The message to log in case of failure."
        ],
        [
            "Determines if a character is a Name start character.\n\n@param codePoint\nThe code point of the character to be tested. For UTF-16\ncharacters the code point corresponds to the value of the char\nthat represents the character.\n@return {@code true} if {@code codePoint} is a Name start character,\notherwise {@code false}\n@see <b>Name</b> definition in the <a\nhref=\"https://www.w3.org/TR/REC-xml/#d0e804\">Extensible Markup\nLanguage (XML) 1.0 (Fifth Edition)</a> specification."
        ],
        [
            "Determines if a character is a Name character.\n\n@param codePoint\nThe code point of the character to be tested. For UTF-8 and UTF-16\ncharacters the code point corresponds to the value of the char\nthat represents the character.\n@return {@code true} if {@code codePoint} is a Name character,\notherwise {@code false}\n@see <b>Name</b> definition in the <a\nhref=\"https://www.w3.org/TR/REC-xml/#d0e804\">Extensible Markup\nLanguage (XML) 1.0 (Fifth Edition)</a> specification."
        ],
        [
            "Checks the given type name for illegal characters, as defined in RFC\n7230, section 3.2.6.\n\n@param token\nthe string to validate\n@throws IllegalArgumentException\nin case of illegal characters\n@see <a href=\"http://tools.ietf.org/html/rfc7230#section-3.2.6\">Hypertext\nTransfer Protocol (HTTP/1.1): Message Syntax and Routing, Section\n3.2.6</a>"
        ],
        [
            "Create transformator with the specified media type\n\n@param mediaType\nthe new media type\n@return a new transformator with the same configuration except for the\nmedia type, which is set to the specified one\n@throws UnsupportedMediaTypeException\nif the media type is not valid"
        ],
        [
            "Register a new adapter class.\n\n@param clazz\nthe adapter class.\n@throws NullPointerException\nif the adapter class is {@code null}."
        ],
        [
            "Get an adapter capable of transforming instances of a source type into\ninstances of a target type.\n\n@param sourceType\nThe type of the instances that the adapter should be able to\ntransform.\n@param targetType\nThe type of instances that the adapter should be able to\ncreate.\n@return An adapter capable of transforming instances of the {@code sourceType}\ninto instances of the {@code targetType}.\n@throws CannotAdaptClassesException\nwhen no adapter capable of carrying out such transformation\nis available."
        ],
        [
            "Transform a given object into an instance of the specified type.\n\n@param object\nThe object that is to be transformed.\n@param resultClass\nThe type of instance that is to be created.\n@return An instance of type {@code resultClass} created upon the\nspecified @ object} .\n@throws CannotAdaptClassesException\nwhen no adapter capable of carrying out such transformation\nis available."
        ],
        [
            "Create a copy of the namespaces which includes a mapping between a given\nprefix and namespace URI.\n\n@param prefix\nthe prefix to be added\n@param namespaceURI\nthe namespace URI to be mapped to the prefix\n@return a copy of the instance that includes the mapping between the\nspecified namespace URI and prefix.\n@throws NullPointerException if the prefix or namespace URI are null."
        ],
        [
            "Create a copy of the namespaces without the prefixes.\n\n@param prefixes\nthe prefixes to be excluded from the copy\n@return a copy of the instance that excludes the mappings for the\nspecified prefixes."
        ],
        [
            "Escapes a character sequence so that it is valid XML.\n\n@param s\nThe character sequence.\n@return The escaped version of the character sequence."
        ],
        [
            "Instead of retrieving the contents of the resource, return a description\nof the query received."
        ],
        [
            "Add a name provider for a container resource.\n\n@param containerName\nthe name of the container.\n@param provider\nthe name provider."
        ],
        [
            "Return the name provider registered for a given container resource.\n\n@param containerName\nthe name of the container.\n@return the provider for the specified container resource."
        ],
        [
            "Return an object of the specified type to allow access to the\nprovider-specific API. If the provider's ApplicationEngine implementation\ndoes not support the specified class, the ApplicationEngineException is\nthrown.\n\n@param <T> the type of object to be returned\n@param clazz\nthe class of the object to be returned. This is normally\neither the underlying {@code ApplicationEngine} implementation\nclass or an interface that it implements.\n@return an instance of the specified class\n@throws ApplicationEngineException\nif the provider does not support the call"
        ],
        [
            "Checks if the path is out of the scope.\n\n@return {@code true}, if is out of the scope, {@code false} otherwise"
        ],
        [
            "Create a new path with a given directory.\n\n@param directory the directory for the path\n@return the new path"
        ],
        [
            "Create a new path with a given file.\n\n@param file the file for the path\n@return the new path"
        ],
        [
            "If there are no segments in the resolved path, and we are trying to\nresolve a directory coming from a path, we have to make explicit that we\nwant the directory"
        ],
        [
            "Finds the type parameter for the given class which is assignable to the\nbound class.\n\n@param clazz\na parameterized class\n@param bound\nthe type bound\n@param <T>\nthe type bound\n@return the class's type parameter"
        ],
        [
            "Create a primitive object factory for the specified primitive class\n\n@param <T>\nthe primitive class type\n@param valueClass\nthe primitive class to use\n@return an object factory\n@throws NullPointerException\nif the specified class is {@code null}\n@throws IllegalArgumentException\nif the specified class is not a primitive class"
        ],
        [
            "Get a list of acceptable variants. Current implementation only leverages\nmedia type for the specification of variants.\n\n@param mediaTypes\nThe list of acceptable media types.\n@return A list of acceptable variants."
        ],
        [
            "Find the individual of the data set with the same identifier\n\n@param dataSet\nthe data set\n@return the individual with the same identifier, or {@code null} if no\nindividual has the same identifier."
        ],
        [
            "Is value = expected?"
        ],
        [
            "Is value > expected?"
        ],
        [
            "Is value >= expected?"
        ],
        [
            "Is value < expected?"
        ],
        [
            "Is value <= expected?"
        ],
        [
            "This method returns a list of state ballot measures in a given year.\n\n@param year\n@param stateId\n@return {@link Measures}: List of minimal measure information."
        ],
        [
            "This method returns a single Ballot Measure detail.\n\n@param measureId\n@return {@link Measure}: detail on single measure"
        ],
        [
            "This method dumps a candidate's rating by an SIG.\n\n@param candidateId\n@return {@link CandidateRating}"
        ],
        [
            "This method dumps all candidate ratings from a scorecard by an SIG.\n\n@param ratingId\n@return {@link Rating}\n@throws VoteSmartException, VoteSmartErrorException"
        ],
        [
            "This method grabs district basic election data according to year and stateid.\n\n@param year\n@return {@link Elections}"
        ],
        [
            "This method grabs district basic election data according to zip code.\n\n@param zip5\n@return {@link ElectionByZip}:"
        ],
        [
            "This method grabs district basic election data according to electionId and stageId.\nPer state lists of a Presidential election are available by specifying the stateId.\n\n@param electionId\n@param stageId\n@param party\n@return {@link StageCandidates}:"
        ],
        [
            "This method grabs office address and basic candidate information according to the officeId and state.\n\n@param officeId\n@return {@link AddressAddress}: Candidate name and list of offices"
        ],
        [
            "This method dumps offices we keep track of according to type.\n\n@param officeTypeId\n@return {@link Offices}:"
        ],
        [
            "This method dumps offices we keep track of according to level.\n\n@param levelId\n@return {@link Offices}:"
        ],
        [
            "This method dumps offices we keep track of according to type and level.\n\n@param officeTypeId\n@param officeLevelId\n@return {@link Offices}:"
        ],
        [
            "This method dumps offices we keep track of according to branch and level.\n\n@param branchId\n@param levelId\n@return {@link Offices}:"
        ],
        [
            "Fetches counties in a state.\n\n@param stateId\n@return {@link Counties}:"
        ],
        [
            "Fetches cities in a state.\n\n@param stateId\n@return {@link Cities}:"
        ],
        [
            "Fetches officials for a locality.\n\n@param localId\n@return {@link LocalCandidateList}:"
        ],
        [
            "Queries the API server for the information requested\n\n@param method\n@param argMap\n@param responseType\n@throws VoteSmartErrorException"
        ],
        [
            "This method grabs a list of officials according to state representation.\n\n@param stateId\n@return {@link CandidateList}"
        ],
        [
            "This method grabs a list of officials according to office type and state representation.\n\n@param officeTypeId\n@param stateId\n@return {@link CandidateList}"
        ],
        [
            "This method grabs a list of officials according to the zip code they represent.\n\n@param zip5\n@return {@link CandidateList}"
        ],
        [
            "This method grabs the extended bio for each candidate that has one.\n\n@param candidateId\n@return {@link AddlBio}: Additional items in a list."
        ],
        [
            "This method grabs the extended bio for each candidate that has one.\nIt uses the updated version 'getDetailedBio' of the call.\n\n@param candidateId\n@return {@link AddlBio}: Additional items in a list."
        ],
        [
            "This method grabs a list of candidates according to a lastname match.\n\n@param lastName\n@param electionYear\n@return {@link CandidateList}: list of detailed candidate information."
        ],
        [
            "This method grabs a list of candidates according to a fuzzy lastname match.\n\n@param electionId\n@return {@link CandidateList}: list of detailed candidate information."
        ],
        [
            "This method grabs a list of candidates according to the district they represent.\n\n@param districtId\n@param electionYear\n@return {@link CandidateList}: list of detailed candidate information."
        ],
        [
            "Returns the list of committees that fit the criteria.\n\n@param typeId\n@return {@link Committees}:"
        ],
        [
            "Returns detailed committee data.\n\n@param committeeId\n@return {@link Committee}:"
        ],
        [
            "Returns members of the committee.\n\n@param committeeId\n@return {@link CommitteeMembers}:"
        ],
        [
            "Gets leadership positions by state and office.\n\n@param stateId\n@return {@link Leadership}:"
        ],
        [
            "Gets officials that hold the leadership role in certain states.\n\n@param leadershipId\n@return {@link Leaders}:"
        ],
        [
            "Sleeps for the provided amount of milliseconds, ignoring thread\ninterrupts.\n\n@param ms\nhow many milliseconds to sleep"
        ],
        [
            "Starts generating tick events, starting from 0. This method must not be\ncalled when the tick source is already running."
        ],
        [
            "Waits until the gobbler finished. If the gobbler encountered any\nexception, it is thrown from this method.\n\n@throws Throwable\nif the gobbler has thrown an exception"
        ],
        [
            "Interrupts the gobbler and closes its streams."
        ],
        [
            "Merging single level aggregation maps\n\n@param stream        source to merge\n@param mergeFunction operation\n@param mapSupplier   new map supplier\n@param <K>           type of key\n@param <V>           type of value\n@param <M>           type of map supplier\n@return new merged map"
        ],
        [
            "Splits map to list of maps\n@param map to be split\n@param limit max number of items in splitted map\n@param <K> key type\n@param <V> value type\n@return list of maps"
        ],
        [
            "Collector splitting map into seperate maps\n@param limit max number of items in slitted map\n@param <K> key type\n@param <V> value type\n@return collected map with size less or equal to limit"
        ],
        [
            "Sorts map with comparator\n\n@param map        to be sorted\n@param comparator to apply\n@param <K>        type of key\n@param <V>        type of value\n@return sorted map (LinkedHashMap)"
        ],
        [
            "Returns first value in map as given by the iterator or null if empty\n\n@param map to get first value out\n@param <T> object type of result\n@return first value in map or null if null or empty"
        ],
        [
            "Tests if object is null\n\n@param test    must be null\n@param message to return in exception\n@param <T>     object type\n@throws IllegalArgumentException if object != null"
        ],
        [
            "Tests if object is != null\n\n@param test    must not be null\n@param message to return in exception\n@param <T>     object type\n@throws IllegalArgumentException if object == null"
        ],
        [
            "Tests if String is null or empty when trimmed\n\n@param value   must be non empty string\n@param message to return in exception\n@throws IllegalArgumentException if value == null, value == \"\" or value.trim() == \"\""
        ],
        [
            "Tests if set is null or empty\n\n@param set     must be null or empty\n@param message to return in exception\n@param <T>     object type\n@throws IllegalArgumentException if list != null or list.size() greater than 0"
        ],
        [
            "Tests if array is null or empty\n\n@param array   must be null or empty\n@param message to return in exception\n@param <T>     object type\n@throws IllegalArgumentException if list != null or list.size() greater than 0"
        ],
        [
            "Loads class resource to String\n\n@param resourceFile to read\n@param clazz        to use for resource access\n@return String representing the resource or null if resource could not be read"
        ],
        [
            "Loads resource as a set of Strings, where each word is added to the set\n\n@param resourceFile to read\n@param clazz        to use for resource access\n@return set of strings (lines) or null if resource could not be read"
        ],
        [
            "Get resource last modified date\n\n@param resourceFile to read\n@param clazz        to use for resource access\n@return last modified date or null if resource could not be read"
        ],
        [
            "Load input stream into string\n\n@param is       stream\n@param encoding to use when reading input stream\n@return String representation of given input"
        ],
        [
            "Load input stream into byte array\n\n@param is stream\n@return byte representation of given input"
        ],
        [
            "Reads file into String\n\n@param file to be read\n@return file content\n@throws IOException in case file does't exist or is not a file"
        ],
        [
            "Gets absolute file path of resource\n\n@param resource to get absolute file path for\n@param clazz    namespace holding resource\n@return file path if found\n@throws IllegalArgumentException if resource can not be found"
        ],
        [
            "Generates random string from ELEMENTS set of chars and numbers\n\n@param length desired length of key greater than 0\n@return random string of desired length (min 1, max 100 characters long)"
        ],
        [
            "Generates non negative long key of maximum length 18\n\n@param length desired length of key grater than 0 (must consider max possible length of a long value)\n@return long key (min 1, max 19 digits long)"
        ],
        [
            "joins two arrays and preserves array order\narray1 items are followed by array2 items as given\n@param array1 first array\n@param array2 second array\n@param <T> class type of object in arrays\n@return joined array holding both arrays in same order as given"
        ],
        [
            "Splits set in 1..N chunks of maxSize or less\n\n@param set     to be spitted\n@param maxSize of a given chunk\n@param <T>     type of class in set\n@return list of sets containing all elements of original set without duplicates"
        ],
        [
            "Gets first millisecond of first day in month\n\n@param time to get first millisecond\n@return first millisecond of month for given time"
        ],
        [
            "Returns last millisecond of last day in month ... +1 = next first day in month\n\n@param time to get last second in month\n@return last millisecond of month for given time"
        ],
        [
            "Trims down text to null if empty\n\n@param text to be trimmed\n@return text or null if empty"
        ],
        [
            "Capitalizes first character in given string\n\n@param input to capitalize first character\n@return capitalized string or null if null"
        ],
        [
            "Joins array of objects into string, where items are separated\nwith a defined separator.\n\n@param args      array of Object\n@param separator to be used between elements\n@return items joined into a single string"
        ],
        [
            "Joins set of items to a single string, where items are separated\nwith a defined separator.\n\n@param items     to join into string\n@param separator to be used between elements\n@return items joined into a single string"
        ],
        [
            "Extracts words from text removing non alpha characters\n\n@param text to extract words from\n@return list of found words or empty list if none found"
        ],
        [
            "Reduces text to max given size preserving words\n\n@param text to trim down\n@param size max desired size\n@return trimmed down text with \"...\" or original text if fitting size"
        ],
        [
            "Reduces text size to a given size\n\n@param text            to reduce\n@param sizeMinusAppend size final string should be max long\n@param append          string to append at the end to indicate trimming\n@return trimmed text with appended text of given max size, or original text if shorter than desired"
        ],
        [
            "Converts text to list of characters\n\n@param text to be converted\n@return list of characters"
        ],
        [
            "Calculates matching relevance between given string and search expression\n\n@param value  to search in\n@param search to search for\n@return -1 not relevant, 0..N - where lower values represents more relevant results"
        ],
        [
            "Removes double or single quotes if any are present\n\n@param text to remove double quotes from\n@return un quoted string"
        ],
        [
            "Returns time for given time zone\n@param time current time\n@param timezone time zone (-12 / +12)\n@return time in other time zone"
        ],
        [
            "Loops through the FilterTags held by this Filter, and returns the state of the tag if it exists, and -1 if it does not.\n\n@param tagID The id of the tag to get the state of\n@return -1 if the tag was not found, otherwise the state of the tag"
        ],
        [
            "Checks if the given severity is considered a violation.\n\n@param severity The severity to check\n@return <code>true</code> if the given severity is a violation, otherwise <code>false</code>"
        ],
        [
            "Render a simple icon of given level.\n\n@param level one of <code>INFO</code>, <code>WARNING</code> or <code>ERROR</code> constants"
        ],
        [
            "Render an icon of given level with associated text.\n\n@param level    one of <code>INFO</code>, <code>WARNING</code> or <code>ERROR</code> constants\n@param textType one of <code>NO_TEXT</code>, <code>TEXT_SIMPLE</code>, <code>TEXT_TITLE</code> or\n<code>TEXT_ABBREV</code> constants"
        ],
        [
            "Generates a HTML formatted and categorized list of the tags that are associated with this topic\n\n@return A HTML String to display in a table"
        ],
        [
            "Sets the Next Node and cleans up any old references.\n\n@param next The next node."
        ],
        [
            "Sets the Previous Node and cleans up any old references.\n\n@param previous The previous node."
        ],
        [
            "Finds the node by host and port.\n\n@param host\n- the host.\n@param port\n- the port.\n@return - the found node, or null otherwise."
        ],
        [
            "Finds the set of nodes by host.\n\n@param host\n- the host.\n@return - the found nodes."
        ],
        [
            "Gets all the nodes not in status DEAD.\n\n@return - all the nodes not in status DEAD."
        ],
        [
            "Adds one more node to the container.\n\n@param node\n- the node."
        ],
        [
            "Removes the specified node.\n\n@param node\n- the node."
        ],
        [
            "Marks the node as ALIVE in case of its status is not ALIVE.\n\n@param node\n- the node."
        ],
        [
            "Marks the node as DEAD in case of its status is not DEAD.\n\n@param node\n- the node."
        ],
        [
            "Sends the event to all the handlers.\n\n@param node\n- the event node.\n@param type\n- the event type."
        ],
        [
            "Get the effective Checkstyle version at runtime.\n\n@return the MANIFEST implementation version of Checkstyle API package (can be <code>null</code>)\n@todo Copied from CheckstyleReportGenerator - move to a utility class"
        ],
        [
            "Configures search paths in the resource locator.\nThis method should only be called once per execution.\n\n@param request executor request data."
        ],
        [
            "Build object.\n@return"
        ],
        [
            "Merge passed attributes with the supplied property values.\n@param defaultPropertyValues\n@param attributes\n@return"
        ],
        [
            "Retrieve the current sequence value for the given property.\n@param name name of the property that should be assigned the sequence value.\n@return The current value of the referenced sequence."
        ],
        [
            "Compares the supplied NodeID to this one.\n\n@param that A NodeID to compare to this one.\n@return THe difference in"
        ],
        [
            "Gets the copy of the buffer and clears the buffer.\n\n@return - the copy of events since the last call of this method."
        ],
        [
            "Finds all PackageDoc objects from the classes in this JavaDoc execution.\n\n@return a non-null (but possibly empty) SortedSet containing all {@link PackageDoc}s from the current execution."
        ],
        [
            "Set the property identified by name to the provided value.\n@param target\n@param name\n@param value\n@return true on success, false if property wasn't found."
        ],
        [
            "Set the field identified by name to the given value.\n@param target\n@param name\n@param value\n@return true on success, false if field wasn't found."
        ],
        [
            "Get all methods on the given class that are annotated with the given annotation type.\n@param targetClass\n@param annotationType\n@return"
        ],
        [
            "Invoke the given method on the given target using the given arguments.\nAllows to call private and protected methods.\n@throws RuntimeException if method could not be invoked.\n@param target\n@param method\n@param arguments"
        ],
        [
            "Server entry point.\n\n@param args\nof type String[]"
        ],
        [
            "Get the value of the specified attribute from the Checkstyle configuration.\nIf parentConfigurations is non-null and non-empty, the parent\nconfigurations are searched if the attribute cannot be found in the\ncurrent configuration. If the attribute is still not found, the\nspecified default value will be returned.\n\n@param config              The current Checkstyle configuration\n@param parentConfiguration The configuration of the parent of the current configuration\n@param attributeName       The name of the attribute\n@param defaultValue        The default value to use if the attribute cannot be found in any configuration\n@return The value of the specified attribute"
        ],
        [
            "Create the rules summary section of the report.\n\n@param results The results to summarize"
        ],
        [
            "Check if a violation matches a rule.\n\n@param event            the violation to check\n@param ruleName         The name of the rule\n@param expectedMessage  A message that, if it's not null, will be matched to the message from the violation\n@param expectedSeverity A severity that, if it's not null, will be matched to the severity from the violation\n@return The number of rule violations"
        ],
        [
            "Creates the receivedAt key\n\n@param fromClusterName\n- the name of cluster from which the entry received\n@param toClusterName\n- the name of cluster on which the entry received\n@return - the receivedAt key"
        ],
        [
            "Initializes the technical region"
        ],
        [
            "Wait until the other clients started"
        ],
        [
            "Wait until received all the entries from other clients. Put the\nreceivedAt entries to cache."
        ],
        [
            "Wait until all the clients received all the receivedAt entries."
        ],
        [
            "Waits for processing finished.\n\n@param timeout\n- the timeout in milliseconds\n@return - true if the connection process finished successfully, false\notherwise"
        ],
        [
            "Finalizes work with the guest node"
        ],
        [
            "Prints the current state of connections\n\n@param connected"
        ],
        [
            "Configures and starts the guest node\n\n@param args\n- the configuration arguments"
        ],
        [
            "Returns properties in \"natural\" order, i.e. &quot;ORDER BY VERSION, DECLARING CLASS, NAME&quot;\n\n@return"
        ],
        [
            "Returns a hash code of class model for specified bean version based on fields that this model contains.\n\n@param version bean version to get metadata hashcode.\n@return the hashcode (16bits)"
        ],
        [
            "Returns a total number of query pages.\n\n@return total number of pages\n@throws com.gemstone.gemfire.cache.query.QueryException\nduring query execution"
        ],
        [
            "Returns values for given keys.\n\n@param entriesKeysForPage\nof type List<Object>\n@return List<V>"
        ],
        [
            "Stores paginated query info if it has not been stored yet.\n\n@param force\n\n@throws com.gemstone.gemfire.cache.query.QueryException\nduring query execution"
        ],
        [
            "Stores paginated query pages and general info.\n\n@param resultKeys\nof type List<Object>"
        ],
        [
            "Create an object with the given attributes.\nFirst builds the object, than persists it.\n@param attributes\n@return"
        ],
        [
            "Sorting order is preferentially used to sort TagToCategory's, or the name of the Tag that\nthe TagToCategory's point to are used if both TagToCategory's sorting orders are null."
        ],
        [
            "Migrates locales from a very early version of PressGang that was using the wrong locale value.\n\n@param preparedStmt\n@param localeMap\n@throws SQLException"
        ],
        [
            "Recalculate the min hash signature for a topic.\n@param topic The topic to generate a signature for\n@param minHashXORs The list of XOR values to apply to the hash code\n@return true if the minhashes were updated, false otherwise"
        ],
        [
            "Generate the min hashes\n@param xml The content to apply the signature to\n@param minHashXORs The list of XOR values to apply to the hash code\n@return"
        ],
        [
            "Cleans the provided XML by removing element names and other useless data.\n\n@param xml The xml to be cleaned.\n@return The cleaned xml."
        ],
        [
            "Validate and Fix a topics relationships to ensure that the topics related topics are still matched by the Related Topics\nthemselves.\n\n@param topic The topic to validate and fix the relationships for."
        ],
        [
            "Set the content hash on the topic.\n@param topic The topic to update"
        ],
        [
            "Validate and Fix a topics tags so that mutually exclusive tags are enforced and also remove any tags that may have been\nduplicated.\n\n@param topic The topic to fix the tags for."
        ],
        [
            "Sorts all given ClassDocs into a SortedMap keyed by their respective PackageDocs.\n\n@param classDocs an array of ClassDoc objects.\n@return A SortedMap relating all ClassDocs to their respective PackageDoc."
        ],
        [
            "This is the interface into the rule. This method should throw an exception\ncontaining a reason message if the rule fails the check. The plugin will\nthen decide based on the fail flag if it should stop or just log the\nmessage as a warning.\n\n@param helper The helper provides access to the log, MavenSession and has\nhelpers to get common components. It is also able to lookup components\nby class name.\n@throws org.apache.maven.enforcer.rule.api.EnforcerRuleException the enforcer rule exception"
        ],
        [
            "Helper method which splices the provided string into a List, separating on commas.\n\n@param toSplice The string to splice\n@return A list holding the elements of the spliced string."
        ],
        [
            "Helper method which splices the provided String into a List of Pattern instances.\n\n@param toSplice The string to splice\n@return A List holding the elements of the spliced string, converted to Patterns\n@throws PatternSyntaxException if the {@code Pattern.compile} method could not compile the provided string."
        ],
        [
            "Checks if any element within source startsWith the provided toCheck string.\n\n@param source  The list of strings which could possibly contain toCheck.\n@param toCheck The string to validate.\n@return <code>true</code> if any element within source returns true to\n<code>toCheck.startsWith(element)</code>."
        ],
        [
            "Get the class of the Factory for the given factoryClass.\n@param factoryClass\n@return"
        ],
        [
            "Sends email with subject and content to receivers specified in property file after key \"mail.to\"\n\n@param subject - the subject\n@param content - the content\n@throws MessagingException"
        ],
        [
            "Sends email with subject and content to receivers specified by argument \"to\"\n\n@param subject - the subject\n@param content - the content\n@param to - the CSV list of receivers\n@throws MessagingException"
        ],
        [
            "Executes the \"zero\" function using pool for the concrete server.\n\n@param pool\n- the pool for the concrete server\n@return 0 in case of function executed without problems, -1 otherwise\n@throws FunctionException\n@throws InterruptedException"
        ],
        [
            "Executes query using arguments query string and query parameters.\n\n@param functionContext Function context."
        ],
        [
            "Handles exceptions during query execution.\n\n@param e Exception to handle.\n@param resultSender of type ResultSender<Serializable>"
        ],
        [
            "Formats results of query execution.\n\n@param selectResults of type SelectResults\n@return List<Object>"
        ],
        [
            "Adds the provided error message to this ErrorMessageContainer.\n\n@param message The message to add, provided that the message is neither null nor empty."
        ],
        [
            "Returns the detail message string of this throwable.\n\n@return the detail message string of this <tt>Throwable</tt> instance (which may be <tt>null</tt>)."
        ],
        [
            "Checks if the socket of specified host and port is alive.\n\n@param host\n- the host.\n@param port\n- the port.\n@return - true if alive, false otherwise."
        ],
        [
            "Executes the thread with specified timeout.\n\n@param thread\n- the thread to execute.\n@param timeout\n- the timeout."
        ],
        [
            "Check if any of the resources exist.\n\n@param resources The resources to check\n@return <code>true</code> if the resource directory exist"
        ],
        [
            "Merge in the deprecated parameters to the new ones, unless the new\nparameters have values.\n\n@throws MavenReportException\n@deprecated Remove when deprecated params are removed."
        ],
        [
            "Limits query results.\n\n@param queryString\nQuery string.\n@return Query string with injected \"LIMIT\" clause."
        ],
        [
            "Returns first locator host and port from locators string.\n\n@param locatorsString\nof type String\n@return String[0] - locator host String[1] - locator port"
        ],
        [
            "Returns approximate number of entries in the region. As the function\ncounts number of entries on different nodes in parallel, per node values\nmay be captured on different moments. So the value may never be valid.\n\n@param region\nthe region.\n@returns approximate number of objects in the given region."
        ],
        [
            "Checks if the current GemFire is a client instance.\n\n@return true if the cache instance is client."
        ],
        [
            "Removes several entries from region in a single hop. On partitioned\nregion execution is done simultaneously on all partitions.\n\n@param <K>\nkey type.\n@param region\nthe region to remove entries.\n@param keys\nthe keys of entries to remove."
        ],
        [
            "Retries passed operation with random exponential back off delay.\n\n@param <T>\nType of returned value.\n@param runnable\nthe operation.\n@param maxRetries\nthe maximum number of retries.\n@return the value returned by operation\n@throws OperationRetryFailedException\n@throws InterruptedException"
        ],
        [
            "Generate the BufferedImage."
        ],
        [
            "Draw the icon at the specified location."
        ],
        [
            "Method getReader returns the reader of this ConsoleUtils object.\n\n@return the reader (type BufferedReader) of this ConsoleUtils object."
        ],
        [
            "Waits for enter with specified message.\n\n@param message of type String"
        ],
        [
            "Runs the tool. All the tools run in this way."
        ],
        [
            "Parses command-line arguments and sets the local variables\n\n@param commandLineArguments\n- the list of command-line arguments"
        ],
        [
            "Prints help if requested, or in case of any misconfiguration\n\n@param options\n- the GNU options"
        ],
        [
            "Constructs the set of GNU options\n\n@return - the constructed options"
        ],
        [
            "only for partitioned region!"
        ],
        [
            "Adds a description for a null property.\n\n@param property The property to check.\n@param name     The property name.\n@return This object."
        ],
        [
            "Parses command line arguments.\n\n@param commandLineArguments\n- The arguments."
        ],
        [
            "Prints help if requested.\n\n@param options\n- The GNU options."
        ],
        [
            "Constructs the set of GNU options.\n\n@return - The constructed options."
        ],
        [
            "Looks for the index of command in the specified array.\n\n@param args\n- Arguments.\n@return - Index of command, or -1 if command is not found in the array."
        ],
        [
            "Extracts the launcher arguments from the all arguments array.\n\n@param args\n- All arguments.\n@param commandIndex\n- Index of the command.\n@return - Launcher arguments."
        ],
        [
            "Extracts the command-specific arguments from the all arguments array.\n\n@param args\n- All arguments.\n@param commandIndex\n- Index of the command.\n@return - Command-specific arguments."
        ],
        [
            "The entry point of the application.\n\n@param args\n- All arguments.\n@throws Exception"
        ],
        [
            "Prints debug information if debug is enabled.\n\n@param message\n- Debug message.\n@param t\n- Instance of Throwable."
        ],
        [
            "Starts the checking task"
        ],
        [
            "Creates regions structure similar to server region structure.\n\n@param regionNames names of the regions to reconstruct.\n@return set of created regions."
        ],
        [
            "Applies the specified policy on the specified region and returns number\nof destroyed entries.\n\n@param region\n- the region\n@param policy\n- the expiration policy\n@return - the number of destroyed region entries"
        ],
        [
            "Assigns the indentationToken of this RenderConfiguration.\n\n@param indentationToken the indentationToken of this RenderConfiguration. Cannot be null or empty."
        ],
        [
            "Retrieves the package definition from the supplied sourceFile.\n\n@param sourceFile The sourceFile from which the package definition should be extracted.\n@return The package of the sourceFile."
        ],
        [
            "Generate documentation here.\nThis method is required for all doclets.\n\n@return true on success."
        ],
        [
            "Extracts port from the SystemMember object.\n\n@param member\n- the specified SystemMember\n@return - port if its found, -1 otherwise\n@throws AdminException"
        ],
        [
            "Looks for the existing pool with name poolFactory. If there is no such\npool, creates new one.\n\n@param host\n- the concrete server's host\n@param port\n- the concrete server's port\n@return found or new pool for the specified parameters"
        ],
        [
            "Get the rule name from an audit event source name.\n\n@param eventSrcName the audit event source name\n@return the rule name, which is the class name without package and removed eventual \"Check\" suffix"
        ],
        [
            "Get the rule category from an audit event source name.\n\n@param eventSrcName the audit event source name\n@return the rule category, which is the last package name or \"misc\" or \"extension\""
        ],
        [
            "Increment the counter.\n@param className name of class to enter."
        ],
        [
            "Decrement the counter and remove class name from the list.\n@param className name of class to exit from."
        ],
        [
            "Creates string with all classes that have been entered by method frame counter.\n@return String"
        ],
        [
            "Splices the supplied packageExtractorImplementations argument, which is assumed to be a comma-separated\nstring holding fully qualified class names of the PackageExtractor implementations which should be used\nby this CorrectPackagingRule.\n\n@param packageExtractorImplementations a comma-separated string holding fully qualified class names of the\nPackageExtractor implementations. Each such class must have a default\n(i.e. no-argument) constructor.\n@throws IllegalArgumentException if the supplied packageExtractorImplementations argument could not yield an\ninstantiated PackageExtractor instance."
        ],
        [
            "Adds all source file found by recursive search under sourceRoot to the\ntoPopulate List, using a width-first approach.\n\n@param fileOrDirectory      The file or directory to search for packages and [if a directory] recursively\nsearch for further source files.\n@param package2FileNamesMap A Map relating package names extracted by the PackageExtractors."
        ],
        [
            "Create the thumbnails, and make sure the parent imagefile is valid.\n\n@throws CustomConstraintViolationException"
        ],
        [
            "The UI will attempt to assign an empty value if the file upload box does not have a file selected. This method is used to\nignore any empty values, while passing through any legitimate file uploads. This means that the absence of a file in the\nupload box does not indicate that no file should be assigned to the entity.\n\n@param uiOriginalFileName The image file name uploaded through the UI"
        ],
        [
            "Extracts limit value from query string.\n\n@param queryString OQL query string.\n@return Value of 'limit' clause."
        ],
        [
            "Collects and formats query results into SelectResults. Limits query results based on limit value.\n\n@param queryResults Query results from several nodes.\n@param limit Query results limit.\n@return Aggregated query results represented by instance of {@link SelectResults}."
        ],
        [
            "With stack counter\n\n@param obj\n@param depth of\n@throws InvalidClassException"
        ],
        [
            "Runs process based on a specified class in a separate VM using array of\narguments. To confirm that process completes startup it should write a\nstartup completed string into it's standard output.\n\n@param id\nthe process identifier.\n@param klass\nof type Class.\n@param javaArguments\narguments for java.\n@param processArguments\narguments for process.\n\n@return Process the started process.\n@throws IOException\nwhen\n@throws InterruptedException\nwhen"
        ],
        [
            "Runs process with arguments based on a specified class in a separate VM.\nWaits DEFAULT_PROCESS_STARTUP_TIME before returns the created process to\na caller.\n\n@param klass\nof type Class\n@param javaArguments\narguments for java\n@param processArguments\narguments for process\n@return Process\n@throws IOException\nwhen\n@throws InterruptedException\nwhen\n@throws TimeoutException\nwhen"
        ],
        [
            "Runs process with arguments based on a specified class in a separate VM.\nWaits processStartupTime before returns the created process to a caller.\n\n@param klass\nof type Class\n@param processStartupTime\ntime in milliseconds that launcher spend on waiting process\nafter it's start.\n@param javaArguments\narguments for java\n@param processArguments\narguments for process\n@return Process\n@throws IOException\nwhen\n@throws InterruptedException\nwhen\n@throws TimeoutException\nif process startup is not completed in time."
        ],
        [
            "Stops process by sending new line to it's output stream.\n\nThe process can be stopped by calling destroy() method.\n\n@param process\nof type Process\n@throws IOException\nwhen\n@throws InterruptedException"
        ],
        [
            "Starts process based on specified class using command line arguments.\nThis process inherits a classpath from parent VM that starts it.\n\n@param klass\nof type Class\n@param javaArguments\nof type String[]\n@param processArguments\nof type String[]\n@param withConfirmation\nof type boolean\n@return Process\n@throws IOException\nwhen\n@throws InterruptedException\nwhen"
        ],
        [
            "Redirects process standard output and error streams into parent process\nstandard output.\n\n@param klass\nof type Class\n@param process\nof type Process\n@param redirectProcessStdOut\nof type boolean"
        ],
        [
            "Waits startup complete confirmation from process.\n\n@param className\nof type String\n@param process\nof type Process\n@throws IOException\nwhen\n@throws InterruptedException\nwhen"
        ],
        [
            "Using a specified Velocity Template and provided context, create the outputFilename.\n\n@param outputFilename the file to be generated.\n@param template       the velocity template to use.\n@param context        the velocity context map.\n@throws VelocityException if the template was not found or any other Velocity exception.\n@throws MojoExecutionException\n@throws IOException"
        ],
        [
            "Creates, configures and runs the guest nodes and collects information\nform them\n\n@return - 0 in case of success, 1 otherwise\n\n@throws IOException\n@throws InterruptedException"
        ],
        [
            "Is the genericType of a certain class?"
        ],
        [
            "See if the two methods are compatible, that is they have the same\nrelative signature\n\n@param method\n@param intfMethod\n@return"
        ],
        [
            "Given a method and a root class, find the actual method declared in the\nroot that implements the method.\n\n@param clazz\n@param intfMethod\n@return"
        ],
        [
            "Returns the type argument from a parameterized type\n\n@param genericType\n@return null if there is no type parameter"
        ],
        [
            "Finds an actual value of a type variable. The method looks in a class\nhierarchy for a class defining the variable and returns the value if\npresent.\n\n@param root\n@param typeVariable\n@return actual type of the type variable"
        ],
        [
            "Given a class and an interfaces, go through the class hierarchy to find\nthe interface and return its type arguments.\n\n@param classToSearch\n@param interfaceToFind\n@return type arguments of the interface"
        ],
        [
            "Populate the pool up to minIdle instances. Is limited to maxIdle and maxActive.\n\n@throws Exception when could not borrow or return objects to the pool"
        ],
        [
            "Used for non exception return option\n\n@param method\n@param returnBuilder"
        ],
        [
            "Returns the given object to the pool.\n\n@param pool   The pool to where return the object to.\n@param object The object to be returned to the pool."
        ],
        [
            "Get the destination.\n\n@param destinationName destinationName\n@return JMS destination which is a queue or topic."
        ],
        [
            "Get the `MessageConsumer`.\n\n@param destinationName destinationName\n@return JMS `MessageConsumer`."
        ],
        [
            "Get the `MessageProducer` or create one from the JMS session.\n\n@param destinationName destinationName\n@return JMS `MessageProducer`."
        ],
        [
            "Get the current session or create one from the JMS connection.\n\n@return JMS Session"
        ],
        [
            "Get the current connection or create one using the connectionSupplier.\n\n@return JMS Connection"
        ],
        [
            "Send a text message given a queue or topic name and a text message.\n\n@param destinationName destinationName\n@param messageContent  messageContent"
        ],
        [
            "Listen to a message from JMS from a given destination by name.\n\n@param destinationName destinationName\n@param messageListener messageListener"
        ],
        [
            "Receive a message from  destination with timeout.\n\n@param destinationName destinationName\n@param timeout         timeout\n@return message"
        ],
        [
            "Stop the service"
        ],
        [
            "Handle defered recommendations based on user loads."
        ],
        [
            "Returns the pool configuration of the scorer.\n\n@return a map from configuration key to configuration value"
        ],
        [
            "Sets the ID of the model.\n\n@param id the ID"
        ],
        [
            "Sets the model file of the serialized classifier.\n\n@param model the model file"
        ],
        [
            "Adds the given model to the managed models.\n\n<p> If the provided model id already exists, then the older model is removed and the new one is instantiated.\n\n@param wekaModelConfig the configuration of the new model\n@throws FOSException when the new model could not be instantiated"
        ],
        [
            "Removes the given model from the managed models.\n\n<p> If the model does not exist no exception will be thrown.\n\n@param modelId the id of the model to remove."
        ],
        [
            "The actual service queue for the clustered event bus.\nAll events are sent to this queue first.\n\n@param eventBusCluster actual event manager impl no proxy\n@return the service queue"
        ],
        [
            "Wraps factory method call so we can provide another implementation of interface if needed.\n\n@param eventConnectorHub the cluster of event connectors\n@return the event manager"
        ],
        [
            "Encode '%' if it is not an encoding sequence\n\n@param string\n@return"
        ],
        [
            "decode an encoded map\n\n@param map\n@return"
        ],
        [
            "Main method, creates API model from metadata\n\n@param resourceClasses\n@return"
        ],
        [
            "Will save the configuration to file.\n\n@throws FOSException when there are IO problems writing the configuration to file"
        ],
        [
            "This message receives an event from a remote call."
        ],
        [
            "Returns an array of annotations the specified method of a resource class.\n\n@param method\n@return"
        ],
        [
            "Look for an annotation in a list of annotations. If not there, see if it\nis on the type provided\n\n@param type\n@param annotations\n@param annnotation\n@return"
        ],
        [
            "Picks a constructor from an annotated resource class based on spec rules\n\n@param annotatedResourceClass\n@return"
        ],
        [
            "Build metadata from annotations on classes and methods\n\n@return"
        ],
        [
            "Sets the classifiers in a bagging.\n\n@param bagging The bag for which to set the classifiers.\n@throws Exception If it fails to set the classifiers."
        ],
        [
            "Gets a fresh clone of the object.\n\n@return a fresh clone\n@throws IOException            when there were problems serializing the object\n@throws ClassNotFoundException when the serialized objects's class was not found"
        ],
        [
            "Returns a copy of the serialized object.\n\n@return a copy (this object is immutable)"
        ],
        [
            "Writes the serialized object to file.\n\n@param file the file to write to (will be overwritten)\n@throws IOException when the file could not be written"
        ],
        [
            "Retrieves a String representing the score of the given class distribution.\n\n@param classDistribution The class distribution to calculate a score for.\n@param instances         The header {@link weka.core.Instances}.\n@return A String representing the score of the given class distribution."
        ],
        [
            "If null, will build based on host, port and provider url pattern.\n\n@return providerURL\n@see JmsServiceBuilder#providerURL"
        ],
        [
            "Gets the initial JNDI context, if not set uses the jndi settings and `initialContextFactory` to create\na JNDI initial context.\n\n@return JNDI initial context.\n@see JmsServiceBuilder#context\n@see JmsServiceBuilder#initialContextFactory\n@see JmsServiceBuilder#jndiSettings"
        ],
        [
            "If the user name is set, use the user name and password to create the JMS connection.\n\n@return connection supplier\n@see JmsServiceBuilder#connectionSupplier"
        ],
        [
            "Build JMS Service\n\n@return new JMS Service"
        ],
        [
            "From Jackson type creates a JRAPIDoc type, type is stored in cache\n\n@param jacksonType\n@return"
        ],
        [
            "Do redirection from general Jackson type to the concrete one\n\n@param type\njackson type\n@return JRAPIDoc type"
        ],
        [
            "Do redirection from general Jackson serializer to the concrete one\n\n@param serializer\n@param type"
        ],
        [
            "Introspect serializer for java beans\n\n@param beanSerializer\n@param type"
        ],
        [
            "Introspect serializer for enumerations\n\n@param enumSerializer\n@param type"
        ],
        [
            "Introspect serializer for map\n\n@param mapSerializer\n@param type"
        ],
        [
            "Get customer, customer account, and broker information"
        ],
        [
            "Estimate overall effects of the trade"
        ],
        [
            "Record the trade request by making all related updates"
        ],
        [
            "It produces the next random permutation"
        ],
        [
            "Not repeat, randomly choose a number from 1 to the initinalized size"
        ],
        [
            "a main application for debugging"
        ],
        [
            "Return a last name as defined by TPC-C 4.3.2.3."
        ],
        [
            "Return the result of a random choose from a given distribution.\n\n@param probs\n@return"
        ],
        [
            "Returns a file, with path relative to git working tree\n\n@param in\ninput <code>File</code> object\nrepositoryPath\npath to git repository\n@return\n<code>File</code> object with relative path\n@throws JavaGitException\ninput file does not belong to git working tree/ repo"
        ],
        [
            "Adds the object to the git index\n\n@return response from git add"
        ],
        [
            "Commits the file system object\n\n@param comment\nDeveloper's comment\n\n@return response from git commit"
        ],
        [
            "Moves or renames the object\n\n@param dest\ndestination path (relative to the Git Repository)\n\n@return response from git mv"
        ],
        [
            "Removes the file system object from the working tree and the index\n\n@return response from git rm"
        ],
        [
            "Checks that the specified file exists.\n\n@param file\nFile or directory path"
        ],
        [
            "Checks if two unordered lists are equal.\n\n@param l1\nThe first list to test.\n@param l2\nThe second list to test.\n@return True if:\n<ul>\n<li>both lists are null or</li>\n<li>both lists are the same length, there exists an equivalent object in l2 for all\nobjects in l1, and there exists an equivalent object in l1 for all objects in l2</li>\n</ul>\nFalse otherwise."
        ],
        [
            "A general range check utility for checking whether a given &lt;integer&gt; value is between a\ngiven start and end indexes. This is a helper method for other methods such as\ncheckIntIndexInListRange or can also be used independently by external objects.\n\n@param index\nGiven index that is being checked for validity between start and end.\n@param start\nindex should be greater than or equal to start.\n@param end\nindex should be less than end."
        ],
        [
            "Gets an instance of the specified client type.\n\n@param clientType\nThe type of client to get.\n@return An instance of the specified client type."
        ],
        [
            "Sets the preferred client type.\n\n@param preferredClientType\nThe type to set as the preferred client type. If the value is null, then the preferred\nclient type is set to <code>ClientType.CLI</code>."
        ],
        [
            "Implementations of &lt;git-add&gt; with options and list of files provided."
        ],
        [
            "Adds a list of files with no GitAddOptions."
        ],
        [
            "Adds one file to the index with no GitAddOptions."
        ],
        [
            "Implementations of &lt;git-add&gt; with options and one file to be added to index."
        ],
        [
            "Implementation of &lt;git-add&gt; dry run."
        ],
        [
            "Implementations of &lt;git-add&gt; in verbose mode."
        ],
        [
            "Implementations of &lt;git-add&gt; with force option set."
        ],
        [
            "if the dry run option was selected then set the flag in response.\n\n@param options  <code>GitAddOptions</code>\n@param response <code>gitAddResponse</code>"
        ],
        [
            "Compares minor releases values given that git version contains no tag\nfor none of GitVersion objects\n\n@param that\n@return  SAME if both are equal, LATER if that is previous to this or PREVIOUS otherwise"
        ],
        [
            "This command adds the current content of new or modified files to the index, thus staging that\ncontent for inclusion in the next commit.\n\n@param repositoryPath\nThe path to the repository to commit against. A non-zero length argument is required\nfor this parameter, otherwise a <code>NullPointerException</code> or\n<code>IllegalArgumentException</code> will be thrown.\n@param options\nGitAddOptions that are passed to the &lt;git-add&gt; command.\n@param paths\nList of file paths that will be added to the index.\n@return GitAddResponse Response generated by the add command.\n@exception IOException\nThere are many reasons for which an <code>IOException</code> may be thrown if -\n<ul>\n<li>repositoryPath is not valid</li>\n<li>filenames assigned do not exist</li>\n<li>files or repository path does not have access rights</li>\n</ul>\n@exception JavaGitException\nException thrown\n<ul>\n<li>if the repositoryPath is null.</li>\n<li>if the &lt;git-add&gt; command generates error.</li>\n</ul>"
        ],
        [
            "This command adds the current content of new or modified files to the index, with verbose\noption set.\n\n@param repositoryPath\nThe path to the repository to commit against. A non-zero length argument is required\nfor this parameter, otherwise a <code>NullPointerException</code> or\n<code>IllegalArgumentException</code> will be thrown.\n@param paths\nList of file paths that will be added to the index.\n@return GitAddResponse Response generated by the add command.\n@exception IOException\nThere are many reasons for which an <code>IOException</code> may be thrown if -\n<ul>\n<li>repositoryPath is not valid</li>\n<li>filenames assigned do not exist</li>\n<li>files or repository path does not have access rights</li>\n</ul>\n@exception JavaGitException\nException thrown\n<ul>\n<li>if the repositoryPath is null.</li>\n<li>if the &lt;git-add&gt; command generates error.</li>\n</ul>"
        ],
        [
            "Processes the commit.\n\n@param repository A <code>File</code> instance for the path to the repository root (the parent\ndirectory of the .git directory) or a sub-directory in the working tree of the\nrepository to commit against. This argument must represent the absolute path to the\ndesired directory as returned by the <code>File.getPath()</code> method. If null is\npassed, a <code>NullPointerException</code> will be thrown.\n@param options    The options to commit with.\n@param message    The message to attach to the commit. A non-zero length argument is required for this\nparameter, otherwise a <code>NullPointerException</code> or\n<code>IllegalArgumentException</code> will be thrown.\n@param paths      A list of folders and/or files to commit. The paths specified in this list must all be\nrelative to the path specified in the <code>repository</code> parameter as returned\nby <code>File.getPath()</code>.\n@return The results from the commit.\n@throws IOException      There are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@throws JavaGitException Thrown when there is an error making the commit."
        ],
        [
            "Called when client code wants to explicitly tell us where to find git on their filesystem. If\nnever called, we assume that git is in a directory in the PATH environment variable for this\nprocess. Passing null as the path argument will unset an explicitly-set path and revert to\nlooking for git in the PATH.\n\n@param path\n<code>File</code> object representing the directory containing the git binaries. It\nmust contain either an absolute path, or a valid path relative to the current working\ndirectory.\n@throws IOException\nThrown if the provided path does not exist.\n@throws JavaGitException\nThrown if git does not exist at the provided path, or the provided path is not a\ndirectory."
        ],
        [
            "Creates the list of BinderVariables given a method obtained through\nreflection.\n\n@param method\nThe method\n@return The list of BinderVariables"
        ],
        [
            "Return the m_functionDefinition compatible array.\n\n@param maxParams\n@return"
        ],
        [
            "Returns an array of values given a filter execution context\n\n@param ws\nThe system workspace\n@param binder\nThe current binder\n@param ctx\nThe current execution context\n@return"
        ],
        [
            "Checks if there is a DotGit instance for a given path\n\n@param path\n<code>File</code> object representing the path to the repository.\n@return\ntrue if exits, false otherwise;"
        ],
        [
            "Creates a new branch\n\n@param name\nThe name of the branch to create\n\n@return The new branch"
        ],
        [
            "Deletes a branch\n\n@param branch\nThe branch to delete\n@param forceDelete\nTrue if force delete option -D should be used,\nfalse if -d should be used.\n@throws IOException\nThrown in case of I/O operation failure\n@throws JavaGitException\nThrown when there is an error executing git-branch."
        ],
        [
            "Renames a branch\n\n@param branchFrom\nThe branch to rename\n@param nameTo\nNew branch name\n@param forceRename\nTrue if force rename option -M should be used.\nFalse if -m should be used.\n@return new <code>Ref</code> instance\n@throws IOException\nThrown in case of I/O operation failure\n@throws JavaGitException\nThrown when there is an error executing git-branch."
        ],
        [
            "Gets a list of the branches in the repository.\n\n@return The branches in the repository."
        ],
        [
            "Automatically stage all tracked files that have been changed and then commit all files staged\nin the git repository's index.\n\n@param repository\nA <code>File</code> instance for the path to the repository root (the parent\ndirectory of the .git directory) or a sub-directory in the working tree of the\nrepository to commit against. This argument must represent the absolute path to the\ndesired directory as returned by the <code>File.getPath()</code> method. If null is\npassed, a <code>NullPointerException</code> will be thrown.\n@param message\nThe message to attach to the commit. A non-zero length argument is required for this\nparameter, otherwise a <code>NullPointerException</code> or\n<code>IllegalArgumentException</code> will be thrown.\n@return The results from the commit.\n@exception IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@exception JavaGitException\nThrown when there is an error making the commit."
        ],
        [
            "Convert the given object value to the given class.\n\n@param from\nThe object value to be converted.\n@param to\nThe type class which the given object should be converted to.\n@return The converted object value.\n@throws NullPointerException\nIf 'to' is null.\n@throws UnsupportedOperationException\nIf no suitable converter can be found.\n@throws RuntimeException\nIf conversion failed somehow. This can be caused by at least an\nExceptionInInitializerError, IllegalAccessException or\nInvocationTargetException."
        ],
        [
            "Converts Integer to Boolean. If integer value is 0, then return FALSE, else\nreturn TRUE.\n\n@param value\nThe Integer to be converted.\n@return The converted Boolean value."
        ],
        [
            "Converts Boolean to Integer. If boolean value is TRUE, then return 1, else\nreturn 0.\n\n@param value\nThe Boolean to be converted.\n@return The converted Integer value."
        ],
        [
            "Converts Date to String.\n\n@param value\nThe value to be converted.\n@return Converted value."
        ],
        [
            "Gets the error message for the specified code.\n\n@param code\nThe error code for which to get the associated error message.\n@return The error message for the specified code."
        ],
        [
            "Gets the file at the specified index from the list of files needing update.\n\n@param index\nThe index of the file to get. It must fall in the range:\n<code>0 &lt;= index &lt; getRemovedFilesSize()</code>.\n@return The file at the specified index."
        ],
        [
            "Adds a file to list of files that are deleted and will be committed next time\n&lt;git-commit&gt; is run.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Adds a file to the list of files that are deleted locally but not yet deleted from index using\n&lt;git-rm&gt; command.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Adds a file to list of files that are modified and will be committed next time\n&lt;git-commit&gt; is run.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Adds a file to the list of files that are modified files but not yet updated.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Adds a file to the list of new files that are ready to be committed next time &lt;git-commit&gt;\ncommand is run.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Adds a file to the list of renamed files that are ready to be committed next time &lt;git-commit&gt;\ncommand is run.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Adds a file to list of files that have been added locally but not yet added to the index.\n\n@param file\n<code>File</code> to be added to the list."
        ],
        [
            "Factory method to create the concrete variable type.\n\n@param name\nThe name in the binder of the variable.\n@return"
        ],
        [
            "Get the string value from binder."
        ],
        [
            "Checks whether the verbose option should be set and sets it.\n\n@param optVerbose\nTrue if the verbose option should be used, false otherwise."
        ],
        [
            "Checks whether the -d option should be set and sets it.\n\n@param optDLower True if the -d option should be used, false otherwise."
        ],
        [
            "Checks whether the -D option should be set and sets it.\n\n@param optDUpper True if the -D option should be used, false otherwise."
        ],
        [
            "Checks whether the -m option should be set and sets it.\n\n@param optMLower True if the -m option should be used, false otherwise."
        ],
        [
            "Checks whether the -M option should be set and sets it.\n\n@param optMUpper True if the -M option should be used, false otherwise."
        ],
        [
            "Get idoc function return type.\n\n@param m\n@return"
        ],
        [
            "This is where the custom IdocScript function is evaluated."
        ],
        [
            "Enumerates the correct parameters for the delegated method. Injects any\nautowired types if present in the method signature.\n\n@param method\n@param args\n@param ctx\n@return\n@throws IllegalArgumentException\n@throws ServiceException"
        ],
        [
            "Executes the annotated method.\n\n@param functionIndex\n@param args\n@param ctx\n@return\n@throws IllegalArgumentException\n@throws ServiceException\n@throws SecurityException\n@throws NoSuchMethodException\n@throws IllegalAccessException\n@throws InvocationTargetException"
        ],
        [
            "Convert the method return value into a PageMerger internal type of String,\nLong or Double\n\n@param result\n@return"
        ],
        [
            "This is where the custom IdocScript variable is evaluated."
        ],
        [
            "Does a basic git-branch without any options.\n\n@param repositoryPath\nA <code>File</code> instance for the path to the repository. If null is passed,\na <code>NullPointerException</code> will be thrown.\n@return The result of the git branch.\n@throws IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@throws JavaGitException\nThrown when there is an error executing git-branch."
        ],
        [
            "This method deletes the specified branch using the -d command line option.\n\n@param repositoryPath\nA <code>File</code> instance for the path to the repository. If null is passed,\na <code>NullPointerException</code> will be thrown.\n@param forceDelete\nTrue if force delete option -D should be used, false if -d should be used.\n@param remote\nTrue if delete branch should be acted upon a remote branch.\n@param branchName\nA branch to be deleted.\n@return The result of the git-branch with delete option.\n@throws IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@throws JavaGitException\nThrown when there is an error executing git-branch."
        ],
        [
            "Deletes the specified branches using the -d command line option.\n\n@param repositoryPath\nA <code>File</code> instance for the path to the repository. If null is passed,\na <code>NullPointerException</code> will be thrown.\n@param forceDelete\nTrue if force delete option -D should be used, false if -d should be used.\n@param remote\nTrue if delete branch should be acted upon a remote branch list.\n@param branchList\nThe list of branches to be deleted.\n@return The result of the git-branch with -d option.\n@throws IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@throws JavaGitException\nThrown when there is an error executing git-branch."
        ],
        [
            "Renames the current branch to new branch.\n\n@param repositoryPath\nA <code>File</code> instance for the path to the repository. If null is passed,\na <code>NullPointerException</code> will be thrown.\n@param forceRename\nTrue if force rename option -M should be used. False if -m should be used.\n@param newName\nWhen renaming the current branch to a new branch name, this is the new branch name.\n@return The result of the git branch with -m option.\n@throws IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@throws JavaGitException\nThrown when there is an error executing git-branch."
        ],
        [
            "Commits the objects specified in the index to the repository.\n\n@param comment\nDeveloper's comment about the change\n\n@return response from git commit"
        ],
        [
            "Gets the currently checked-out branch of the working directory.\n\n@return The currently checked-out branch of the working directory."
        ],
        [
            "Switches to a new branch\n\n@param ref\nGit branch/sha1 to switch to"
        ],
        [
            "Gets the status of all files in the working directory\n\n@return <code>GitStatusResponse</code> object\n@throws IOException\nException is thrown if any of the IO operations fail.\n@throws JavaGitException\nException thrown if the repositoryPath is null"
        ],
        [
            "Remove files relative to the path within the repository.\n\n@param repository\nA <code>File</code> instance for the path to the repository root (the parent\ndirectory of the .git directory) or a sub-directory in the working tree of the\nrepository to run rm against. This argument must represent the absolute path to the\ndesired directory as returned by the <code>File.getPath()</code> method. If null is\npassed, a <code>NullPointerException</code> will be thrown.\n@param path\nA single file to remove. The specified path must be relative to the path specified in\nthe <code>repository</code> parameter as returned by <code>File.getPath()</code>.\nIf null is passed, a <code>NullPointerException</code> will be thrown.\n@exception IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@exception JavaGitException\nThrown when there is an error making the commit."
        ],
        [
            "Get the name of the file from newFilesToCommit list at a given index.\n\n@param index\nIndex in the list must be positive and less than the number of new files to commit.\n@return the name of the file."
        ],
        [
            "Get the name of the deleted file that will be committed next time git-commit is executed\ncurrently located at the given index in the list.\n\n@param index\nIndex in the list must be positive and less than the number of new files to commit\n@return the name of the file."
        ],
        [
            "Get the name of the file that is modified and added to the repository by &lt;git-add&gt;\ncommand and will be committed to repository next time &lt;git-commit&gt; is executed. This file\nis at the given index in the list of the files.\n\n@param index\nIndex in the list of files must be positive and less than the number of new files to\ncommit\n@return the name of the file."
        ],
        [
            "Returns the name of the deleted file that is removed locally but not yet removed from\nrepository.\n\n@param index\nIndex in the list must be positive and less than the number of new files to commit\n@return the name of the file."
        ],
        [
            "Returns the name of the file that is existing in the repository and has been locally modified.\nThis file is one of the files that has been locally modified and is located at given index in\nthe list.\n\n@param index\nIndex in the list must be positive and less than the number of new files to commit\n@return the name of the file"
        ],
        [
            "Returns the name of the file at the specified index that has been created locally but has not\nyet been added to the repository by &lt;git-add&gt;.\n\n@param index\nIndex in the list must be positive and less than the number of new files to commit\n@return the name of the file"
        ],
        [
            "Returns the file at the specified index in the list of renamed files.\n\n@param index\nIndex in the list must be positive and less than the number of new files to commit\n@return the name of the file"
        ],
        [
            "Returns the error message otherwise returns null;\n\n@return error message"
        ],
        [
            "Gets all the errors generated by &lt;git-status&gt; command and returns them in String format.\n\n@return <code>String</code> errors concatenated together."
        ],
        [
            "Perform a reset on the repository. The results of this method are what one would get by running\n&quote;git-reset&quote; against the repository.\n\n@param repository\nA <code>File</code> instance for the path to the repository root (the parent\ndirectory of the .git directory) or a sub-directory in the working tree of the\nrepository to perform reset against. This argument must represent the absolute path to\nthe desired directory as returned by the <code>File.getPath()</code> method. If null\nis passed, a <code>NullPointerException</code> will be thrown.\n@return The results of the reset.\n@exception IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@exception JavaGitException\nThrown when there is an error making the commit."
        ],
        [
            "Add the information about a newly added file in the repository for a given commit.\n\n@param pathToFile\nThe path to the file from the root of the repository.\n@param mode\nThe mode of the file.\n@return False if the <code>pathToFile</code> is null or length zero. True otherwise."
        ],
        [
            "Add the information about a newly copied file in the repository for a given commit.\n\n@param sourceFilePath\nThe path to the source file.\n@param destinationFilePath\nThe path to the destination file.\n@param percentage\nThe percentage.\n@return False if <code>sourceFilePath</code> or <code>destinationFilePath</code> is null or\nlength zero. True otherwise."
        ],
        [
            "Add the information about a file deleted from the repository for a given commit.\n\n@param pathToFile\nThe path to the file from the root of the repository.\n@param mode\nThe mode of the file.\n@return False if the <code>pathToFile</code> is null or length zero. True otherwise."
        ],
        [
            "Sets the number of files changed during a commit.\n\n@param filesChangedStr\nThe number of files changed in <code>String</code> format.\n@return True if the <code>filesChangedStr</code> parameter is a <code>String</code>\nrepresenting a number. False if the <code>String</code> does not contain a parsable\ninteger."
        ],
        [
            "Sets the number of lines deleted in a commit.\n\n@param linesDeletedStr\nThe number of lines deleted in <code>String</code> format.\n@return True if the <code>linesDeletedStr</code> parameter is a <code>String</code>\nrepresenting a number. False if the <code>String</code> does not contain a parsable\ninteger."
        ],
        [
            "Sets the number of lines inserted in a commit.\n\n@param linesInsertedStr\nThe number of lines inserted in <code>String</code> format.\n@return True if the <code>linesInsertedStr</code> parameter is a <code>String</code>\nrepresenting a number. False if the <code>String</code> does not contain a parsable\ninteger."
        ],
        [
            "Exec of git-mv command\n\n@param repoPath\nA <code>File</code> instance for the path to the repository root (the parent\ndirectory of the .git directory) or a sub-directory in the working tree of the\nrepository to move/rename against. This argument must represent the absolute path to\nthe desired directory as returned by the <code>File.getPath()</code> method. If null\nis passed, a <code>NullPointerException</code> will be thrown.\n@param options\nThe options to git-mv command.\n@param source\nThe <code>List</code> of source file/folder/symlink which are to be moved to a\ndifferent location. The paths specified in this list must all be relative to the\npath specified in the <code>repository</code> parameter as returned by\n<code>File.getPath()</code>. A non-zero length argument is required for this\nparameter, otherwise a <code>NullPointerException</code> or\n<code>IllegalArgumentException</code> will be thrown.\n@param destination\nThe destination file/folder/symlink which the source is renamed or moved to. It\nshould be relative to the path specified in the <code>repository</code>\nparameter as returned by <code>File.getPath()</code>. A non-zero length argument is\nrequired for this parameter, otherwise a <code>NullPointerException</code> or\n<code>IllegalArgumentException</code> will be thrown.\n@return The results from the git-mv.\nIt is expected that GitMv does not notify when a move was successful. This follows\nthe response that git-mv itself gives. If the move/rename fails for any reason,\nproper exception messages are generated and thrown.\n@exception IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>access to a file is denied</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@exception JavaGitException\nThrown when there is an error executing git-mv."
        ],
        [
            "Returns the position for char 'c' in string 'str' starting from position 'pos'\nand searching towards the string beginning\n@param str\n@param from\n@param c\n@return char 'c' position or -1 if char is not found"
        ],
        [
            "Find a result set in the service binder.\n\n@param name\n@param service\n@return"
        ],
        [
            "Implementations of &lt;git log&gt; with options and one file to be added to index."
        ],
        [
            "This add a newly created commit object to the list of commits for a log."
        ],
        [
            "This adds a file to the list of files affected by a particular commit.\n@param filename The filename affected by the commit.\n@param linesAdded\tNumber of lines added in the above file in that particular commit.\n@param linesDeleted\tNumber of lines deleted in the above file in that particular commit."
        ],
        [
            "Git checkout with options and base branch information provided to &lt;git-checkout&gt; command."
        ],
        [
            "Git checkout without any options and branch information provided. Just a basic checkout\ncommand."
        ],
        [
            "Checks out a branch from the git repository with a given branch name."
        ],
        [
            "Checks out a list of files from repository, no checkout options provided."
        ],
        [
            "Checks out a list of file from repository, with &lt;tree-ish&gt; options provided."
        ],
        [
            "Checks out a file from repository from a particular branch"
        ],
        [
            "This is just a test method for verifying that a given ref is not of refType provided as one of the parameters.\n\n@param ref     This could be branch, sha1 etc.\n@param refType This is the <code>RefType</code> which the ref should not match."
        ],
        [
            "Gets the children of this directory.\n\n@return The children of this directory."
        ],
        [
            "Gets the file at the specified index from the removed file list.\n\n@param index\nThe index of the file to get. It must fall in the range:\n<code>0 &lt;= index &lt; getRemovedFilesSize()</code>.\n@return The file at the specified index."
        ],
        [
            "For checking a file or list of files from a branch.\n\n@param repositoryPath\npath to the Git repository.\n@param paths\nList of file paths that are to be checked out.\n@return GitCheckoutResponse object\n@throws JavaGitException thrown if -\n<li>if the output for &lt;git-checkout&gt; command generated an error.</li>\n<li>if processBuilder not able to run the command.</li>\n</ul>\n@throws IOException\nthrown if -\n<ul>\n<li>paths given do not have proper permissions.</li>\n<li>paths given do not exist at all.</li>\n</ul>"
        ],
        [
            "Checks out files from the repository when a tree-ish object is given as the reference.\n\n@param repositoryPath\nPath to the Git repository.\n@param ref\nA branch, or sha1 object.\n@param paths\n<code>List</code> of file paths that are to be checked out.\n@return <code>GitCheckoutResponse</code> object\n@throws JavaGitException\nThrown if -\n<li>the output for &lt;git-checkout&gt; command generated an error.</li>\n<li>processBuilder not able to run the command.</li>\n</ul>\n@throws IOException\nThrown if -\n<ul>\n<li>paths given do not have proper permissions.</li>\n<li>paths given do not exist at all.</li>\n</ul>"
        ],
        [
            "Sets the non-error message generated in the output of the &lt;git-add&gt; command.\n\n@param lineNumber\nline number at which the message appeared in output.\n@param commentString\nmessage itself."
        ],
        [
            "Sets the options for delete.\n\n@param options\nThe <code>GitBranchOptions</code> object.\n@param forceDelete\nThe forceDelete boolean flag. True if branch to be force deleted, false otherwise.\n@param remote\nThe remote boolean flag. True if a remote branch is being deleted, false otherwise."
        ],
        [
            "Inject a service into the service manager registry.\n\n@param klass\nClass to inject\n@throws DataException\n@throws IllegalAccessException\n@throws InstantiationException"
        ],
        [
            "Injects a single UCMService annotation into the ServiceManager registry.\n\n@param className\nFully qualified class name\n@param annotation\nA reference to a UCMService annotation\n@throws DataException"
        ],
        [
            "Sets the name of the new branch that need to be created from the base branch.\n\n@param newBranch\nNew branch of type <code>Ref</code> that will be created by &lt;git-checkout&gt;."
        ],
        [
            "Process the git-clone command, to make a clone of the git repository.\n\n@param workingDirectoryPath\nA <code>File</code> instance for the path to the working directory. This argument\nmust represent the absolute path to the desired directory as returned by the\n<code>File.getPath()</code> method. If null is passed, a\n<code>NullPointerException</code> will be thrown.\n@param options\nThe options for the git-clone command. If the value is null, a\n<code>NullPointerException</code> will be thrown.\n@param repository\nA <code>URL</code> instance for the repository to be cloned. If null is passed, a\n<code>NullPointerException</code> will be thrown.\n@param directory\nA <code>File</code> instance for the directory where the repository is to be cloned.\nIf null is passed, a <code>NullPointerException</code> will be thrown.\n@return The result of the git clone.\n@throws IOException\nThere are many reasons for which an <code>IOException</code> may be thrown.\nExamples include:\n<ul>\n<li>a directory doesn't exist</li>\n<li>a command is not found on the PATH</li>\n</ul>\n@throws JavaGitException\nThrown when there is an error executing git-clone."
        ],
        [
            "Begins injection of filters, including the Service and IdocScript injectors\nrequired to load other ucm entities."
        ],
        [
            "Replacement for getResources which works on 11g.\n\n<p>\nThe UCM 11G {@link ClassLoader} does not load component jars in the\nstandard manner, which means you cannot use\n{@link ClassLoader#getResources(String)} to find all instances of a\nspecific file in the jar path, instead we inspect the m_zipfiles map, where\nwe can query each zip file for the properties file.\n</p>\n\n<p>\nInstead, we use reflection to find all the loaded component jar files and\nsearch manually\n</p>\n\n@param classLoader\n@param configFileName\n@throws MalformedURLException"
        ],
        [
            "Central instance construction setup method.\n\n@param resetType\nThe type of reset to perform.\n@param commitName\nThe name of the commit to reset to."
        ],
        [
            "Adds a method to the registry and returns the UUID.\n\n@return"
        ],
        [
            "Main entry point which will delegate to the filter method with dependency\ninjection."
        ],
        [
            "Reduce the connection opened. This should always be called after calling getDatabaseConnection and only after that."
        ],
        [
            "Execute an action on the database. The opening and closing of the database connection is handled for you.\n\n@param dbConsumer Action you want to execute on the database"
        ],
        [
            "Executes a query on the database. Note that when calling close on the returned cursor the database connection count is reduces as well.\n\n@param table         Name of the table\n@param columns       Used columns of the queried table\n@param selection     Selection statement\n@param selectionArgs Selection arguments\n@param groupBy       SQL group by\n@param having        SQL having\n@param orderBy       SQL order by\n@return A Cursor containing the result, which reduces the database connection count when closed"
        ],
        [
            "Executes a raw query on the database. Note that when calling close on the returned cursor the database connection count is reduces as well.\n\n@param sql Raw SQL statement\n@return A Cursor containing the result, which reduces the database connection count when closed"
        ],
        [
            "Builds the command line.\n\n@param options\nThe options to build with.\n@param path\nIf just a single path, this is it.\n@param paths\nIf there are multiple paths, these are they. <code>path</code> must be null for\nthese paths to be used.\n@return The list of arguments for the command line."
        ],
        [
            "Returns the file at a given location in the addedFiles list\n\n@param index\nin the list and should be positive and less than no. of files added.\n@return added file at the index in addedFiles list."
        ],
        [
            "Returns the file at a given location in the deletedFiles list\n\n@param index\nin the list and should be positive and less than no. of files deleted.\n@return deleted file at the index in deleteFiles list."
        ],
        [
            "Returns the file at a given location in the modifiedFiles list.\n\n@param index\nin the list and it should be positive and less than total no. of files modified.\n@return modified file at the index in modifiedFiles list."
        ],
        [
            "Show object's status in the working directory\n\n@return Object's status in the working directory (untracked, changed but not updated, etc)."
        ],
        [
            "Gets the document header.\n\n@return the document header"
        ],
        [
            "Return array if all files added to dropzone.\n\n@return all files added to dropzone."
        ],
        [
            "Return number of added files.\n\n@return number of files"
        ],
        [
            "Match the given string."
        ],
        [
            "Move the entry to the beginning of the LinkedList."
        ],
        [
            "Remove the last element from the cache."
        ],
        [
            "Remove entries that are out of their maxLifetime."
        ],
        [
            "Resort the linked list. If this CacheEntry has more hits than the previous one move it up."
        ],
        [
            "Test whether 'find' can be found at position 'startPos' in the string 'src'."
        ],
        [
            "Makes the call to request an access token for an authorized user.\n\n@param requestToken not used.\n@param verifier the code query parameter that Globus included in the\nredirect after the authorization call.\n\n@return the access token."
        ],
        [
            "Adds an authorization header containing the bearer token to a request.\nIt is intended for use in API calls after getting the access token, such\nas requesting the user's profile.\n\n@param accessToken the user's access token.\n@param request the requests."
        ],
        [
            "Returns the URL for authorizing the user.\n\n@param config query parameters to add to the base URL.\n\n@return the URL for authorizing the user."
        ],
        [
            "This method is called when 'Finish' button is pressed in the wizard. We\nwill create an operation and run it using wizard as execution context."
        ],
        [
            "The worker method. It will find the container, create the file if missing\nor just replace its contents, and open the editor on the newly created\nfile."
        ],
        [
            "Creates page controls."
        ],
        [
            "Returns the default package name."
        ],
        [
            "Loads the group value when the page is displayed."
        ],
        [
            "Creates a human-readable representation of the query that will be created\nfrom this builder"
        ],
        [
            "Creates an ordered list of all parameter values registered at\nthe root criteria.\n\n@return list of parameter values"
        ],
        [
            "create controls and apply configurations."
        ],
        [
            "Adds PaletteItem to the specified category.\n\n@param category the category\n@param item the item"
        ],
        [
            "Returns PaletteItems which are contained by the specified category.\n\n@param category the category\n@return the array of items which are contained by the category"
        ],
        [
            "Correctly resizes the table so no phantom columns appear\n\n@param parent\nthe parent control\n@param buttons\nthe buttons\n@param table\nthe table\n@param column1\nthe first column\n@param column2\nthe second column\n@param column3\nthe third column"
        ],
        [
            "Get the currently selected template.\n\n@return"
        ],
        [
            "Returns template string to insert.\n\n@return String to insert or null if none is to be inserted"
        ],
        [
            "Load the last template name used in New HTML File wizard."
        ],
        [
            "Save template name used for next call to New HTML File wizard."
        ],
        [
            "Select a template in the table viewer given the template name. If\ntemplate name cannot be found or templateName is null, just select\nfirst item in table. If no items in table select nothing.\n\n@param templateName"
        ],
        [
            "Updates the pattern viewer."
        ],
        [
            "Adds an \"in\" restriction to a persistent field.\n\n@param relativePath relative path of the persistent field\n@param values expected values of the field\n@return {@link Criterion} instance"
        ],
        [
            "Creates a \"member of\" restriction.\n\n@param relativePath relative path of a collection\n@param value The value to check membership for\n@return new {@link Criterion} instance"
        ],
        [
            "Creates a \"not member of\" restriction.\n\n@param relativePath relative path of a collection\n@param value The value to check membership for\n@return new {@link Criterion} instance"
        ],
        [
            "Creates the field editors. Field editors are abstractions of\nthe common GUI blocks needed to manipulate various types\nof preferences. Each field editor knows how to save and\nrestore itself."
        ],
        [
            "Returns the last component of a dot-separated path.\n\n@param path relative or absolute path expression\n@return last component of path expression"
        ],
        [
            "This method is overridden to set the selected folder to web contents\nfolder if the current selection is outside the web contents folder."
        ],
        [
            "This method is overridden to set additional validation specific to html\nfiles."
        ],
        [
            "Verifies if fileName is valid name for content type. Takes base content\ntype into consideration.\n\n@param fileName\n@return true if extension is valid for this content type"
        ],
        [
            "Adds default extension to the filename\n\n@param filename\n@return"
        ],
        [
            "Returns the project that contains the specified path\n\n@param path\nthe path which project is needed\n@return IProject object. If path is <code>null</code> the return value is\nalso <code>null</code>."
        ],
        [
            "Get the current user's ID from the session\n\n@return string user id or null if no one is logged in"
        ],
        [
            "Creates Structured Twext Editot of the multi-page editor, which contains an HTML editor."
        ],
        [
            "Saves the multi-page editor's document as another file. Also updates the\ntext for page 0's tab, and updates this multi-page editor's input to\ncorrespond to the nested editor's."
        ],
        [
            "Closes all project files on project close."
        ],
        [
            "Sorts the words in page 0, and shows them in page 2."
        ],
        [
            "Method to create a human readable log message regarding a generated query.\n\n@param query the JPQL query string\n@param parameterValues the parameter values of the query\n@return log string"
        ],
        [
            "Helper method to create a string representation of an object.\n\n@param obj the object to print\n@return a string representation of the object"
        ],
        [
            "Inserts a simple timeline item.\n\n@param getCredential\n(credential) the user's credential\n@param item\nthe item to insert"
        ],
        [
            "Inserts an item with an attachment provided as a byte array.\n\n@param item\nthe item to insert\n@param attachmentContentType\nthe MIME type of the attachment (or null if none)\n@param attachmentData\ndata for the attachment (or null if none)"
        ],
        [
            "Inserts an item with an attachment provided as an input stream.\n\n@param item\nthe item to insert\n@param attachmentContentType\nthe MIME type of the attachment (or null if none)\n@param attachmentInputStream\ninput stream for the attachment (or null if none)"
        ],
        [
            "Validates that the keyword expected was returned. Otherwise throws an\nexception with the message returned included.\n\n@param response\nis the response to check\n@param keyword\nis the keyword to expected"
        ],
        [
            "Renders the order to a ORDER BY substring of JPQL query\n\n@param criteria The {@link Criteria} the order is associated with\n@param queryBuilder The builder of the JPQL query\n@return the generated query string"
        ],
        [
            "Returns the template store for the html editor templates.\n\n@return the template store for the html editor templates"
        ],
        [
            "Returns the template context type registry for the html plugin.\n\n@return the template context type registry for the html plugin"
        ],
        [
            "Returns the action registed with the given text editor.\n@return IAction or null if editor is null."
        ],
        [
            "Creates the datasource config based on the provided parameters."
        ],
        [
            "Appends LIMIT and OFFSET for POSTGRESQL SQL queries\n\n<code>\nSELECT select_list\nFROM table_expression\n[ ORDER BY ... ]\n[ LIMIT { number | ALL } ] [ OFFSET number ]\n</code>\n\n@param sql\n@param page"
        ],
        [
            "Create a value property from a literal value.\n\n@param name    the property name\n@param value   the property value\n@param <N>     the property name type\n@return  a new NamedProperty with the supplied name and value"
        ],
        [
            "Create a value property from a string value.\n\n@param name    the property name\n@param value   the property value\n@param <N>     the property name type\n@return  a new NamedProperty with the supplied name and value"
        ],
        [
            "Create a value property from a nested document value.\n\n@param name    the property name\n@param value   the property value\n@param <N>     the property name type\n@return  a new NamedProperty with the supplied name and value"
        ],
        [
            "Create a string literal.\n\n@param value   the property value\n@return  a new NamedProperty with the supplied name and value"
        ],
        [
            "Create a URI literal.\n\n@param value   the property value\n@return  a new NamedProperty with the supplied name and value"
        ],
        [
            "Create a typed literal.\n\n@param value   the property value\n@return  a new NamedProperty with the supplied name and value"
        ],
        [
            "Create a QName from a namespace URI, local part and prefix.\n\n@param namespaceURI  the namespace URI\n@param localPart     the local part\n@param prefix        the prefix\n@return  a QName with the supplied namespace URI, localPart and prefix"
        ],
        [
            "This method is invoked by the web container to initialise the\nfilter at startup.\n\n@param filterConfig The filter configuration.\n\n@throws ServletException On a filter initialisation exception."
        ],
        [
            "Call this method when the entity is updated to increment its version and update its lastupdatedByEntityId\n\n@param lastupdatedByEntityId"
        ],
        [
            "Sub-classes should override this to parse sub-class specific fields.\n\nThis is invoked by init(InputStream), when an unknown field is encountered\n\n@param parser"
        ],
        [
            "Call this method when the entity is updated before it is persisted to increment its version and update its lastupdatedByEntityId\n\n@param lastupdatedByEntityId\nREQUIRED"
        ],
        [
            "Closes a port.  All connections on this port will be closed.\n\n@param port The port to close.  A value of less than -1 closes all ports"
        ],
        [
            "Gozirra is probably not the best choice for a stand-alone server.  If\nyou are tempted to use it as such, you might want to look at ActiveMQ,\nwhich is a feature-rich MOM solution.  Gozirra is intended primarily\nto be an ultra-light embedded messaging library.\n\nIf you still want to run Gozirra as a stand-alone server, then you'll\nneed to know about how to call it.  The main() method takes a single\nargument: a port to run on.  It will run until you ^C it."
        ],
        [
            "This method will only be called if we know that JSR 303 1.0 Bean Validation API\nand compliant implementation are available on classpath."
        ],
        [
            "This method will only be called if we know that JSR 303 1.1 Bean Validation API\nand compliant implementation are available on classpath.\n\nMethod validation was first introduced in version 1.1"
        ],
        [
            "Subscribe to a channel.\n\n@param name The name of the channel to listen on\n@param headers Additional headers to send to the server.\n@param listener A listener to receive messages sent to the channel"
        ],
        [
            "Unsubscribe a single listener from a channel.  This does not\nsend a message to the server unless the listener is the only\nlistener of this channel.\n\n@param name The name of the channel to unsubscribe from.\n@param l The listener to unsubscribe"
        ],
        [
            "Unsubscribe from a channel.  Automatically unregisters all\nlisteners of the channel.  To re-subscribe with listeners,\nsubscribe must be passed the listeners again.\n\n@param name The name of the channel to unsubscribe from.\n@param header Additional headers to send to the server."
        ],
        [
            "Unsubscribe from a channel.  Automatically unregisters all\nlisteners of the channel.  To re-subscribe with listeners,\nsubscribe must be passed the listeners again.  This method\nblocks until a receipt is received from the server.\n\n@param name The name of the channel to unsubscribe from."
        ],
        [
            "Send a message to a channel.\n\n@param dest The name of the channel to send the message to\n@param mesg The message to send.\n@param header Additional headers to send to the server."
        ],
        [
            "Get the next unconsumed message for a particular channel.   This is\nnon-blocking.\n\n@param name the name of the channel to search for\n\n@return the next message for the channel, or null if the queue\ncontains no messages for the channel."
        ],
        [
            "Checks to see if a receipt has come in.\n\n@param receipt_id the id of the receipts to find"
        ],
        [
            "Deletes all receipts with a given ID\n\n@param receipt_id the id of the receipts to delete"
        ],
        [
            "Logs dead event as warnings. Dead events are events that posted, but there are no registered subscribers for that\nevent type.\n\n@param deadEvent"
        ],
        [
            "Convert a value to a specific class.\n\nThe algorithm for finding a suitable converter is as follows:\n\nFind converters that is able to convert both source and target; a exact or\nsuperclass match. Pick the converter that have the best target match, if both\nare equal, pick the one with best source match.\n\nThat is, the converter that is most specialized in converting a value to\na specific target class will be prioritized, as long as it recognizes the source\nvalue.\n\n@param source value to convert.\n@param targetclass class to convert to.\n@return converted value"
        ],
        [
            "Returns the priority of the warning.\n\n@param lines\nnumber of duplicate lines\n@return the priority of the warning"
        ],
        [
            "Execute this command according to the user input arguments\nparsed by the parser."
        ],
        [
            "Convert options to appropriate type and inject them into\nthe command instance."
        ],
        [
            "Add or remove parameters to fit the method declaration and also convert them\nto appropriate data type."
        ],
        [
            "Performs the migration of a personality. This must be run under the table lock so that only one thread can use it at a time."
        ],
        [
            "Tags an HTTP servlet request to provide CORS information to\ndownstream handlers.\n\n<p>Tagging is provided via {@code HttpServletRequest.setAttribute()}.\n\n<ul>\n<li>{@code cors.isCorsRequest} set to {@code true} or {@code false}.\n<li>{@code cors.origin} set to the value of the \"Origin\" header,\n{@code null} if undefined.\n<li>{@code cors.requestType} set to \"actual\" or \"preflight\" (for\nCORS requests).\n<li>{@code cors.requestHeaders} set to the value of the\n\"Access-Control-Request-Headers\" or {@code null} if\nundefined (added for preflight CORS requests only).\n</ul>\n\n@param request The servlet request to inspect and tag. Must not be\n{@code null}."
        ],
        [
            "Handles a simple or actual CORS request.\n\n<p>CORS specification: <a href=\"http://www.w3.org/TR/access-control/#resource-requests\">Simple Cross-Origin Request, Actual Request, and Redirects</a>\n\n@param request  The HTTP request.\n@param response The HTTP response.\n\n@throws InvalidCORSRequestException    If not a valid CORS simple/\nactual request.\n@throws CORSOriginDeniedException      If the origin is not allowed.\n@throws UnsupportedHTTPMethodException If the requested HTTP method\nis not supported by the CORS\npolicy."
        ],
        [
            "Handles a preflight CORS request.\n\n<p>CORS specification: <a href=\"http://www.w3.org/TR/access-control/#resource-preflight-requests\">Preflight Request</a>\n\n@param request  The HTTP request.\n@param response The HTTP response.\n\n@throws InvalidCORSRequestException    If not a valid CORS preflight\nrequest.\n@throws CORSOriginDeniedException      If the origin is not allowed.\n@throws UnsupportedHTTPMethodException If the requested HTTP method\nis not supported by the CORS\npolicy.\n@throws UnsupportedHTTPHeaderException If the requested HTTP header\nis not supported by the CORS\npolicy."
        ],
        [
            "Sets the commandline options.\n\n@param options\tthe options to use\n@return\t\ttrue if successful\n@throws Exception\tin case of an invalid option"
        ],
        [
            "Performs some checks.\n\n@return\t\tnull if successful, otherwise error message"
        ],
        [
            "Filters the list of strings with a regular expression.\n\n@param lines\tthe list to filter\n@param regexp\tthe regular expression to use\n@param invert\twhether to invert the matching sense\n@return\t\tthe filtered list"
        ],
        [
            "Builds the regular expression for the packages to keep.\n\n@return\t\tthe regexp"
        ],
        [
            "Outputs the dependencies on stdout."
        ],
        [
            "Default implementation of compareTo for the InstanceManager."
        ],
        [
            "Retrieve IOUtils implementation\n@return IOUtils instance"
        ],
        [
            "Retrieve ImageUtils implementation\n@return ImageUtils instance"
        ],
        [
            "Retrieve PriceUtils implementation\n@return PriceUtils instance"
        ],
        [
            "Retrieve ResourceUtils implementation\n@return ResourceUtils instance"
        ],
        [
            "Retrieve ZipUtils implementation\n@return ZipUtils instance"
        ],
        [
            "Retrieve DigestUtils implementation\n@return DigestUtils instance"
        ],
        [
            "Retrieve StringUtils implementation\n@return StringUtils instance"
        ],
        [
            "Retrieve ResourceService implementation\n@return ResourceService instance"
        ],
        [
            "Retrieve PricingService implementation\n@return PricingService instance"
        ],
        [
            "Retrieve InstanceService implementation\n@return InstanceService instance"
        ],
        [
            "Get an individual uploaded file as a digital object. For consistency this\nshould be in a list.\n\n@return a list of one object ID\n@throws HarvesterException if there was an error retrieving the objects"
        ],
        [
            "Store the provided file in storage. Ensure proper queue routing is set\nin object properties.\n\n@param file : The file to store\n@return String : The OID of the stored object\n@throws HarvesterException : if there was an error accessing storage\n@throws StorageException : if there was an error writing to storage"
        ],
        [
            "Take a list of strings from a Java Map, concatenate the values together\nand store them in a Properties object using the Map's original key.\n\n@param props : Properties object to store into\n@param details : The full Java Map\n@param field : The key to use in both objects"
        ],
        [
            "Make sure that the metadata exists. If it does not exist, create\nthe metadata table from scratch and register its creation.\n@return A migration result if the table was created or null if it already existed."
        ],
        [
            "Creates the dry source detail view.\n\n@param owner\nthe owner\n@param container\nthe container\n@param defaultEncoding\nthe default encoding\n@param fromString\nfrom ID\n@param toString\nto ID\n@return the detail view or <code>null</code>"
        ],
        [
            "Performs on-the-fly validation on thresholds for high and normal warnings.\n\n@param highThreshold\nthe threshold for high warnings\n@param normalThreshold\nthe threshold for normal warnings\n@param message\nthe validation message\n@return the validation result"
        ],
        [
            "Validate that the method parameters if Bean Validation 1.1 is available\non classpath."
        ],
        [
            "Validate that the options if Bean Validation is available on classpath."
        ],
        [
            "Checks to see if JSR303 implementation is\navailable on classpath."
        ],
        [
            "Returns true if this loader accepts the URI."
        ],
        [
            "Load a file from an URI."
        ],
        [
            "Start evaluating the user input and eventually execute the command\nrequested by the user.\n\n@throws RuntimeException Any runtime exceptions thrown by either this\nlibrary or user commands will fall through and thrown from this method."
        ],
        [
            "Find all commands available on classpath."
        ],
        [
            "The purpose of this methods is to allow the Handler to return an HTTP response. For example, return an appropriate response that the request was accepted\nper the requirements of a REST API.\n\n*** NOTE: to indicate that this method handled the request, set Request.handled to true: <code>baseRequest.setHandled(true);</code>\n\n@param target\n@param baseRequest\n@param request\n@param response\n@throws IOException\n@throws ServletException"
        ],
        [
            "Validate the request and extract any data from the HTTP request that will be required to process the request asynchronously.\n\nIf the request is invalid, then handle the request appropriately.\n\n*** NOTE: to indicate that this method handled the request, set Request.handled to true: <code>baseRequest.setHandled(true);</code>\n\n@param target\n@param baseRequest\n@param request\n@param response\n@return"
        ],
        [
            "Bring the current database to the requested levels."
        ],
        [
            "Run validation on the database. Make sure that all the changes recorded in the database are the same as the ones that should be applied."
        ],
        [
            "Returns the full history of all applied migrations."
        ],
        [
            "Creates and initializes the Migratory metadata table.\n\nReturns null if the table already exists, returns a list of migration results\nfor the migrations executed otherwise."
        ],
        [
            "Turns these lines in a series of statements."
        ],
        [
            "Each notable can only have one note per calendar, thus this method returns a single object rather than a list."
        ],
        [
            "region > updateLink"
        ],
        [
            "Parse the options for the command.\n\n@param args includes the options and arguments, command word have been stripped.\n@return the remaining terminal args, if any"
        ],
        [
            "Transmit a message to clients and listeners."
        ],
        [
            "Returns the duplicate source code fragment as formatted HTML string.\n\n@return the duplicate source code fragment"
        ],
        [
            "Returns the link with the specified hash code.\n\n@param linkHashCode\nthe hash code of the linked annotation\n@return the link with the specified hash code"
        ],
        [
            "Transmit a message to the server"
        ],
        [
            "If the JAXBContext is not cached, then it will create a new instance and cache it.\n\n@param contextPath\nREQUIRED\n@return"
        ],
        [
            "Recursively creates a list of all the visible boxes in a box subtree. The nodes are\nadded to the end of a specified list. The previous content of the list\nremains unchanged. The 'viewport' box is ignored.\n@param root the source root box\n@param list the list that will be filled with the nodes"
        ],
        [
            "Creates a tree of box nesting based on the content bounds of the boxes.\nThis tree is only used for determining the backgrounds.\n\n@param boxlist the list of boxes to build the tree from\n@param useBounds when set to {@code true}, the full or visual bounds are used for constructing the tree\ndepending on the {@code useVisualBounds} parameter. Otherwise, the original box hierarchy is used.\n@param useVisualBounds when set to {@code true} the visual bounds are used for constructing the tree. Otherwise,\nthe content bounds are used.\n@param preserveAux when set to {@code true}, all boxes are preserved. Otherwise, only the visually\ndistinguished ones are preserved."
        ],
        [
            "Computes efficient background color for all the nodes in the tree"
        ],
        [
            "Set the real file of component url\n@param url the component url\n@param realFile the real file"
        ],
        [
            "Get the real file of component url\n@param url the component url\n@return the real file\n@throws IOException"
        ],
        [
            "Create a version range from a string representation\n\nSome spec examples are\n<ul>\n<li><code>1.0</code> Version 1.0</li>\n<li><code>[1.0,2.0)</code> Versions 1.0 (included) to 2.0 (not included)</li>\n<li><code>[1.0,2.0]</code> Versions 1.0 to 2.0 (both included)</li>\n<li><code>[1.5,)</code> Versions 1.5 and higher</li>\n<li><code>(,1.0],[1.2,)</code> Versions up to 1.0 (included) and 1.2 or higher</li>\n</ul>\n\n@param spec string representation of a version or version range\n@return a new {@link VersionRange} object that represents the spec\n@throws net.happyonroad.component.core.exception.InvalidVersionSpecificationException"
        ],
        [
            "Concatenates another transformation to this transformation.\n@param src\n@return A new concatenated transformation."
        ],
        [
            "Transforms a rectangle to other rectangle using the given transformation.\n@param rect the source rectangle\n@return the bounding box of the transformed rectangle."
        ],
        [
            "Returns the minimal bounds of the box for enclosing all the contained boxes.\n@return the minimal visual bounds"
        ],
        [
            "Re-computes the visual bounds of the whole subtree."
        ],
        [
            "Recomputes the total bounds of the whole subtree. The bounds of each box will\ncorrespond to its visual bounds. If the child boxes exceed the parent box,\nthe parent box bounds will be expanded accordingly."
        ],
        [
            "Computes node the content bounds. They correspond to the background bounds\nhowever, when a border is present, it is included in the contents. Moreover,\nthe box is clipped by its clipping box."
        ],
        [
            "Obtains the top border of the box\n@return the width of the border or 0 when there is no border"
        ],
        [
            "Obtains the bottom border of the box\n@return the width of the border or 0 when there is no border"
        ],
        [
            "Obtains the left border of the box\n@return the width of the border or 0 when there is no border"
        ],
        [
            "Obtains the right border of the box\n@return the width of the border or 0 when there is no border"
        ],
        [
            "Get the effective text color. If the text color is set, it is returned.\nWhen the color is not set, the parent boxes are considered.\n@return the background color string"
        ],
        [
            "Checks if another node is fully located inside the content bounds of this box.\n@param childNode the node to check\n@return <code>true</code> if the child node is completely inside this node, <code>false</code> otherwise"
        ],
        [
            "Goes through the parent's children, takes all the nodes that are inside of this node\nand makes them the children of this node. Then, recursively calls the children to take\ntheir nodes."
        ],
        [
            "Process user specified command\n\n@param command the command"
        ],
        [
            "Use this data source to create an embedded database."
        ],
        [
            "Use this data source to connect to an existing database."
        ],
        [
            "Called when the configuration and environment come into scope.\n\n@param config Provided by Dropwizard.\n@param env    Provided by Dropwizard."
        ],
        [
            "Handles the actual API calls and caching.\n\nThis is part of a static class and therefore is not thread-safe. This method\nis not for public consumption."
        ],
        [
            "Registers the specified command instance into the shell.\n\n@param command Command to be registered."
        ],
        [
            "Registers the specified command instance into the shell with the specified name.\n\n@param name Name of command.\n@param command Command to be registered."
        ],
        [
            "Unregisters the command corresponding to the specified name from the shell.\n\n@param name Name of command."
        ],
        [
            "Executes the specified command line input.\n\n@param line Command line input."
        ],
        [
            "Runs into the REPL mode."
        ],
        [
            "Committee Search\nThis method allows searching by state and chamber.\nCommittee objects returned by this method do not include the list of members by default.\n\n@param state\n@param chamber\n@return {@link Committees}"
        ],
        [
            "Committee Detail\nThis method returns the full committee object given a committee id.\n\n@param id\n@return {@link Committee} object given a committee id."
        ],
        [
            "Connect to the JMX service.\n\n@param  host      the host.\n@param  port      the port.\n@param  login     the login.\n@param  password  the password.\n\n@return  the JMX connector.\n\n@throws  IOException  if unable to connect to the JMX service."
        ],
        [
            "Get the property.\n\n@param  properties  the properties.\n@param  key         the property key.\n\n@return  the property.\n\n@throws  IllegalArgumentException  if the property does not exist."
        ],
        [
            "Invoke the method and return the result.\n\n@param  proxy   the proxy.\n@param  method  the method.\n@param  args    the method arguments.\n\n@return  the result of invoking the method.\n\n@throws  Throwable  if unable to invoke the method."
        ],
        [
            "List districts for state.\n\n@param state\n@return {@link Districts}"
        ],
        [
            "List districts for state and chamber.\n\n@param state\n@param chamber\n@return {@link Districts}"
        ],
        [
            "Get geographic boundary for a district.\n\n@param boundary_id\n@return {@link District}"
        ],
        [
            "Get detailed metadata for a particular state.\n\n@param state\n@return {@link Metadata}"
        ],
        [
            "Create the MBean object.\n\n@param  interfaceClass  the MBean interface class.\n\n@return  the MBean object."
        ],
        [
            "Register the MBean represented by the interface class.\n\n@param  interfaceClass  the MBean interface class.\n@param  objectName      the MBean object name.\n\n@return  the MBean object name.\n\n@throws  IllegalArgumentException  if the interface class is invalid.\n@throws  MBeanException            if unable to register the MBean."
        ],
        [
            "Unregister the MBean represented by the object name.\n\n@param  objectName  the MBean object name.\n\n@throws  MBeanException  if unable to unregister the MBean."
        ],
        [
            "Validate the MBean represented by the interface class and object name.\n\n@param  interfaceClass         the MBean interface class.\n@param  objectName             the MBean object name.\n@param  mBeanServerConnection  the MBean server connection.\n\n@throws  IllegalArgumentException  if the MBean is invalid.\n@throws  IOException               if unable to validate the MBean."
        ],
        [
            "Mint a unique identifier as a UUID\n\n@return uuid"
        ],
        [
            "Add the specified value to the field. First, validate the value if a\nvalidator was specified. Then look up any field converter, then any type\nconverter, and if we can't find any, throw an exception."
        ],
        [
            "Get Legislators by State.\n\n@param state Filter by state.\n@return {@link Legislators}"
        ],
        [
            "Get Legislators by State and Active filters.\n\n@param state Filter by state.\n@param active 'true' (default) to only include current legislators, 'false' will include all legislators\n@return {@link Legislators}"
        ],
        [
            "Search for Legislators by State and Term.\n\n@param state Filter by state.\n@param term Only legislators that have a role in a certain term.\n@return {@link Legislators}"
        ],
        [
            "This method allows looking up a legislator by a number of parameters, the results do not include the roles or old_roles items by default.\n\nPass null for parameters that are not being filtered.\n\n@param state Filter by state.\n@param active 'true' (default) to only include current legislators, 'false' will include all legislators\n@param term Only legislators that have a role in a certain term.\n@param chamber Only legislators with a role in the specified chamber.\n@param district Only legislators that have represented the specified district.\n@param party Only legislators that have been associated with a specified party\n@param first_name Filter by first name.\n@param last_name Filter by last name."
        ],
        [
            "This method returns the full detail for a legislator.\n\n@param id\n@return {@link Legislator}"
        ],
        [
            "Compares with the specified object by ordinal.\n\n@param o The object to be compared.\n@return <code>0</code> If this object is the same ordinal to the\nspecified object."
        ],
        [
            "Set the class that each row should be mapped to."
        ],
        [
            "Proceeds this method invocation.\n\n@return The result of this invocation proceeding.\n@throws Throwable If any exceptions occur while this method invocation is\nproceeding."
        ],
        [
            "Stops to measure.\n\n@return Elapsed time."
        ],
        [
            "Setup authentication in httpclient.\n@return the setup of authentication"
        ],
        [
            "Instantiate a request object based on the method variable."
        ],
        [
            "Remove unwanted text from the minter service response to produce the desired identifier.\nOverride this method for processing more complex than a simple regex replacement.\n@param responseText the response text\n@throws IOException if exception occurred\n@return the response"
        ],
        [
            "Extract the desired identifier value from an XML response using XPath"
        ],
        [
            "Mint a unique identifier using an external HTTP API.\n@return The generated identifier."
        ],
        [
            "The starting point for using a ConfigurationBinder. A class needs to be passed through, along with a binder to\neventually bind the configuration with.\n\n@param klass  The Configuration Class to load & bind.\n@param binder The {@link com.google.inject.Binder} from the {@link io.graceland.plugin.AbstractPlugin}.\n@param <T>    The Configuration Type.\n@return Returns a working ConfigurationBinder using the provided type and class information."
        ],
        [
            "This method will bind the class to a particular instance.\n\n@param configuration"
        ],
        [
            "Returns a new instance of FilterPattern, using the passed in arguments."
        ],
        [
            "Proceeds this constructor invocation.\n\n@return The instance of the specified class.\n@throws Throwable If any exceptions occur while this invocation is\nproceeding."
        ]
    ]
}